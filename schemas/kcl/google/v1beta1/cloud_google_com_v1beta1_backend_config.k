"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BackendConfig:
    r"""
    cloud google com v1beta1 backend config

    Attributes
    ----------
    apiVersion : str, default is "cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BackendConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudGoogleComV1beta1BackendConfigSpec, default is Undefined, optional
        spec
    status : any, default is Undefined, optional
        status
    """


    apiVersion: "cloud.google.com/v1beta1" = "cloud.google.com/v1beta1"

    kind: "BackendConfig" = "BackendConfig"

    metadata?: v1.ObjectMeta

    spec?: CloudGoogleComV1beta1BackendConfigSpec

    status?: any


schema CloudGoogleComV1beta1BackendConfigSpec:
    r"""
    BackendConfigSpec is the spec for a BackendConfig resource

    Attributes
    ----------
    cdn : CloudGoogleComV1beta1BackendConfigSpecCdn, default is Undefined, optional
        cdn
    connectionDraining : CloudGoogleComV1beta1BackendConfigSpecConnectionDraining, default is Undefined, optional
        connection draining
    customRequestHeaders : CloudGoogleComV1beta1BackendConfigSpecCustomRequestHeaders, default is Undefined, optional
        custom request headers
    healthCheck : CloudGoogleComV1beta1BackendConfigSpecHealthCheck, default is Undefined, optional
        health check
    iap : CloudGoogleComV1beta1BackendConfigSpecIap, default is Undefined, optional
        iap
    securityPolicy : CloudGoogleComV1beta1BackendConfigSpecSecurityPolicy, default is Undefined, optional
        security policy
    sessionAffinity : CloudGoogleComV1beta1BackendConfigSpecSessionAffinity, default is Undefined, optional
        session affinity
    timeoutSec : int, default is Undefined, optional
        timeout sec
    """


    cdn?: CloudGoogleComV1beta1BackendConfigSpecCdn

    connectionDraining?: CloudGoogleComV1beta1BackendConfigSpecConnectionDraining

    customRequestHeaders?: CloudGoogleComV1beta1BackendConfigSpecCustomRequestHeaders

    healthCheck?: CloudGoogleComV1beta1BackendConfigSpecHealthCheck

    iap?: CloudGoogleComV1beta1BackendConfigSpecIap

    securityPolicy?: CloudGoogleComV1beta1BackendConfigSpecSecurityPolicy

    sessionAffinity?: CloudGoogleComV1beta1BackendConfigSpecSessionAffinity

    timeoutSec?: int


schema CloudGoogleComV1beta1BackendConfigSpecCdn:
    r"""
    CDNConfig contains configuration for CDN-enabled backends.

    Attributes
    ----------
    cachePolicy : CloudGoogleComV1beta1BackendConfigSpecCdnCachePolicy, default is Undefined, optional
        cache policy
    enabled : bool, default is Undefined, required
        enabled
    """


    cachePolicy?: CloudGoogleComV1beta1BackendConfigSpecCdnCachePolicy

    enabled: bool = False


schema CloudGoogleComV1beta1BackendConfigSpecCdnCachePolicy:
    r"""
    CacheKeyPolicy contains configuration for how requests to a CDN-enabled backend are cached.

    Attributes
    ----------
    includeHost : bool, default is Undefined, optional
        If true, requests to different hosts will be cached separately.
    includeProtocol : bool, default is Undefined, optional
        If true, http and https requests will be cached separately.
    includeQueryString : bool, default is Undefined, optional
        If true, query string parameters are included in the cache key according to QueryStringBlacklist and QueryStringWhitelist. If neither is set, the entire query string is included and if false the entire query string is excluded.
    queryStringBlacklist : [str], default is Undefined, optional
        Names of query strint parameters to exclude from cache keys. All other parameters are included. Either specify QueryStringBlacklist or QueryStringWhitelist, but not both.
    queryStringWhitelist : [str], default is Undefined, optional
        Names of query string parameters to include in cache keys. All other parameters are excluded. Either specify QueryStringBlacklist or QueryStringWhitelist, but not both.
    """


    includeHost?: bool

    includeProtocol?: bool

    includeQueryString?: bool

    queryStringBlacklist?: [str]

    queryStringWhitelist?: [str]


schema CloudGoogleComV1beta1BackendConfigSpecConnectionDraining:
    r"""
    ConnectionDrainingConfig contains configuration for connection draining. For now the draining timeout. May manage more settings in the future.

    Attributes
    ----------
    drainingTimeoutSec : int, default is Undefined, optional
        Draining timeout in seconds.
    """


    drainingTimeoutSec?: int


schema CloudGoogleComV1beta1BackendConfigSpecCustomRequestHeaders:
    r"""
    CustomRequestHeadersConfig contains configuration for custom request headers

    Attributes
    ----------
    headers : [str], default is Undefined, optional
        headers
    """


    headers?: [str]


schema CloudGoogleComV1beta1BackendConfigSpecHealthCheck:
    r"""
    HealthCheckConfig contains configuration for the health check.

    Attributes
    ----------
    checkIntervalSec : int, default is Undefined, optional
        CheckIntervalSec is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
    healthyThreshold : int, default is Undefined, optional
        HealthyThreshold is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
    port : int, default is Undefined, optional
        port
    requestPath : str, default is Undefined, optional
        RequestPath is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
    timeoutSec : int, default is Undefined, optional
        TimeoutSec is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
    $type : str, default is Undefined, optional
        Type is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
    unhealthyThreshold : int, default is Undefined, optional
        UnhealthyThreshold is a health check parameter. See https://cloud.google.com/compute/docs/reference/rest/v1/healthChecks.
    """


    checkIntervalSec?: int

    healthyThreshold?: int

    port?: int

    requestPath?: str

    timeoutSec?: int

    $type?: str

    unhealthyThreshold?: int


schema CloudGoogleComV1beta1BackendConfigSpecIap:
    r"""
    IAPConfig contains configuration for IAP-enabled backends.

    Attributes
    ----------
    enabled : bool, default is Undefined, required
        enabled
    oauthclientCredentials : CloudGoogleComV1beta1BackendConfigSpecIapOauthclientCredentials, default is Undefined, optional
        oauthclient credentials
    """


    enabled: bool = False

    oauthclientCredentials?: CloudGoogleComV1beta1BackendConfigSpecIapOauthclientCredentials


schema CloudGoogleComV1beta1BackendConfigSpecIapOauthclientCredentials:
    r"""
    OAuthClientCredentials contains credentials for a single IAP-enabled backend.

    Attributes
    ----------
    clientID : str, default is Undefined, optional
        Direct reference to OAuth client id.
    clientSecret : str, default is Undefined, optional
        Direct reference to OAuth client secret.
    secretName : str, default is Undefined, required
        The name of a k8s secret which stores the OAuth client id & secret.
    """


    clientID?: str

    clientSecret?: str

    secretName: str = ""


schema CloudGoogleComV1beta1BackendConfigSpecSecurityPolicy:
    r"""
    SecurityPolicyConfig contains configuration for CloudArmor-enabled backends. If not specified, the controller will not reconcile the security policy configuration. In other words, users can make changes in GCE without the controller overwriting them.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the security policy that should be associated. If set to empty, the existing security policy on the backend will be removed.
    """


    name: str = ""


schema CloudGoogleComV1beta1BackendConfigSpecSessionAffinity:
    r"""
    SessionAffinityConfig contains configuration for stickiness parameters.

    Attributes
    ----------
    affinityCookieTtlSec : int, default is Undefined, optional
        affinity cookie Ttl sec
    affinityType : str, default is Undefined, optional
        affinity type
    """


    affinityCookieTtlSec?: int

    affinityType?: str


