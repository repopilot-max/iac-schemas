"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema TrustConfig:
    r"""
    security cloud google com v1alpha1 trust config

    Attributes
    ----------
    apiVersion : str, default is "security.cloud.google.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "TrustConfig", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : SecurityCloudGoogleComV1alpha1TrustConfigSpec, default is Undefined, required
        spec
    status : SecurityCloudGoogleComV1alpha1TrustConfigStatus, default is Undefined, optional
        status
    """


    apiVersion: "security.cloud.google.com/v1alpha1" = "security.cloud.google.com/v1alpha1"

    kind: "TrustConfig" = "TrustConfig"

    metadata?: v1.ObjectMeta

    spec: SecurityCloudGoogleComV1alpha1TrustConfigSpec

    status?: SecurityCloudGoogleComV1alpha1TrustConfigStatus


schema SecurityCloudGoogleComV1alpha1TrustConfigSpec:
    r"""
    security cloud google com v1alpha1 trust config spec

    Attributes
    ----------
    trustStores : [SecurityCloudGoogleComV1alpha1TrustConfigSpecTrustStoresItems0], default is Undefined, optional
        Configuration for trusting identities from a given SPIFFE trust domain.

        If there are multiple entries for a given SPIFFE trust domain, the certificate
        issuance machinery in the cluster will reject the overall config as invalid.

    """


    trustStores?: [SecurityCloudGoogleComV1alpha1TrustConfigSpecTrustStoresItems0]


schema SecurityCloudGoogleComV1alpha1TrustConfigSpecTrustStoresItems0:
    r"""
    security cloud google com v1alpha1 trust config spec trust stores items0

    Attributes
    ----------
    trustAnchors : [SecurityCloudGoogleComV1alpha1TrustConfigSpecTrustStoresItems0TrustAnchorsItems0], default is Undefined, optional
        trust anchors
    trustDomain : str, default is Undefined, required
        The SPIFFE trust domain to which this trust anchor applies.

    """


    trustAnchors?: [SecurityCloudGoogleComV1alpha1TrustConfigSpecTrustStoresItems0TrustAnchorsItems0]

    trustDomain: str


schema SecurityCloudGoogleComV1alpha1TrustConfigSpecTrustStoresItems0TrustAnchorsItems0:
    r"""
    security cloud google com v1alpha1 trust config spec trust stores items0 trust anchors items0

    Attributes
    ----------
    certificateAuthorityServiceURI : str, default is Undefined, optional
        Retrieve and trust the root certificates of this GCP Certificate Authority
        Service CA Pool.  A resource URI of the form
        //privateca.googleapis.com/projects/{project}/locations/{location}/caPools/{pool_name}

    pemCertificate : str, default is Undefined, optional
        Additional CA certificates to trust.

        Each entry is a PEM-encoded certificate to use as a trust anchor.  Each
        entry should contain only one certificate; configurations with multiple
        certificates per entry will be rejected as invalid.

    spiffeTrustBundleEndpoint : str, default is Undefined, optional
        An HTTPS endpoint that returns a list of trusted CA certificates in SPIFFE
        trust bundle format [1].

        [1] https://github.com/spiffe/spiffe/blob/master/standards/SPIFFE_Trust_Domain_and_Bundle.md#4-spiffe-bundle-format

    """


    certificateAuthorityServiceURI?: str

    pemCertificate?: str

    spiffeTrustBundleEndpoint?: str


schema SecurityCloudGoogleComV1alpha1TrustConfigStatus:
    r"""
    security cloud google com v1alpha1 trust config status

    Attributes
    ----------
    conditions : [SecurityCloudGoogleComV1alpha1TrustConfigStatusConditionsItems0], default is Undefined, optional
        conditions
    renderedTrustStores : [SecurityCloudGoogleComV1alpha1TrustConfigStatusRenderedTrustStoresItems0], default is Undefined, optional
        Holds the actual set of trust anchor certificates for each trust domain.

        Updated by the controller based on .spec.trustStores --- the node agent does not
        necessarily have the connectivity or access necessary to retrieve certificates
        from external systems.

    """


    conditions?: [SecurityCloudGoogleComV1alpha1TrustConfigStatusConditionsItems0]

    renderedTrustStores?: [SecurityCloudGoogleComV1alpha1TrustConfigStatusRenderedTrustStoresItems0]


schema SecurityCloudGoogleComV1alpha1TrustConfigStatusConditionsItems0:
    r"""
    security cloud google com v1alpha1 trust config status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        The time at which this condition last changed status, in the format "2021-01-29T01:13:35Z".

    message : str, default is Undefined, optional
        Human-readable description of the condition's last transition.

    observedGeneration : int, default is Undefined, optional
        If set, this represents the .metadata.generation that the condition was set
        based upon.

        For instance, if .metadata.generation is currently 12, but the
        .status.condition[x].observedGeneration is 9, the condition is out of date
        with respect to the current state of the instance.

    reason : str, default is Undefined, optional
        Machine-readable description of the condition's last transition.

    status : str, default is Undefined, optional
        Is the condition true or false?

        One of "True", "False", or "Unknown".

    $type : str, default is Undefined, optional
        Known values:

        * "Ready": The certificate issuance machinery has validated and rendered
          this TrustConfig; if the Ready condition is set to status=True with an
          observedGeneration equal to the current .metadata.generation of the
          TrustConfig, the rendered trust anchors will be published to pods.

          If the Ready condition is set to status=False, check the reason and
          message fields for an explanation of why the controller rejected your
          configuration.

    """


    lastTransitionTime?: str

    message?: str

    observedGeneration?: int

    reason?: str

    status?: str

    $type?: str


schema SecurityCloudGoogleComV1alpha1TrustConfigStatusRenderedTrustStoresItems0:
    r"""
    security cloud google com v1alpha1 trust config status rendered trust stores items0

    Attributes
    ----------
    trustAnchors : [SecurityCloudGoogleComV1alpha1TrustConfigStatusRenderedTrustStoresItems0TrustAnchorsItems0], default is Undefined, optional
        trust anchors
    trustDomain : str, default is Undefined, required
        trust domain
    """


    trustAnchors?: [SecurityCloudGoogleComV1alpha1TrustConfigStatusRenderedTrustStoresItems0TrustAnchorsItems0]

    trustDomain: str


schema SecurityCloudGoogleComV1alpha1TrustConfigStatusRenderedTrustStoresItems0TrustAnchorsItems0:
    r"""
    security cloud google com v1alpha1 trust config status rendered trust stores items0 trust anchors items0

    Attributes
    ----------
    pemCertificates : [str], default is Undefined, optional
        pem certificates
    """


    pemCertificates?: [str]


