"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema ManagedCertificate:
    r"""
    networking gke io v1 managed certificate

    Attributes
    ----------
    apiVersion : str, default is "networking.gke.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ManagedCertificate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkingGkeIoV1ManagedCertificateSpec, default is Undefined, optional
        spec
    status : NetworkingGkeIoV1ManagedCertificateStatus, default is Undefined, optional
        status
    """


    apiVersion: "networking.gke.io/v1" = "networking.gke.io/v1"

    kind: "ManagedCertificate" = "ManagedCertificate"

    metadata?: v1.ObjectMeta

    spec?: NetworkingGkeIoV1ManagedCertificateSpec

    status?: NetworkingGkeIoV1ManagedCertificateStatus


schema NetworkingGkeIoV1ManagedCertificateSpec:
    r"""
    networking gke io v1 managed certificate spec

    Attributes
    ----------
    domains : [str], default is Undefined, optional
        domains
    """


    domains?: [str]


    check:
        len(domains) <= 100 if domains
        all domains in domains { len(domains) <= 63 if domains not in [None, Undefined] } if domains
        all domains in domains { _regex_match(str(domains), r"^(([a-z0-9]+|[a-z0-9][-a-z0-9]*[a-z0-9])\.)+[a-z][-a-z0-9]*[a-z0-9]$") if domains } if domains


schema NetworkingGkeIoV1ManagedCertificateStatus:
    r"""
    networking gke io v1 managed certificate status

    Attributes
    ----------
    certificateName : str, default is Undefined, optional
        certificate name
    certificateStatus : str, default is Undefined, optional
        certificate status
    domainStatus : [NetworkingGkeIoV1ManagedCertificateStatusDomainStatusItems0], default is Undefined, optional
        domain status
    expireTime : str, default is Undefined, optional
        expire time
    """


    certificateName?: str

    certificateStatus?: str

    domainStatus?: [NetworkingGkeIoV1ManagedCertificateStatusDomainStatusItems0]

    expireTime?: str


schema NetworkingGkeIoV1ManagedCertificateStatusDomainStatusItems0:
    r"""
    networking gke io v1 managed certificate status domain status items0

    Attributes
    ----------
    domain : str, default is Undefined, required
        domain
    status : str, default is Undefined, required
        status
    """


    domain: str

    status: str


