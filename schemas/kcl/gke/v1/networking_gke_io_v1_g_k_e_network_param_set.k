"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema GKENetworkParamSet:
    r"""
    GKENetworkParamSet represent GKE specific parameters for the network.

    Attributes
    ----------
    apiVersion : str, default is "networking.gke.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "GKENetworkParamSet", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : NetworkingGkeIoV1GKENetworkParamSetSpec, default is Undefined, optional
        spec
    status : NetworkingGkeIoV1GKENetworkParamSetStatus, default is Undefined, optional
        status
    """


    apiVersion: "networking.gke.io/v1" = "networking.gke.io/v1"

    kind: "GKENetworkParamSet" = "GKENetworkParamSet"

    metadata?: v1.ObjectMeta

    spec?: NetworkingGkeIoV1GKENetworkParamSetSpec

    status?: NetworkingGkeIoV1GKENetworkParamSetStatus


schema NetworkingGkeIoV1GKENetworkParamSetSpec:
    r"""
    GKENetworkParamSetSpec contains the specifications for network object

    Attributes
    ----------
    deviceMode : str, default is Undefined, optional
        DeviceMode indicates the mode in which the devices will be used by the Pod. This field is required and valid only for "Device" typed network. Mutually exclusive with NetworkAttachment.
    networkAttachment : str, default is Undefined, optional
        NetworkAttachment specifies the network attachment to connect to. Mutually exclusive with VPC, VPCSubnet, DeviceMode, and PodIPv4Ranges.
    podIPv4Ranges : NetworkingGkeIoV1GKENetworkParamSetSpecPodIPV4Ranges, default is Undefined, optional
        pod IPv4 ranges
    vpc : str, default is Undefined, optional
        VPC specifies the VPC to which the network belongs. This field is required when not connecting across a network attachment. Mutually exclusive with NetworkAttachment.
    vpcSubnet : str, default is Undefined, optional
        VPCSubnet is the path of the VPC subnet. Must be set if specifying VPC. Mutually exclusive with NetworkAttachment.
    """


    deviceMode?: "DPDK-VFIO" | "NetDevice" | "RDMA"

    networkAttachment?: str

    podIPv4Ranges?: NetworkingGkeIoV1GKENetworkParamSetSpecPodIPV4Ranges

    vpc?: str

    vpcSubnet?: str


schema NetworkingGkeIoV1GKENetworkParamSetSpecPodIPV4Ranges:
    r"""
    PodIPv4Ranges specify the names of the secondary ranges of the VPC subnet used to allocate pod IPs for the network. This field is required and valid only for L3 typed network. Mutually exclusive with NetworkAttachment.

    Attributes
    ----------
    rangeNames : [str], default is Undefined, required
        range names
    """


    rangeNames: [str]


    check:
        len(rangeNames) >= 1


schema NetworkingGkeIoV1GKENetworkParamSetStatus:
    r"""
    GKENetworkParamSetStatus contains the status information related to the network.

    Attributes
    ----------
    conditions : [NetworkingGkeIoV1GKENetworkParamSetStatusConditionsItems0], default is Undefined, optional
        Conditions is a field representing the current conditions of the GKENetworkParamSet. 
         Known condition types are: 
         * "Ready"
    networkName : str, default is Undefined, optional
        NetworkName specifies which Network object is currently referencing this GKENetworkParamSet
    podCIDRs : NetworkingGkeIoV1GKENetworkParamSetStatusPodCIDRs, default is Undefined, optional
        pod c ID rs
    """


    conditions?: [NetworkingGkeIoV1GKENetworkParamSetStatusConditionsItems0]

    networkName?: str

    podCIDRs?: NetworkingGkeIoV1GKENetworkParamSetStatusPodCIDRs


schema NetworkingGkeIoV1GKENetworkParamSetStatusConditionsItems0:
    r"""
    Condition contains details for one aspect of the current state of this API Resource. --- This struct is intended for direct use as an array at the field path .status.conditions.  For example, 
     type FooStatus struct{ // Represents the observations of a foo's current state. // Known .status.conditions.type are: "Available", "Progressing", and "Degraded" // +patchMergeKey=type // +patchStrategy=merge // +listType=map // +listMapKey=type Conditions []metav1.Condition `json:"conditions,omitempty" patchStrategy:"merge" patchMergeKey:"type" protobuf:"bytes,1,rep,name=conditions"` 
     // other fields }

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, required
        lastTransitionTime is the last time the condition transitioned from one status to another. This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
    message : str, default is Undefined, required
        message is a human readable message indicating details about the transition. This may be an empty string.
    observedGeneration : int, default is Undefined, optional
        observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
    reason : str, default is Undefined, required
        reason contains a programmatic identifier indicating the reason for the condition's last transition. Producers of specific condition types may define expected values and meanings for this field, and whether the values are considered a guaranteed API. The value should be a CamelCase string. This field may not be empty.
    status : str, default is Undefined, required
        status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        type of condition in CamelCase or in foo.example.com/CamelCase. --- Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be useful (see .node.status.conditions), the ability to deconflict is important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
    """


    lastTransitionTime: str

    message: str

    observedGeneration?: int

    reason: str

    status: "True" | "False" | "Unknown"

    $type: str


    check:
        len(message) <= 32768
        observedGeneration >= 0 if observedGeneration not in [None, Undefined]
        len(reason) <= 1024
        len(reason) >= 1
        _regex_match(str(reason), r"^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$")
        len($type) <= 316
        _regex_match(str($type), r"^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$")


schema NetworkingGkeIoV1GKENetworkParamSetStatusPodCIDRs:
    r"""
    PodCIDRs specifies the CIDRs from which IPs will be used for Pod interfaces

    Attributes
    ----------
    cidrBlocks : [str], default is Undefined, required
        cidr blocks
    """


    cidrBlocks: [str]


    check:
        len(cidrBlocks) >= 1


