"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import regex
import k8s.apimachinery.pkg.apis.meta.v1
_regex_match = regex.match


schema CapacityRequest:
    r"""
    CapacityRequest is a way to express additional capacity that we would like to reserve in the cluster. Cluster Autoscaler can use this information in its calculations and signal if the additional capacity is available in the cluster or proactively add capacity if needed.

    Attributes
    ----------
    apiVersion : str, default is "internal.autoscaling.gke.io/v1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CapacityRequest", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : InternalAutoscalingGkeIoV1CapacityRequestSpec, default is Undefined, optional
        spec
    status : InternalAutoscalingGkeIoV1CapacityRequestStatus, default is Undefined, optional
        status
    """


    apiVersion: "internal.autoscaling.gke.io/v1" = "internal.autoscaling.gke.io/v1"

    kind: "CapacityRequest" = "CapacityRequest"

    metadata?: v1.ObjectMeta

    spec?: InternalAutoscalingGkeIoV1CapacityRequestSpec

    status?: InternalAutoscalingGkeIoV1CapacityRequestStatus


schema InternalAutoscalingGkeIoV1CapacityRequestSpec:
    r"""
    Specification of the CapacityRequest object. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status.

    Attributes
    ----------
    capacity : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacity, default is Undefined, required
        capacity
    provisionPolicy : InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionPolicy, default is Undefined, optional
        provision policy
    provisionedCapacitySelector : InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionedCapacitySelector, default is Undefined, optional
        provisioned capacity selector
    """


    capacity: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacity

    provisionPolicy?: InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionPolicy

    provisionedCapacitySelector?: InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionedCapacitySelector


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacity:
    r"""
    Capacity specifies additional capacity to reserve in the cluster as a specification of the pod that should be scheduled in the cluster.

    Attributes
    ----------
    activeDeadlineSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod may be active on the node relative to StartTime before the system will actively try to mark it failed and kill associated containers. Value must be a positive integer.
    affinity : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinity, default is Undefined, optional
        affinity
    automountServiceAccountToken : bool, default is Undefined, optional
        AutomountServiceAccountToken indicates whether a service account token should be automatically mounted.
    containers : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0], default is Undefined, required
        List of containers belonging to the pod. Containers cannot currently be added or removed. There must be at least one container in a Pod. Cannot be updated.
    dnsConfig : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityDNSConfig, default is Undefined, optional
        dns config
    dnsPolicy : str, default is Undefined, optional
        Set DNS policy for the pod. Defaults to "ClusterFirst". Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default' or 'None'. DNS parameters given in DNSConfig will be merged with the policy selected with DNSPolicy. To have DNS options set along with hostNetwork, you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'.
    enableServiceLinks : bool, default is Undefined, optional
        EnableServiceLinks indicates whether information about services should be injected into pod's environment variables, matching the syntax of Docker links. Optional: Defaults to true.
    ephemeralContainers : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0], default is Undefined, optional
        List of ephemeral containers run in this pod. Ephemeral containers may be run in an existing pod to perform user-initiated actions such as debugging. This list cannot be specified when creating a pod, and it cannot be modified by updating the pod spec. In order to add an ephemeral container to an existing pod, use the pod's ephemeralcontainers subresource. This field is alpha-level and is only honored by servers that enable the EphemeralContainers feature.
    hostAliases : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityHostAliasesItems0], default is Undefined, optional
        HostAliases is an optional list of hosts and IPs that will be injected into the pod's hosts file if specified. This is only valid for non-hostNetwork pods.
    hostIPC : bool, default is Undefined, optional
        Use the host's ipc namespace. Optional: Default to false.
    hostNetwork : bool, default is Undefined, optional
        Host networking requested for this pod. Use the host's network namespace. If this option is set, the ports that will be used must be specified. Default to false.
    hostPID : bool, default is Undefined, optional
        Use the host's pid namespace. Optional: Default to false.
    hostname : str, default is Undefined, optional
        Specifies the hostname of the Pod If not specified, the pod's hostname will be set to a system-defined value.
    imagePullSecrets : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityImagePullSecretsItems0], default is Undefined, optional
        ImagePullSecrets is an optional list of references to secrets in the same namespace to use for pulling any of the images used by this PodSpec. If specified, these secrets will be passed to individual puller implementations for them to use. For example, in the case of docker, only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod
    initContainers : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0], default is Undefined, optional
        List of initialization containers belonging to the pod. Init containers are executed in order prior to containers being started. If any init container fails, the pod is considered to have failed and is handled according to its restartPolicy. The name for an init container or normal container must be unique among all containers. Init containers may not have Lifecycle actions, Readiness probes, Liveness probes, or Startup probes. The resourceRequirements of an init container are taken into account during scheduling by finding the highest request/limit for each resource type, and then using the max of of that value or the sum of the normal containers. Limits are applied to init containers in a similar fashion. Init containers cannot currently be added or removed. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
    nodeName : str, default is Undefined, optional
        NodeName is a request to schedule this pod onto a specific node. If it is non-empty, the scheduler simply schedules this pod onto that node, assuming that it fits resource requirements.
    nodeSelector : {str:str}, default is Undefined, optional
        NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
    overhead : {str:int | str}, default is Undefined, optional
        Overhead represents the resource overhead associated with running a pod for a given RuntimeClass. This field will be autopopulated at admission time by the RuntimeClass admission controller. If the RuntimeClass admission controller is enabled, overhead must not be set in Pod create requests. The RuntimeClass admission controller will reject Pod create requests which have the overhead already set. If RuntimeClass is configured and selected in the PodSpec, Overhead will be set to the value defined in the corresponding RuntimeClass, otherwise it will remain unset and treated as zero. More info: https://git.k8s.io/enhancements/keps/sig-node/20190226-pod-overhead.md This field is alpha-level as of Kubernetes v1.16, and is only honored by servers that enable the PodOverhead feature.
    preemptionPolicy : str, default is Undefined, optional
        PreemptionPolicy is the Policy for preempting pods with lower priority. One of Never, PreemptLowerPriority. Defaults to PreemptLowerPriority if unset. This field is alpha-level and is only honored by servers that enable the NonPreemptingPriority feature.
    priority : int, default is Undefined, optional
        The priority value. Various system components use this field to find the priority of the pod. When Priority Admission Controller is enabled, it prevents users from setting this field. The admission controller populates this field from PriorityClassName. The higher the value, the higher the priority.
    priorityClassName : str, default is Undefined, optional
        If specified, indicates the pod's priority. "system-node-critical" and "system-cluster-critical" are two special keywords which indicate the highest priorities with the former being the highest priority. Any other name must be defined by creating a PriorityClass object with that name. If not specified, the pod priority will be default or zero if there is no default.
    readinessGates : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityReadinessGatesItems0], default is Undefined, optional
        If specified, all readiness gates will be evaluated for pod readiness. A pod is ready when all its containers are ready AND all conditions specified in the readiness gates have status equal to "True" More info: https://git.k8s.io/enhancements/keps/sig-network/0007-pod-ready%2B%2B.md
    restartPolicy : str, default is Undefined, optional
        Restart policy for all containers within the pod. One of Always, OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy
    runtimeClassName : str, default is Undefined, optional
        RuntimeClassName refers to a RuntimeClass object in the node.k8s.io group, which should be used to run this pod.  If no RuntimeClass resource matches the named class, the pod will not be run. If unset or empty, the "legacy" RuntimeClass will be used, which is an implicit class with an empty definition that uses the default runtime handler. More info: https://git.k8s.io/enhancements/keps/sig-node/runtime-class.md This is a beta feature as of Kubernetes v1.14.
    schedulerName : str, default is Undefined, optional
        If specified, the pod will be dispatched by specified scheduler. If not specified, the pod will be dispatched by default scheduler.
    securityContext : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContext, default is Undefined, optional
        security context
    serviceAccount : str, default is Undefined, optional
        DeprecatedServiceAccount is a depreciated alias for ServiceAccountName. Deprecated: Use serviceAccountName instead.
    serviceAccountName : str, default is Undefined, optional
        ServiceAccountName is the name of the ServiceAccount to use to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
    shareProcessNamespace : bool, default is Undefined, optional
        Share a single process namespace between all of the containers in a pod. When this is set containers will be able to view and signal processes from other containers in the same pod, and the first process in each container will not be assigned PID 1. HostPID and ShareProcessNamespace cannot both be set. Optional: Default to false.
    subdomain : str, default is Undefined, optional
        If specified, the fully qualified Pod hostname will be "<hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>". If not specified, the pod will not have a domainname at all.
    terminationGracePeriodSeconds : int, default is Undefined, optional
        Optional duration in seconds the pod needs to terminate gracefully. May be decreased in delete request. Value must be non-negative integer. The value zero indicates delete immediately. If this value is nil, the default grace period will be used instead. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. Defaults to 30 seconds.
    tolerations : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTolerationsItems0], default is Undefined, optional
        If specified, the pod's tolerations.
    topologySpreadConstraints : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTopologySpreadConstraintsItems0], default is Undefined, optional
        TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. This field is alpha-level and is only honored by clusters that enables the EvenPodsSpread feature. All topologySpreadConstraints are ANDed.
    volumes : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0], default is Undefined, optional
        List of volumes that can be mounted by containers belonging to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes
    """


    activeDeadlineSeconds?: int

    affinity?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinity

    automountServiceAccountToken?: bool

    containers: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0]

    dnsConfig?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityDNSConfig

    dnsPolicy?: str

    enableServiceLinks?: bool

    ephemeralContainers?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0]

    hostAliases?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityHostAliasesItems0]

    hostIPC?: bool

    hostNetwork?: bool

    hostPID?: bool

    hostname?: str

    imagePullSecrets?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityImagePullSecretsItems0]

    initContainers?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0]

    nodeName?: str

    nodeSelector?: {str:str}

    overhead?: {str:int | str}

    preemptionPolicy?: str

    priority?: int

    priorityClassName?: str

    readinessGates?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityReadinessGatesItems0]

    restartPolicy?: str

    runtimeClassName?: str

    schedulerName?: str

    securityContext?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContext

    serviceAccount?: str

    serviceAccountName?: str

    shareProcessNamespace?: bool

    subdomain?: str

    terminationGracePeriodSeconds?: int

    tolerations?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTolerationsItems0]

    topologySpreadConstraints?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTopologySpreadConstraintsItems0]

    volumes?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0]


    check:
        all _, overhead in overhead { _regex_match(str(overhead), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if overhead } if overhead


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinity:
    r"""
    If specified, the pod's scheduling constraints

    Attributes
    ----------
    nodeAffinity : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinity, default is Undefined, optional
        node affinity
    podAffinity : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinity, default is Undefined, optional
        pod affinity
    podAntiAffinity : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinity, default is Undefined, optional
        pod anti affinity
    """


    nodeAffinity?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinity

    podAffinity?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinity

    podAntiAffinity?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinity


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinity:
    r"""
    Describes node affinity scheduling rules for the pod.

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution, default is Undefined, optional
        required during scheduling ignored during execution
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).

    Attributes
    ----------
    preference : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference, default is Undefined, required
        preference
    weight : int, default is Undefined, required
        Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.
    """


    preference: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference

    weight: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0Preference:
    r"""
    A node selector term, associated with the corresponding weight.

    Attributes
    ----------
    matchExpressions : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0]

    matchFields?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PreferenceMatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecution:
    r"""
    If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to an update), the system may or may not try to eventually evict the pod from its node.

    Attributes
    ----------
    nodeSelectorTerms : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0], default is Undefined, required
        Required. A list of node selector terms. The terms are ORed.
    """


    nodeSelectorTerms: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0:
    r"""
    A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.

    Attributes
    ----------
    matchExpressions : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0], default is Undefined, optional
        A list of node selector requirements by node's labels.
    matchFields : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0], default is Undefined, optional
        A list of node selector requirements by node's fields.
    """


    matchExpressions?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0]

    matchFields?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchExpressionsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityNodeAffinityRequiredDuringSchedulingIgnoredDuringExecutionNodeSelectorTermsItems0MatchFieldsItems0:
    r"""
    A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        The label key that the selector applies to.
    operator : str, default is Undefined, required
        Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.
    values : [str], default is Undefined, optional
        An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinity:
    r"""
    Describes pod affinity scheduling rules (e.g. co-locate this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaces?: [str]

    topologyKey: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaces?: [str]

    topologyKey: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinity:
    r"""
    Describes pod anti-affinity scheduling rules (e.g. avoid putting this pod in the same node, zone, etc. as some other pod(s)).

    Attributes
    ----------
    preferredDuringSchedulingIgnoredDuringExecution : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding "weight" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.
    requiredDuringSchedulingIgnoredDuringExecution : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0], default is Undefined, optional
        If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.
    """


    preferredDuringSchedulingIgnoredDuringExecution?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0]

    requiredDuringSchedulingIgnoredDuringExecution?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)

    Attributes
    ----------
    podAffinityTerm : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm, default is Undefined, required
        pod affinity term
    weight : int, default is Undefined, required
        weight associated with matching the corresponding podAffinityTerm, in the range 1-100.
    """


    podAffinityTerm: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm

    weight: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTerm:
    r"""
    Required. A pod affinity term, associated with the corresponding weight.

    Attributes
    ----------
    labelSelector : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector, default is Undefined, optional
        label selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector

    namespaces?: [str]

    topologyKey: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityPreferredDuringSchedulingIgnoredDuringExecutionItems0PodAffinityTermLabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0:
    r"""
    Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running

    Attributes
    ----------
    labelSelector : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector, default is Undefined, optional
        label selector
    namespaces : [str], default is Undefined, optional
        namespaces specifies which namespaces the labelSelector applies to (matches against); null or empty list means "this pod's namespace"
    topologyKey : str, default is Undefined, required
        This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.
    """


    labelSelector?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector

    namespaces?: [str]

    topologyKey: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelector:
    r"""
    A label query over a set of resources, in this case pods.

    Attributes
    ----------
    matchExpressions : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityAffinityPodAntiAffinityRequiredDuringSchedulingIgnoredDuringExecutionItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0:
    r"""
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
    readinessProbe : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resources : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container. This is a beta feature.
    volumeMounts : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0]

    envFrom?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0Lifecycle

    livenessProbe?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbe

    name: str

    ports?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0PortsItems0]

    readinessProbe?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbe

    resources?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0Resources

    securityContext?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContext

    startupProbe?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0VolumeDevicesItems0]

    volumeMounts?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0VolumeMountsItems0]

    workingDir?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvFromItems0SecretRef


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFrom


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromSecretKeyRef


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0EnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0Lifecycle:
    r"""
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStart

    preStop?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStop


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStart:
    r"""
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartExec

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartTCPSocket


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePostStartTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStop:
    r"""
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopExec

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopTCPSocket


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LifecyclePreStopTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbe:
    r"""
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeExec

    failureThreshold?: int

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeTCPSocket

    timeoutSeconds?: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0LivenessProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0PortsItems0:
    r"""
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbe:
    r"""
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeExec

    failureThreshold?: int

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeTCPSocket

    timeoutSeconds?: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0ReadinessProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0Resources:
    r"""
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContext:
    r"""
    Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
    capabilities : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    seLinuxOptions : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    windowsOptions : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContextSeLinuxOptions

    windowsOptions?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContextWindowsOptions


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0SecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    runAsUserName?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbe:
    r"""
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeExec

    failureThreshold?: int

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeTCPSocket

    timeoutSeconds?: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0StartupProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0VolumeDevicesItems0:
    r"""
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityContainersItems0VolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityDNSConfig:
    r"""
    Specifies the DNS parameters of a pod. Parameters specified here will be merged to the generated DNS configuration based on DNSPolicy.

    Attributes
    ----------
    nameservers : [str], default is Undefined, optional
        A list of DNS name server IP addresses. This will be appended to the base nameservers generated from DNSPolicy. Duplicated nameservers will be removed.
    options : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityDNSConfigOptionsItems0], default is Undefined, optional
        A list of DNS resolver options. This will be merged with the base options generated from DNSPolicy. Duplicated entries will be removed. Resolution options given in Options will override those that appear in the base DNSPolicy.
    searches : [str], default is Undefined, optional
        A list of DNS search domains for host-name lookup. This will be appended to the base search paths generated from DNSPolicy. Duplicated search paths will be removed.
    """


    nameservers?: [str]

    options?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityDNSConfigOptionsItems0]

    searches?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityDNSConfigOptionsItems0:
    r"""
    PodDNSConfigOption defines DNS resolver options of a pod.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Required.
    value : str, default is Undefined, optional
        value
    """


    name?: str

    value?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0:
    r"""
    An EphemeralContainer is a container that may be added temporarily to an existing pod for user-initiated activities such as debugging. Ephemeral containers have no resource or scheduling guarantees, and they will not be restarted when they exit or when a pod is removed or restarted. If an ephemeral container causes a pod to exceed its resource allocation, the pod may be evicted. Ephemeral containers may not be added by directly updating the pod spec. They must be added via the pod's ephemeralcontainers subresource, and they will appear in the pod spec once added. This is an alpha feature enabled by the EphemeralContainers feature flag.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the ephemeral container specified as a DNS_LABEL. This name must be unique among all containers, init containers and ephemeral containers.
    ports : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0PortsItems0], default is Undefined, optional
        Ports are not allowed for ephemeral containers.
    readinessProbe : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resources : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    targetContainerName : str, default is Undefined, optional
        If set, the name of the container from PodSpec that this ephemeral container targets. The ephemeral container will be run in the namespaces (IPC, PID, etc) of this container. If not set then the ephemeral container is run in whatever namespaces are shared for the pod. Note that the container runtime must support this feature.
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container. This is a beta feature.
    volumeMounts : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0]

    envFrom?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0Lifecycle

    livenessProbe?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbe

    name: str

    ports?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0PortsItems0]

    readinessProbe?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbe

    resources?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0Resources

    securityContext?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContext

    startupProbe?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    targetContainerName?: str

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0VolumeDevicesItems0]

    volumeMounts?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0VolumeMountsItems0]

    workingDir?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvFromItems0SecretRef


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFrom


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromSecretKeyRef


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0EnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0Lifecycle:
    r"""
    Lifecycle is not allowed for ephemeral containers.

    Attributes
    ----------
    postStart : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStart

    preStop?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStop


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStart:
    r"""
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartExec

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartTCPSocket


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePostStartTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStop:
    r"""
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopExec

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopTCPSocket


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LifecyclePreStopTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbe:
    r"""
    Probes are not allowed for ephemeral containers.

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeExec

    failureThreshold?: int

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeTCPSocket

    timeoutSeconds?: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0LivenessProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0PortsItems0:
    r"""
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbe:
    r"""
    Probes are not allowed for ephemeral containers.

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeExec

    failureThreshold?: int

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeTCPSocket

    timeoutSeconds?: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0ReadinessProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0Resources:
    r"""
    Resources are not allowed for ephemeral containers. Ephemeral containers use spare resources already allocated to the pod.

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContext:
    r"""
    SecurityContext is not allowed for ephemeral containers.

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
    capabilities : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    seLinuxOptions : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    windowsOptions : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContextSeLinuxOptions

    windowsOptions?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContextWindowsOptions


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0SecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    runAsUserName?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbe:
    r"""
    Probes are not allowed for ephemeral containers.

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeExec

    failureThreshold?: int

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeTCPSocket

    timeoutSeconds?: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0StartupProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0VolumeDevicesItems0:
    r"""
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityEphemeralContainersItems0VolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityHostAliasesItems0:
    r"""
    HostAlias holds the mapping between IP and hostnames that will be injected as an entry in the pod's hosts file.

    Attributes
    ----------
    hostnames : [str], default is Undefined, optional
        Hostnames for the above IP address.
    ip : str, default is Undefined, optional
        IP address of the host file entry.
    """


    hostnames?: [str]

    ip?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityImagePullSecretsItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0:
    r"""
    A single application container that you want to run within a pod.

    Attributes
    ----------
    args : [str], default is Undefined, optional
        Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    command : [str], default is Undefined, optional
        Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell
    env : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0], default is Undefined, optional
        List of environment variables to set in the container. Cannot be updated.
    envFrom : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvFromItems0], default is Undefined, optional
        List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.
    image : str, default is Undefined, optional
        Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.
    imagePullPolicy : str, default is Undefined, optional
        Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images
    lifecycle : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0Lifecycle, default is Undefined, optional
        lifecycle
    livenessProbe : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbe, default is Undefined, optional
        liveness probe
    name : str, default is Undefined, required
        Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL). Cannot be updated.
    ports : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0PortsItems0], default is Undefined, optional
        List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default "0.0.0.0" address inside a container will be accessible from the network. Cannot be updated.
    readinessProbe : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbe, default is Undefined, optional
        readiness probe
    resources : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0Resources, default is Undefined, optional
        resources
    securityContext : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContext, default is Undefined, optional
        security context
    startupProbe : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbe, default is Undefined, optional
        startup probe
    stdin : bool, default is Undefined, optional
        Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.
    stdinOnce : bool, default is Undefined, optional
        Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false
    terminationMessagePath : str, default is Undefined, optional
        Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.
    terminationMessagePolicy : str, default is Undefined, optional
        Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.
    tty : bool, default is Undefined, optional
        Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.
    volumeDevices : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0VolumeDevicesItems0], default is Undefined, optional
        volumeDevices is the list of block devices to be used by the container. This is a beta feature.
    volumeMounts : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0VolumeMountsItems0], default is Undefined, optional
        Pod volumes to mount into the container's filesystem. Cannot be updated.
    workingDir : str, default is Undefined, optional
        Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.
    """


    args?: [str]

    command?: [str]

    env?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0]

    envFrom?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvFromItems0]

    image?: str

    imagePullPolicy?: str

    lifecycle?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0Lifecycle

    livenessProbe?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbe

    name: str

    ports?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0PortsItems0]

    readinessProbe?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbe

    resources?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0Resources

    securityContext?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContext

    startupProbe?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbe

    stdin?: bool

    stdinOnce?: bool

    terminationMessagePath?: str

    terminationMessagePolicy?: str

    tty?: bool

    volumeDevices?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0VolumeDevicesItems0]

    volumeMounts?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0VolumeMountsItems0]

    workingDir?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvFromItems0:
    r"""
    EnvFromSource represents the source of a set of ConfigMaps

    Attributes
    ----------
    configMapRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvFromItems0ConfigMapRef, default is Undefined, optional
        config map ref
    prefix : str, default is Undefined, optional
        An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvFromItems0SecretRef, default is Undefined, optional
        secret ref
    """


    configMapRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvFromItems0ConfigMapRef

    prefix?: str

    secretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvFromItems0SecretRef


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvFromItems0ConfigMapRef:
    r"""
    The ConfigMap to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap must be defined
    """


    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvFromItems0SecretRef:
    r"""
    The Secret to select from

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret must be defined
    """


    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0:
    r"""
    EnvVar represents an environment variable present in a Container.

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the environment variable. Must be a C_IDENTIFIER.
    value : str, default is Undefined, optional
        Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to "".
    valueFrom : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFrom, default is Undefined, optional
        value from
    """


    name: str

    value?: str

    valueFrom?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFrom


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFrom:
    r"""
    Source for the environment variable's value. Cannot be used if value is not empty.

    Attributes
    ----------
    configMapKeyRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromConfigMapKeyRef, default is Undefined, optional
        config map key ref
    fieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromFieldRef, default is Undefined, optional
        field ref
    resourceFieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromResourceFieldRef, default is Undefined, optional
        resource field ref
    secretKeyRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    configMapKeyRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromConfigMapKeyRef

    fieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromFieldRef

    resourceFieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromResourceFieldRef

    secretKeyRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromSecretKeyRef


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromConfigMapKeyRef:
    r"""
    Selects a key of a ConfigMap.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to select.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromFieldRef:
    r"""
    Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP, status.podIPs.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0EnvItems0ValueFromSecretKeyRef:
    r"""
    Selects a key of a secret in the pod's namespace

    Attributes
    ----------
    key : str, default is Undefined, required
        The key of the secret to select from.  Must be a valid secret key.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    key: str

    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0Lifecycle:
    r"""
    Actions that the management system should take in response to container lifecycle events. Cannot be updated.

    Attributes
    ----------
    postStart : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStart, default is Undefined, optional
        post start
    preStop : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStop, default is Undefined, optional
        pre stop
    """


    postStart?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStart

    preStop?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStop


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStart:
    r"""
    PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartExec, default is Undefined, optional
        exec
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartHTTPGet, default is Undefined, optional
        http get
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartExec

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartHTTPGet

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartTCPSocket


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePostStartTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStop:
    r"""
    PreStop is called immediately before a container is terminated due to an API request or management event such as liveness/startup probe failure, preemption, resource contention, etc. The handler is not called if the container crashes or exits. The reason for termination is passed to the handler. The Pod's termination grace period countdown begins before the PreStop hooked is executed. Regardless of the outcome of the handler, the container will eventually terminate within the Pod's termination grace period. Other management of the container blocks until the hook completes or until the termination grace period is reached. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopExec, default is Undefined, optional
        exec
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopHTTPGet, default is Undefined, optional
        http get
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopTCPSocket, default is Undefined, optional
        tcp socket
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopExec

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopHTTPGet

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopTCPSocket


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LifecyclePreStopTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbe:
    r"""
    Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeExec

    failureThreshold?: int

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeTCPSocket

    timeoutSeconds?: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0LivenessProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0PortsItems0:
    r"""
    ContainerPort represents a network port in a single container.

    Attributes
    ----------
    containerPort : int, default is Undefined, required
        Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.
    hostIP : str, default is Undefined, optional
        What host IP to bind the external port to.
    hostPort : int, default is Undefined, optional
        Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.
    name : str, default is Undefined, optional
        If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.
    $protocol : str, default is "TCP", optional
        Protocol for port. Must be UDP, TCP, or SCTP. Defaults to "TCP".
    """


    containerPort: int

    hostIP?: str

    hostPort?: int

    name?: str

    $protocol?: str = "TCP"


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbe:
    r"""
    Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeExec

    failureThreshold?: int

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeTCPSocket

    timeoutSeconds?: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0ReadinessProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0Resources:
    r"""
    Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/

    Attributes
    ----------
    limits : {str:int | str}, default is Undefined, optional
        Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    requests : {str:int | str}, default is Undefined, optional
        Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    """


    limits?: {str:int | str}

    requests?: {str:int | str}


    check:
        all _, limits in limits { _regex_match(str(limits), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if limits } if limits
        all _, requests in requests { _regex_match(str(requests), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if requests } if requests


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContext:
    r"""
    Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/

    Attributes
    ----------
    allowPrivilegeEscalation : bool, default is Undefined, optional
        AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN
    capabilities : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContextCapabilities, default is Undefined, optional
        capabilities
    privileged : bool, default is Undefined, optional
        Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.
    procMount : str, default is Undefined, optional
        procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.
    readOnlyRootFilesystem : bool, default is Undefined, optional
        Whether this container has a read-only root filesystem. Default is false.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    seLinuxOptions : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    windowsOptions : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    allowPrivilegeEscalation?: bool

    capabilities?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContextCapabilities

    privileged?: bool

    procMount?: str

    readOnlyRootFilesystem?: bool

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContextSeLinuxOptions

    windowsOptions?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContextWindowsOptions


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContextCapabilities:
    r"""
    The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime.

    Attributes
    ----------
    add : [str], default is Undefined, optional
        Added capabilities
    drop : [str], default is Undefined, optional
        Removed capabilities
    """


    add?: [str]

    drop?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0SecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers. If unspecified, the options from the PodSecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    runAsUserName?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbe:
    r"""
    StartupProbe indicates that the Pod has successfully initialized. If specified, no other probes are executed until this completes successfully. If this probe fails, the Pod will be restarted, just as if the livenessProbe failed. This can be used to provide different probe parameters at the beginning of a Pod's lifecycle, when it might take a long time to load data or warm a cache, than during steady-state operation. This cannot be updated. This is an alpha feature enabled by the StartupProbe feature flag. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes

    Attributes
    ----------
    exec : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeExec, default is Undefined, optional
        exec
    failureThreshold : int, default is Undefined, optional
        Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.
    httpGet : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeHTTPGet, default is Undefined, optional
        http get
    initialDelaySeconds : int, default is Undefined, optional
        Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    periodSeconds : int, default is Undefined, optional
        How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.
    successThreshold : int, default is Undefined, optional
        Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.
    tcpSocket : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeTCPSocket, default is Undefined, optional
        tcp socket
    timeoutSeconds : int, default is Undefined, optional
        Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes
    """


    exec?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeExec

    failureThreshold?: int

    httpGet?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeHTTPGet

    initialDelaySeconds?: int

    periodSeconds?: int

    successThreshold?: int

    tcpSocket?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeTCPSocket

    timeoutSeconds?: int


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeExec:
    r"""
    One and only one of the following should be specified. Exec specifies the action to take.

    Attributes
    ----------
    command : [str], default is Undefined, optional
        Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.
    """


    command?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeHTTPGet:
    r"""
    HTTPGet specifies the http request to perform.

    Attributes
    ----------
    host : str, default is Undefined, optional
        Host name to connect to, defaults to the pod IP. You probably want to set "Host" in httpHeaders instead.
    httpHeaders : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0], default is Undefined, optional
        Custom headers to set in the request. HTTP allows repeated headers.
    path : str, default is Undefined, optional
        Path to access on the HTTP server.
    port : int | str, default is Undefined, required
        Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    scheme : str, default is Undefined, optional
        Scheme to use for connecting to the host. Defaults to HTTP.
    """


    host?: str

    httpHeaders?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0]

    path?: str

    port: int | str

    scheme?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeHTTPGetHTTPHeadersItems0:
    r"""
    HTTPHeader describes a custom header to be used in HTTP probes

    Attributes
    ----------
    name : str, default is Undefined, required
        The header field name
    value : str, default is Undefined, required
        The header field value
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0StartupProbeTCPSocket:
    r"""
    TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported TODO: implement a realistic TCP lifecycle hook

    Attributes
    ----------
    host : str, default is Undefined, optional
        Optional: Host name to connect to, defaults to the pod IP.
    port : int | str, default is Undefined, required
        Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
    """


    host?: str

    port: int | str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0VolumeDevicesItems0:
    r"""
    volumeDevice describes a mapping of a raw block device within a container.

    Attributes
    ----------
    devicePath : str, default is Undefined, required
        devicePath is the path inside of the container that the device will be mapped to.
    name : str, default is Undefined, required
        name must match the name of a persistentVolumeClaim in the pod
    """


    devicePath: str

    name: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityInitContainersItems0VolumeMountsItems0:
    r"""
    VolumeMount describes a mounting of a Volume within a container.

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        Path within the container at which the volume should be mounted.  Must not contain ':'.
    mountPropagation : str, default is Undefined, optional
        mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.
    name : str, default is Undefined, required
        This must match the Name of a Volume.
    readOnly : bool, default is Undefined, optional
        Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
    subPath : str, default is Undefined, optional
        Path within the volume from which the container's volume should be mounted. Defaults to "" (volume's root).
    subPathExpr : str, default is Undefined, optional
        Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to "" (volume's root). SubPathExpr and SubPath are mutually exclusive.
    """


    mountPath: str

    mountPropagation?: str

    name: str

    readOnly?: bool

    subPath?: str

    subPathExpr?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityReadinessGatesItems0:
    r"""
    PodReadinessGate contains the reference to a pod condition

    Attributes
    ----------
    conditionType : str, default is Undefined, required
        ConditionType refers to a condition in the pod's condition list with matching type.
    """


    conditionType: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContext:
    r"""
    SecurityContext holds pod-level security attributes and common container settings. Optional: Defaults to empty.  See type description for default values of each field.

    Attributes
    ----------
    fsGroup : int, default is Undefined, optional
        A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod: 
         1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw---- 
         If unset, the Kubelet will not modify the ownership and permissions of any volume.
    runAsGroup : int, default is Undefined, optional
        The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
    runAsNonRoot : bool, default is Undefined, optional
        Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.
    runAsUser : int, default is Undefined, optional
        The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.
    seLinuxOptions : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContextSeLinuxOptions, default is Undefined, optional
        se linux options
    supplementalGroups : [int], default is Undefined, optional
        A list of groups applied to the first process run in each container, in addition to the container's primary GID.  If unspecified, no groups will be added to any container.
    sysctls : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContextSysctlsItems0], default is Undefined, optional
        Sysctls hold a list of namespaced sysctls used for the pod. Pods with unsupported sysctls (by the container runtime) might fail to launch.
    windowsOptions : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContextWindowsOptions, default is Undefined, optional
        windows options
    """


    fsGroup?: int

    runAsGroup?: int

    runAsNonRoot?: bool

    runAsUser?: int

    seLinuxOptions?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContextSeLinuxOptions

    supplementalGroups?: [int]

    sysctls?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContextSysctlsItems0]

    windowsOptions?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContextWindowsOptions


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContextSeLinuxOptions:
    r"""
    The SELinux context to be applied to all containers. If unspecified, the container runtime will allocate a random SELinux context for each container.  May also be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence for that container.

    Attributes
    ----------
    level : str, default is Undefined, optional
        Level is SELinux level label that applies to the container.
    role : str, default is Undefined, optional
        Role is a SELinux role label that applies to the container.
    $type : str, default is Undefined, optional
        Type is a SELinux type label that applies to the container.
    user : str, default is Undefined, optional
        User is a SELinux user label that applies to the container.
    """


    level?: str

    role?: str

    $type?: str

    user?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContextSysctlsItems0:
    r"""
    Sysctl defines a kernel parameter to be set

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of a property to set
    value : str, default is Undefined, required
        Value of a property to set
    """


    name: str

    value: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacitySecurityContextWindowsOptions:
    r"""
    The Windows specific settings applied to all containers. If unspecified, the options within a container's SecurityContext will be used. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.

    Attributes
    ----------
    gmsaCredentialSpec : str, default is Undefined, optional
        GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
    gmsaCredentialSpecName : str, default is Undefined, optional
        GMSACredentialSpecName is the name of the GMSA credential spec to use. This field is alpha-level and is only honored by servers that enable the WindowsGMSA feature flag.
    runAsUserName : str, default is Undefined, optional
        The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. This field is beta-level and may be disabled with the WindowsRunAsUserName feature flag.
    """


    gmsaCredentialSpec?: str

    gmsaCredentialSpecName?: str

    runAsUserName?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTolerationsItems0:
    r"""
    The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>.

    Attributes
    ----------
    effect : str, default is Undefined, optional
        Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.
    key : str, default is Undefined, optional
        Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.
    operator : str, default is Undefined, optional
        Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.
    tolerationSeconds : int, default is Undefined, optional
        TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.
    value : str, default is Undefined, optional
        Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.
    """


    effect?: str

    key?: str

    operator?: str

    tolerationSeconds?: int

    value?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTopologySpreadConstraintsItems0:
    r"""
    TopologySpreadConstraint specifies how to spread matching pods among the given topology.

    Attributes
    ----------
    labelSelector : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTopologySpreadConstraintsItems0LabelSelector, default is Undefined, optional
        label selector
    maxSkew : int, default is Undefined, required
        MaxSkew describes the degree to which pods may be unevenly distributed. It's the maximum permitted difference between the number of matching pods in any two topology domains of a given topology type. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 1/1/0: | zone1 | zone2 | zone3 | |   P   |   P   |       | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 1/1/1; scheduling it onto zone1(zone2) would make the ActualSkew(2-0) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. It's a required field. Default value is 1 and 0 is not allowed.
    topologyKey : str, default is Undefined, required
        TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a "bucket", and try to put balanced number of pods into each bucket. It's a required field.
    whenUnsatisfiable : str, default is Undefined, required
        WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it - ScheduleAnyway tells the scheduler to still schedule it It's considered as "Unsatisfiable" if and only if placing incoming pod on any topology violates "MaxSkew". For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.
    """


    labelSelector?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTopologySpreadConstraintsItems0LabelSelector

    maxSkew: int

    topologyKey: str

    whenUnsatisfiable: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTopologySpreadConstraintsItems0LabelSelector:
    r"""
    LabelSelector is used to find matching pods. Pods that match this label selector are counted to determine the number of pods in their corresponding topology domain.

    Attributes
    ----------
    matchExpressions : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityTopologySpreadConstraintsItems0LabelSelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0:
    r"""
    Volume represents a named volume in a pod that may be accessed by any container in the pod.

    Attributes
    ----------
    awsElasticBlockStore : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0AwsElasticBlockStore, default is Undefined, optional
        aws elastic block store
    azureDisk : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0AzureDisk, default is Undefined, optional
        azure disk
    azureFile : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0AzureFile, default is Undefined, optional
        azure file
    cephfs : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Cephfs, default is Undefined, optional
        cephfs
    cinder : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Cinder, default is Undefined, optional
        cinder
    configMap : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ConfigMap, default is Undefined, optional
        config map
    csi : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Csi, default is Undefined, optional
        csi
    downwardAPI : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPI, default is Undefined, optional
        downward API
    emptyDir : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0EmptyDir, default is Undefined, optional
        empty dir
    fc : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Fc, default is Undefined, optional
        fc
    flexVolume : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0FlexVolume, default is Undefined, optional
        flex volume
    flocker : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Flocker, default is Undefined, optional
        flocker
    gcePersistentDisk : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0GcePersistentDisk, default is Undefined, optional
        gce persistent disk
    gitRepo : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0GitRepo, default is Undefined, optional
        git repo
    glusterfs : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Glusterfs, default is Undefined, optional
        glusterfs
    hostPath : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0HostPath, default is Undefined, optional
        host path
    iscsi : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Iscsi, default is Undefined, optional
        iscsi
    name : str, default is Undefined, required
        Volume's name. Must be a DNS_LABEL and unique within the pod. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    nfs : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Nfs, default is Undefined, optional
        nfs
    persistentVolumeClaim : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0PersistentVolumeClaim, default is Undefined, optional
        persistent volume claim
    photonPersistentDisk : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0PhotonPersistentDisk, default is Undefined, optional
        photon persistent disk
    portworxVolume : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0PortworxVolume, default is Undefined, optional
        portworx volume
    projected : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Projected, default is Undefined, optional
        projected
    quobyte : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Quobyte, default is Undefined, optional
        quobyte
    rbd : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Rbd, default is Undefined, optional
        rbd
    scaleIO : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ScaleIO, default is Undefined, optional
        scale i o
    secret : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Secret, default is Undefined, optional
        secret
    storageos : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Storageos, default is Undefined, optional
        storageos
    vsphereVolume : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0VsphereVolume, default is Undefined, optional
        vsphere volume
    """


    awsElasticBlockStore?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0AwsElasticBlockStore

    azureDisk?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0AzureDisk

    azureFile?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0AzureFile

    cephfs?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Cephfs

    cinder?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Cinder

    configMap?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ConfigMap

    csi?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Csi

    downwardAPI?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPI

    emptyDir?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0EmptyDir

    fc?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Fc

    flexVolume?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0FlexVolume

    flocker?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Flocker

    gcePersistentDisk?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0GcePersistentDisk

    gitRepo?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0GitRepo

    glusterfs?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Glusterfs

    hostPath?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0HostPath

    iscsi?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Iscsi

    name: str

    nfs?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Nfs

    persistentVolumeClaim?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0PersistentVolumeClaim

    photonPersistentDisk?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0PhotonPersistentDisk

    portworxVolume?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0PortworxVolume

    projected?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Projected

    quobyte?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Quobyte

    rbd?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Rbd

    scaleIO?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ScaleIO

    secret?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Secret

    storageos?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Storageos

    vsphereVolume?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0VsphereVolume


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0AwsElasticBlockStore:
    r"""
    AWSElasticBlockStore represents an AWS Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore TODO: how do we prevent errors in the filesystem from compromising the machine
    partition : int, default is Undefined, optional
        The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty).
    readOnly : bool, default is Undefined, optional
        Specify "true" to force and set the ReadOnly property in VolumeMounts to "true". If omitted, the default is "false". More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    volumeID : str, default is Undefined, required
        Unique ID of the persistent disk resource in AWS (Amazon EBS volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore
    """


    fsType?: str

    partition?: int

    readOnly?: bool

    volumeID: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0AzureDisk:
    r"""
    AzureDisk represents an Azure Data Disk mount on the host and bind mount to the pod.

    Attributes
    ----------
    cachingMode : str, default is Undefined, optional
        Host Caching mode: None, Read Only, Read Write.
    diskName : str, default is Undefined, required
        The Name of the data disk in the blob storage
    diskURI : str, default is Undefined, required
        The URI the data disk in the blob storage
    fsType : str, default is Undefined, optional
        Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    kind : str, default is Undefined, optional
        Expected values Shared: multiple blob disks per storage account  Dedicated: single blob disk per storage account  Managed: azure managed data disk (only in managed availability set). defaults to shared
    readOnly : bool, default is Undefined, optional
        Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    """


    cachingMode?: str

    diskName: str

    diskURI: str

    fsType?: str

    kind?: str

    readOnly?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0AzureFile:
    r"""
    AzureFile represents an Azure File Service mount on the host and bind mount to the pod.

    Attributes
    ----------
    readOnly : bool, default is Undefined, optional
        Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretName : str, default is Undefined, required
        the name of secret that contains Azure Storage Account Name and Key
    shareName : str, default is Undefined, required
        Share Name
    """


    readOnly?: bool

    secretName: str

    shareName: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Cephfs:
    r"""
    CephFS represents a Ceph FS mount on the host that shares a pod's lifetime

    Attributes
    ----------
    monitors : [str], default is Undefined, required
        Required: Monitors is a collection of Ceph monitors More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    path : str, default is Undefined, optional
        Optional: Used as the mounted root, rather than the full Ceph tree, default is /
    readOnly : bool, default is Undefined, optional
        Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretFile : str, default is Undefined, optional
        Optional: SecretFile is the path to key ring for User, default is /etc/ceph/user.secret More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0CephfsSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        Optional: User is the rados user name, default is admin More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it
    """


    monitors: [str]

    path?: str

    readOnly?: bool

    secretFile?: str

    secretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0CephfsSecretRef

    user?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0CephfsSecretRef:
    r"""
    Optional: SecretRef is reference to the authentication secret for User, default is empty. More info: https://examples.k8s.io/volumes/cephfs/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Cinder:
    r"""
    Cinder represents a cinder volume attached and mounted on kubelets host machine. More info: https://examples.k8s.io/mysql-cinder-pd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        Filesystem type to mount. Must be a filesystem type supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    readOnly : bool, default is Undefined, optional
        Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0CinderSecretRef, default is Undefined, optional
        secret ref
    volumeID : str, default is Undefined, required
        volume id used to identify the volume in cinder. More info: https://examples.k8s.io/mysql-cinder-pd/README.md
    """


    fsType?: str

    readOnly?: bool

    secretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0CinderSecretRef

    volumeID: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0CinderSecretRef:
    r"""
    Optional: points to a secret object containing parameters used to connect to OpenStack.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ConfigMap:
    r"""
    ConfigMap represents a configMap that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ConfigMapItemsItems0], default is Undefined, optional
        If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its keys must be defined
    """


    defaultMode?: int

    items?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to project.
    mode : int, default is Undefined, optional
        Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Csi:
    r"""
    CSI (Container Storage Interface) represents storage that is handled by an external CSI driver (Alpha feature).

    Attributes
    ----------
    driver : str, default is Undefined, required
        Driver is the name of the CSI driver that handles this volume. Consult with your admin for the correct name as registered in the cluster.
    fsType : str, default is Undefined, optional
        Filesystem type to mount. Ex. "ext4", "xfs", "ntfs". If not provided, the empty value is passed to the associated CSI driver which will determine the default filesystem to apply.
    nodePublishSecretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0CsiNodePublishSecretRef, default is Undefined, optional
        node publish secret ref
    readOnly : bool, default is Undefined, optional
        Specifies a read-only configuration for the volume. Defaults to false (read/write).
    volumeAttributes : {str:str}, default is Undefined, optional
        VolumeAttributes stores driver-specific properties that are passed to the CSI driver. Consult your driver's documentation for supported values.
    """


    driver: str

    fsType?: str

    nodePublishSecretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0CsiNodePublishSecretRef

    readOnly?: bool

    volumeAttributes?: {str:str}


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0CsiNodePublishSecretRef:
    r"""
    NodePublishSecretRef is a reference to the secret object containing sensitive information to pass to the CSI driver to complete the CSI NodePublishVolume and NodeUnpublishVolume calls. This field is optional, and  may be empty if no secret is required. If the secret object contains more than one secret, all secret references are passed.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPI:
    r"""
    DownwardAPI represents downward API about the pod that should populate this volume

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of downward API volume file
    """


    defaultMode?: int

    items?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPIItemsItems0]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPIItemsItems0:
    r"""
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPIItemsItems0ResourceFieldRef


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPIItemsItems0FieldRef:
    r"""
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0DownwardAPIItemsItems0ResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0EmptyDir:
    r"""
    EmptyDir represents a temporary directory that shares a pod's lifetime. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir

    Attributes
    ----------
    medium : str, default is Undefined, optional
        What type of storage medium should back this directory. The default is "" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir
    sizeLimit : int | str, default is Undefined, optional
        Total amount of local storage required for this EmptyDir volume. The size limit is also applicable for memory medium. The maximum usage on memory medium EmptyDir would be the minimum value between the SizeLimit specified here and the sum of memory limits of all containers in a pod. The default is nil which means that the limit is undefined. More info: http://kubernetes.io/docs/user-guide/volumes#emptydir
    """


    medium?: str

    sizeLimit?: int | str


    check:
        _regex_match(str(sizeLimit), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if sizeLimit


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Fc:
    r"""
    FC represents a Fibre Channel resource that is attached to a kubelet's host machine and then exposed to the pod.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. TODO: how do we prevent errors in the filesystem from compromising the machine
    lun : int, default is Undefined, optional
        Optional: FC target lun number
    readOnly : bool, default is Undefined, optional
        Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    targetWWNs : [str], default is Undefined, optional
        Optional: FC target worldwide names (WWNs)
    wwids : [str], default is Undefined, optional
        Optional: FC volume world wide identifiers (wwids) Either wwids or combination of targetWWNs and lun must be set, but not both simultaneously.
    """


    fsType?: str

    lun?: int

    readOnly?: bool

    targetWWNs?: [str]

    wwids?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0FlexVolume:
    r"""
    FlexVolume represents a generic volume resource that is provisioned/attached using an exec based plugin.

    Attributes
    ----------
    driver : str, default is Undefined, required
        Driver is the name of the driver to use for this volume.
    fsType : str, default is Undefined, optional
        Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". The default filesystem depends on FlexVolume script.
    options : {str:str}, default is Undefined, optional
        Optional: Extra command options if any.
    readOnly : bool, default is Undefined, optional
        Optional: Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0FlexVolumeSecretRef, default is Undefined, optional
        secret ref
    """


    driver: str

    fsType?: str

    options?: {str:str}

    readOnly?: bool

    secretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0FlexVolumeSecretRef


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0FlexVolumeSecretRef:
    r"""
    Optional: SecretRef is reference to the secret object containing sensitive information to pass to the plugin scripts. This may be empty if no secret object is specified. If the secret object contains more than one secret, all secrets are passed to the plugin scripts.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Flocker:
    r"""
    Flocker represents a Flocker volume attached to a kubelet's host machine. This depends on the Flocker control service being running

    Attributes
    ----------
    datasetName : str, default is Undefined, optional
        Name of the dataset stored as metadata -> name on the dataset for Flocker should be considered as deprecated
    datasetUUID : str, default is Undefined, optional
        UUID of the dataset. This is unique identifier of a Flocker dataset
    """


    datasetName?: str

    datasetUUID?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0GcePersistentDisk:
    r"""
    GCEPersistentDisk represents a GCE Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk TODO: how do we prevent errors in the filesystem from compromising the machine
    partition : int, default is Undefined, optional
        The partition in the volume that you want to mount. If omitted, the default is to mount by volume name. Examples: For volume /dev/sda1, you specify the partition as "1". Similarly, the volume partition for /dev/sda is "0" (or you can leave the property empty). More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    pdName : str, default is Undefined, required
        Unique name of the PD resource in GCE. Used to identify the disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    readOnly : bool, default is Undefined, optional
        ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk
    """


    fsType?: str

    partition?: int

    pdName: str

    readOnly?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0GitRepo:
    r"""
    GitRepo represents a git repository at a particular revision. DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.

    Attributes
    ----------
    directory : str, default is Undefined, optional
        Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.
    repository : str, default is Undefined, required
        Repository URL
    revision : str, default is Undefined, optional
        Commit hash for the specified revision.
    """


    directory?: str

    repository: str

    revision?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Glusterfs:
    r"""
    Glusterfs represents a Glusterfs mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/glusterfs/README.md

    Attributes
    ----------
    endpoints : str, default is Undefined, required
        EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    path : str, default is Undefined, required
        Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    readOnly : bool, default is Undefined, optional
        ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod
    """


    endpoints: str

    path: str

    readOnly?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0HostPath:
    r"""
    HostPath represents a pre-existing file or directory on the host machine that is directly exposed to the container. This is generally used for system agents or other privileged things that are allowed to see the host machine. Most containers will NOT need this. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath --- TODO(jonesdl) We need to restrict who can use host directory mounts and who can/can not mount host directories as read/write.

    Attributes
    ----------
    path : str, default is Undefined, required
        Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    $type : str, default is Undefined, optional
        Type for HostPath Volume Defaults to "" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath
    """


    path: str

    $type?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Iscsi:
    r"""
    ISCSI represents an ISCSI Disk resource that is attached to a kubelet's host machine and then exposed to the pod. More info: https://examples.k8s.io/volumes/iscsi/README.md

    Attributes
    ----------
    chapAuthDiscovery : bool, default is Undefined, optional
        whether support iSCSI Discovery CHAP authentication
    chapAuthSession : bool, default is Undefined, optional
        whether support iSCSI Session CHAP authentication
    fsType : str, default is Undefined, optional
        Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi TODO: how do we prevent errors in the filesystem from compromising the machine
    initiatorName : str, default is Undefined, optional
        Custom iSCSI Initiator Name. If initiatorName is specified with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume name> will be created for the connection.
    iqn : str, default is Undefined, required
        Target iSCSI Qualified Name.
    iscsiInterface : str, default is Undefined, optional
        iSCSI Interface Name that uses an iSCSI transport. Defaults to 'default' (tcp).
    lun : int, default is Undefined, required
        iSCSI Target Lun number.
    portals : [str], default is Undefined, optional
        iSCSI Target Portal List. The portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    readOnly : bool, default is Undefined, optional
        ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false.
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0IscsiSecretRef, default is Undefined, optional
        secret ref
    targetPortal : str, default is Undefined, required
        iSCSI Target Portal. The Portal is either an IP or ip_addr:port if the port is other than default (typically TCP ports 860 and 3260).
    """


    chapAuthDiscovery?: bool

    chapAuthSession?: bool

    fsType?: str

    initiatorName?: str

    iqn: str

    iscsiInterface?: str

    lun: int

    portals?: [str]

    readOnly?: bool

    secretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0IscsiSecretRef

    targetPortal: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0IscsiSecretRef:
    r"""
    CHAP Secret for iSCSI target and initiator authentication

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Nfs:
    r"""
    NFS represents an NFS mount on the host that shares a pod's lifetime More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs

    Attributes
    ----------
    path : str, default is Undefined, required
        Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    readOnly : bool, default is Undefined, optional
        ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    server : str, default is Undefined, required
        Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs
    """


    path: str

    readOnly?: bool

    server: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0PersistentVolumeClaim:
    r"""
    PersistentVolumeClaimVolumeSource represents a reference to a PersistentVolumeClaim in the same namespace. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims

    Attributes
    ----------
    claimName : str, default is Undefined, required
        ClaimName is the name of a PersistentVolumeClaim in the same namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims
    readOnly : bool, default is Undefined, optional
        Will force the ReadOnly setting in VolumeMounts. Default false.
    """


    claimName: str

    readOnly?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0PhotonPersistentDisk:
    r"""
    PhotonPersistentDisk represents a PhotonController persistent disk attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    pdID : str, default is Undefined, required
        ID that identifies Photon Controller persistent disk
    """


    fsType?: str

    pdID: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0PortworxVolume:
    r"""
    PortworxVolume represents a portworx volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        FSType represents the filesystem type to mount Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    volumeID : str, default is Undefined, required
        VolumeID uniquely identifies a Portworx volume
    """


    fsType?: str

    readOnly?: bool

    volumeID: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Projected:
    r"""
    Items for all in one resources secrets, configmaps, and downward API

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Mode bits to use on created files by default. Must be a value between 0 and 0777. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    sources : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0], default is Undefined, required
        list of volume projections
    """


    defaultMode?: int

    sources: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0:
    r"""
    Projection that may be projected along with other supported volume types

    Attributes
    ----------
    configMap : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0ConfigMap, default is Undefined, optional
        config map
    downwardAPI : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPI, default is Undefined, optional
        downward API
    secret : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0Secret, default is Undefined, optional
        secret
    serviceAccountToken : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0ServiceAccountToken, default is Undefined, optional
        service account token
    """


    configMap?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0ConfigMap

    downwardAPI?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPI

    secret?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0Secret

    serviceAccountToken?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0ServiceAccountToken


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0ConfigMap:
    r"""
    information about the configMap data to project

    Attributes
    ----------
    items : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0], default is Undefined, optional
        If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the ConfigMap or its keys must be defined
    """


    items?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0]

    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0ConfigMapItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to project.
    mode : int, default is Undefined, optional
        Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPI:
    r"""
    information about the downwardAPI data to project

    Attributes
    ----------
    items : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0], default is Undefined, optional
        Items is a list of DownwardAPIVolume file
    """


    items?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0:
    r"""
    DownwardAPIVolumeFile represents information to create the file containing the pod field

    Attributes
    ----------
    fieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef, default is Undefined, optional
        field ref
    mode : int, default is Undefined, optional
        Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'
    resourceFieldRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef, default is Undefined, optional
        resource field ref
    """


    fieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef

    mode?: int

    path: str

    resourceFieldRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0FieldRef:
    r"""
    Required: Selects a field of the pod: only annotations, labels, name and namespace are supported.

    Attributes
    ----------
    apiVersion : str, default is Undefined, optional
        Version of the schema the FieldPath is written in terms of, defaults to "v1".
    fieldPath : str, default is Undefined, required
        Path of the field to select in the specified API version.
    """


    apiVersion?: str

    fieldPath: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0DownwardAPIItemsItems0ResourceFieldRef:
    r"""
    Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, requests.cpu and requests.memory) are currently supported.

    Attributes
    ----------
    containerName : str, default is Undefined, optional
        Container name: required for volumes, optional for env vars
    divisor : int | str, default is Undefined, optional
        Specifies the output format of the exposed resources, defaults to "1"
    resource : str, default is Undefined, required
        Required: resource to select
    """


    containerName?: str

    divisor?: int | str

    resource: str


    check:
        _regex_match(str(divisor), r"^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$") if divisor


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0Secret:
    r"""
    information about the secret data to project

    Attributes
    ----------
    items : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0SecretItemsItems0], default is Undefined, optional
        If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its key must be defined
    """


    items?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0SecretItemsItems0]

    name?: str

    optional?: bool


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to project.
    mode : int, default is Undefined, optional
        Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ProjectedSourcesItems0ServiceAccountToken:
    r"""
    information about the serviceAccountToken data to project

    Attributes
    ----------
    audience : str, default is Undefined, optional
        Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.
    expirationSeconds : int, default is Undefined, optional
        ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.
    path : str, default is Undefined, required
        Path is the path relative to the mount point of the file to project the token into.
    """


    audience?: str

    expirationSeconds?: int

    path: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Quobyte:
    r"""
    Quobyte represents a Quobyte mount on the host that shares a pod's lifetime

    Attributes
    ----------
    group : str, default is Undefined, optional
        Group to map volume access to Default is no group
    readOnly : bool, default is Undefined, optional
        ReadOnly here will force the Quobyte volume to be mounted with read-only permissions. Defaults to false.
    registry : str, default is Undefined, required
        Registry represents a single or multiple Quobyte Registry services specified as a string as host:port pair (multiple entries are separated with commas) which acts as the central registry for volumes
    tenant : str, default is Undefined, optional
        Tenant owning the given Quobyte volume in the Backend Used with dynamically provisioned Quobyte volumes, value is set by the plugin
    user : str, default is Undefined, optional
        User to map volume access to Defaults to serivceaccount user
    volume : str, default is Undefined, required
        Volume is a string that references an already created Quobyte volume by name.
    """


    group?: str

    readOnly?: bool

    registry: str

    tenant?: str

    user?: str

    volume: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Rbd:
    r"""
    RBD represents a Rados Block Device mount on the host that shares a pod's lifetime. More info: https://examples.k8s.io/volumes/rbd/README.md

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        Filesystem type of the volume that you want to mount. Tip: Ensure that the filesystem type is supported by the host operating system. Examples: "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd TODO: how do we prevent errors in the filesystem from compromising the machine
    image : str, default is Undefined, required
        The rados image name. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    keyring : str, default is Undefined, optional
        Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    monitors : [str], default is Undefined, required
        A collection of Ceph monitors. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    pool : str, default is Undefined, optional
        The rados pool name. Default is rbd. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    readOnly : bool, default is Undefined, optional
        ReadOnly here will force the ReadOnly setting in VolumeMounts. Defaults to false. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0RbdSecretRef, default is Undefined, optional
        secret ref
    user : str, default is Undefined, optional
        The rados user name. Default is admin. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it
    """


    fsType?: str

    image: str

    keyring?: str

    monitors: [str]

    pool?: str

    readOnly?: bool

    secretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0RbdSecretRef

    user?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0RbdSecretRef:
    r"""
    SecretRef is name of the authentication secret for RBDUser. If provided overrides keyring. Default is nil. More info: https://examples.k8s.io/volumes/rbd/README.md#how-to-use-it

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ScaleIO:
    r"""
    ScaleIO represents a ScaleIO persistent volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Default is "xfs".
    gateway : str, default is Undefined, required
        The host address of the ScaleIO API Gateway.
    protectionDomain : str, default is Undefined, optional
        The name of the ScaleIO Protection Domain for the configured storage.
    readOnly : bool, default is Undefined, optional
        Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ScaleIOSecretRef, default is Undefined, required
        secret ref
    sslEnabled : bool, default is Undefined, optional
        Flag to enable/disable SSL communication with Gateway, default false
    storageMode : str, default is Undefined, optional
        Indicates whether the storage for a volume should be ThickProvisioned or ThinProvisioned. Default is ThinProvisioned.
    storagePool : str, default is Undefined, optional
        The ScaleIO Storage Pool associated with the protection domain.
    system : str, default is Undefined, required
        The name of the storage system as configured in ScaleIO.
    volumeName : str, default is Undefined, optional
        The name of a volume already created in the ScaleIO system that is associated with this volume source.
    """


    fsType?: str

    gateway: str

    protectionDomain?: str

    readOnly?: bool

    secretRef: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ScaleIOSecretRef

    sslEnabled?: bool

    storageMode?: str

    storagePool?: str

    system: str

    volumeName?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0ScaleIOSecretRef:
    r"""
    SecretRef references to the secret for ScaleIO user and other sensitive information. If this is not provided, Login operation will fail.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Secret:
    r"""
    Secret represents a secret that should populate this volume. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret

    Attributes
    ----------
    defaultMode : int, default is Undefined, optional
        Optional: mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    items : [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0SecretItemsItems0], default is Undefined, optional
        If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.
    optional : bool, default is Undefined, optional
        Specify whether the Secret or its keys must be defined
    secretName : str, default is Undefined, optional
        Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret
    """


    defaultMode?: int

    items?: [InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0SecretItemsItems0]

    optional?: bool

    secretName?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0SecretItemsItems0:
    r"""
    Maps a string key to a path within a volume.

    Attributes
    ----------
    key : str, default is Undefined, required
        The key to project.
    mode : int, default is Undefined, optional
        Optional: mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.
    path : str, default is Undefined, required
        The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.
    """


    key: str

    mode?: int

    path: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0Storageos:
    r"""
    StorageOS represents a StorageOS volume attached and mounted on Kubernetes nodes.

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    readOnly : bool, default is Undefined, optional
        Defaults to false (read/write). ReadOnly here will force the ReadOnly setting in VolumeMounts.
    secretRef : InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0StorageosSecretRef, default is Undefined, optional
        secret ref
    volumeName : str, default is Undefined, optional
        VolumeName is the human-readable name of the StorageOS volume.  Volume names are only unique within a namespace.
    volumeNamespace : str, default is Undefined, optional
        VolumeNamespace specifies the scope of the volume within StorageOS.  If no namespace is specified then the Pod's namespace will be used.  This allows the Kubernetes name scoping to be mirrored within StorageOS for tighter integration. Set VolumeName to any name to override the default behaviour. Set to "default" if you are not using namespaces within StorageOS. Namespaces that do not pre-exist within StorageOS will be created.
    """


    fsType?: str

    readOnly?: bool

    secretRef?: InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0StorageosSecretRef

    volumeName?: str

    volumeNamespace?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0StorageosSecretRef:
    r"""
    SecretRef specifies the secret to use for obtaining the StorageOS API credentials.  If not specified, default values will be attempted.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecCapacityVolumesItems0VsphereVolume:
    r"""
    VsphereVolume represents a vSphere volume attached and mounted on kubelets host machine

    Attributes
    ----------
    fsType : str, default is Undefined, optional
        Filesystem type to mount. Must be a filesystem type supported by the host operating system. Ex. "ext4", "xfs", "ntfs". Implicitly inferred to be "ext4" if unspecified.
    storagePolicyID : str, default is Undefined, optional
        Storage Policy Based Management (SPBM) profile ID associated with the StoragePolicyName.
    storagePolicyName : str, default is Undefined, optional
        Storage Policy Based Management (SPBM) profile name.
    volumePath : str, default is Undefined, required
        Path that identifies vSphere volume vmdk
    """


    fsType?: str

    storagePolicyID?: str

    storagePolicyName?: str

    volumePath: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionPolicy:
    r"""
    ProvisionPolicy describes how to provision the additional capacity.

    Attributes
    ----------
    podsToReplace : [InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionPolicyPodsToReplaceItems0], default is Undefined, required
        PodsToReplace is a list of pods that can be excluded from simulation when reserving additional capacity. The semantics is that the pod for which this capacity request reserves capacity will replace the pods in this list.
    """


    podsToReplace: [InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionPolicyPodsToReplaceItems0]


schema InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionPolicyPodsToReplaceItems0:
    r"""
    LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?
    """


    name?: str


schema InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionedCapacitySelector:
    r"""
    ProvisionedCapacitySelector identifies pods that this Capacity Request is related to by. This signifies that creation of a pod matching ProvisionedCapacitySelector may mean that this Capacity Request is no longer needed. Note that this field is ignored by Cluster Autoscaler and it is the responsibility of the client to delete the Capacity Request when it becomes obsolete. If the client consumes the capacity without deleting the request, the Cluster Autoscaler will attempt to fulfill the request again.

    Attributes
    ----------
    matchExpressions : [InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionedCapacitySelectorMatchExpressionsItems0], default is Undefined, optional
        matchExpressions is a list of label selector requirements. The requirements are ANDed.
    matchLabels : {str:str}, default is Undefined, optional
        matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is "key", the operator is "In", and the values array contains only "value". The requirements are ANDed.
    """


    matchExpressions?: [InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionedCapacitySelectorMatchExpressionsItems0]

    matchLabels?: {str:str}


schema InternalAutoscalingGkeIoV1CapacityRequestSpecProvisionedCapacitySelectorMatchExpressionsItems0:
    r"""
    A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.

    Attributes
    ----------
    key : str, default is Undefined, required
        key is the label key that the selector applies to.
    operator : str, default is Undefined, required
        operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.
    values : [str], default is Undefined, optional
        values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.
    """


    key: str

    operator: str

    values?: [str]


schema InternalAutoscalingGkeIoV1CapacityRequestStatus:
    r"""
    Current status of the CapacityRequest.

    Attributes
    ----------
    conditions : [InternalAutoscalingGkeIoV1CapacityRequestStatusConditionsItems0], default is Undefined, optional
        Conditions is a set of conditions indicating the state in which the CapacityRequest is currently in.
    lastUpdateTime : str, default is Undefined, optional
        LastUpdateTime is the time when the status was last refreshed.
    """


    conditions?: [InternalAutoscalingGkeIoV1CapacityRequestStatusConditionsItems0]

    lastUpdateTime?: str


schema InternalAutoscalingGkeIoV1CapacityRequestStatusConditionsItems0:
    r"""
    CapacityRequestCondition indicates the state in which the CapacityRequest is currently in.

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        LastTransitionTime is the last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Message is a human-readable explanation containing details about the transition.
    reason : str, default is Undefined, optional
        Reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition (True, False, Unknown).
    $type : str, default is Undefined, required
        Type describes the current condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


