"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ComputeDisk:
    r"""
    compute cnrm cloud google com v1beta1 compute disk

    Attributes
    ----------
    apiVersion : str, default is "compute.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ComputeDisk", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpec, default is Undefined, required
        spec
    status : ComputeCnrmCloudGoogleComV1beta1ComputeDiskStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.cnrm.cloud.google.com/v1beta1" = "compute.cnrm.cloud.google.com/v1beta1"

    kind: "ComputeDisk" = "ComputeDisk"

    metadata?: v1.ObjectMeta

    spec: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpec

    status?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskStatus


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpec:
    r"""
    compute cnrm cloud google com v1beta1 compute disk spec

    Attributes
    ----------
    asyncPrimaryDisk : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecAsyncPrimaryDisk, default is Undefined, optional
        async primary disk
    description : str, default is Undefined, optional
        Immutable. An optional description of this resource. Provide this property when
        you create the resource.
    diskEncryptionKey : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKey, default is Undefined, optional
        disk encryption key
    enableConfidentialCompute : bool, default is Undefined, optional
        Immutable. Whether this disk is using confidential compute mode.
        Note: Only supported on hyperdisk skus, disk_encryption_key is required when setting to true.
    guestOsFeatures : [ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecGuestOsFeaturesItems0], default is Undefined, optional
        Immutable. A list of features to enable on the guest operating system.
        Applicable only for bootable disks.
    imageRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecImageRef, default is Undefined, optional
        image ref
    interface : str, default is Undefined, optional
        DEPRECATED. `interface` is deprecated. This field is no longer used and can be safely removed from your configurations; disk interfaces are automatically determined on attachment. Immutable. Specifies the disk interface to use for attaching this disk, which is either SCSI or NVME. The default is SCSI.
    licenses : [str], default is Undefined, optional
        Immutable. Any applicable license URI.
    location : str, default is Undefined, required
        Location represents the geographical location of the ComputeDisk. Specify a region name or a zone name. Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)
    multiWriter : bool, default is Undefined, optional
        Immutable. Indicates whether or not the disk can be read/write attached to more than one instance.
    physicalBlockSizeBytes : int, default is Undefined, optional
        Immutable. Physical block size of the persistent disk, in bytes. If not present
        in a request, a default value is used. Currently supported sizes
        are 4096 and 16384, other sizes may be added in the future.
        If an unsupported value is requested, the error message will list
        the supported values for the caller's project.
    projectRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecProjectRef, default is Undefined, optional
        project ref
    provisionedIops : int, default is Undefined, optional
        Indicates how many IOPS must be provisioned for the disk.
        Note: Updating currently is only supported by hyperdisk skus without the need to delete and recreate the disk, hyperdisk
        allows for an update of IOPS every 4 hours. To update your hyperdisk more frequently, you'll need to manually delete and recreate it.
    provisionedThroughput : int, default is Undefined, optional
        Indicates how much Throughput must be provisioned for the disk.
        Note: Updating currently is only supported by hyperdisk skus without the need to delete and recreate the disk, hyperdisk
        allows for an update of Throughput every 4 hours. To update your hyperdisk more frequently, you'll need to manually delete and recreate it.
    replicaZones : [str], default is Undefined, optional
        Immutable. URLs of the zones where the disk should be replicated to.
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    resourcePolicies : [ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecResourcePoliciesItems0], default is Undefined, optional
        resource policies
    size : int, default is Undefined, optional
        Size of the persistent disk, specified in GB. You can specify this
        field when creating a persistent disk using the 'image' or
        'snapshot' parameter, or specify it alone to create an empty
        persistent disk.

        If you specify this field along with 'image' or 'snapshot',
        the value must not be less than the size of the image
        or the size of the snapshot.

        Upsizing the disk is mutable, but downsizing the disk
        requires re-creating the resource.
    snapshotRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSnapshotRef, default is Undefined, optional
        snapshot ref
    sourceDiskRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceDiskRef, default is Undefined, optional
        source disk ref
    sourceImageEncryptionKey : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceImageEncryptionKey, default is Undefined, optional
        source image encryption key
    sourceSnapshotEncryptionKey : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceSnapshotEncryptionKey, default is Undefined, optional
        source snapshot encryption key
    $type : str, default is Undefined, optional
        Immutable. URL of the disk type resource describing which disk type to use to
        create the disk. Provide this when creating the disk.
    """


    asyncPrimaryDisk?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecAsyncPrimaryDisk

    description?: str

    diskEncryptionKey?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKey

    enableConfidentialCompute?: bool

    guestOsFeatures?: [ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecGuestOsFeaturesItems0]

    imageRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecImageRef

    interface?: str

    licenses?: [str]

    location: str

    multiWriter?: bool

    physicalBlockSizeBytes?: int

    projectRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecProjectRef

    provisionedIops?: int

    provisionedThroughput?: int

    replicaZones?: [str]

    resourceID?: str

    resourcePolicies?: [ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecResourcePoliciesItems0]

    size?: int

    snapshotRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSnapshotRef

    sourceDiskRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceDiskRef

    sourceImageEncryptionKey?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceImageEncryptionKey

    sourceSnapshotEncryptionKey?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceSnapshotEncryptionKey

    $type?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecAsyncPrimaryDisk:
    r"""
    Immutable. A nested object resource.

    Attributes
    ----------
    diskRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecAsyncPrimaryDiskDiskRef, default is Undefined, required
        disk ref
    """


    diskRef: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecAsyncPrimaryDiskDiskRef


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecAsyncPrimaryDiskDiskRef:
    r"""
    Immutable. Primary disk for asynchronous disk replication.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeDisk` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKey:
    r"""
    Immutable. Encrypts the disk using a customer-supplied encryption key.

    After you encrypt a disk with a customer-supplied key, you must
    provide the same key if you use the disk later (e.g. to create a disk
    snapshot or an image, or to attach the disk to a virtual machine).

    Customer-supplied encryption keys do not protect access to metadata of
    the disk.

    If you do not provide an encryption key when creating the disk, then
    the disk will be encrypted using an automatically generated key and
    you do not need to provide a key to use the disk later.

    Attributes
    ----------
    kmsKeyRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyKmsKeyRef, default is Undefined, optional
        kms key ref
    kmsKeyServiceAccountRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyKmsKeyServiceAccountRef, default is Undefined, optional
        kms key service account ref
    rawKey : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRawKey, default is Undefined, optional
        raw key
    rsaEncryptedKey : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRsaEncryptedKey, default is Undefined, optional
        rsa encrypted key
    sha256 : str, default is Undefined, optional
        The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
        encryption key that protects this resource.
    """


    kmsKeyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyKmsKeyRef

    kmsKeyServiceAccountRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyKmsKeyServiceAccountRef

    rawKey?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRawKey

    rsaEncryptedKey?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRsaEncryptedKey

    sha256?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyKmsKeyRef:
    r"""
    The encryption key used to encrypt the disk. Your project's Compute
    Engine System service account
    ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
    must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this
    feature. See
    https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyKmsKeyServiceAccountRef:
    r"""
    The service account used for the encryption request for the given KMS key.
    If absent, the Compute Engine Service Agent service account is used.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `email` field of an `IAMServiceAccount` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRawKey:
    r"""
    Immutable. Specifies a 256-bit customer-supplied encryption key, encoded in
    RFC 4648 base64 to either encrypt or decrypt this resource.

    Attributes
    ----------
    value : str, default is Undefined, optional
        Value of the field. Cannot be used if 'valueFrom' is specified.
    valueFrom : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRawKeyValueFrom, default is Undefined, optional
        value from
    """


    value?: str

    valueFrom?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRawKeyValueFrom


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRawKeyValueFrom:
    r"""
    Source for the field's value. Cannot be used if 'value' is specified.

    Attributes
    ----------
    secretKeyRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRawKeyValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    secretKeyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRawKeyValueFromSecretKeyRef


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRawKeyValueFromSecretKeyRef:
    r"""
    Reference to a value with the given key in the given Secret in the resource's namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key that identifies the value to be extracted.
    name : str, default is Undefined, required
        Name of the Secret to extract a value from.
    """


    key: str

    name: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRsaEncryptedKey:
    r"""
    Immutable. Specifies an RFC 4648 base64 encoded, RSA-wrapped 2048-bit
    customer-supplied encryption key to either encrypt or decrypt
    this resource. You can provide either the rawKey or the rsaEncryptedKey.

    Attributes
    ----------
    value : str, default is Undefined, optional
        Value of the field. Cannot be used if 'valueFrom' is specified.
    valueFrom : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRsaEncryptedKeyValueFrom, default is Undefined, optional
        value from
    """


    value?: str

    valueFrom?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRsaEncryptedKeyValueFrom


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRsaEncryptedKeyValueFrom:
    r"""
    Source for the field's value. Cannot be used if 'value' is specified.

    Attributes
    ----------
    secretKeyRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRsaEncryptedKeyValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    secretKeyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRsaEncryptedKeyValueFromSecretKeyRef


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecDiskEncryptionKeyRsaEncryptedKeyValueFromSecretKeyRef:
    r"""
    Reference to a value with the given key in the given Secret in the resource's namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key that identifies the value to be extracted.
    name : str, default is Undefined, required
        Name of the Secret to extract a value from.
    """


    key: str

    name: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecGuestOsFeaturesItems0:
    r"""
    compute cnrm cloud google com v1beta1 compute disk spec guest os features items0

    Attributes
    ----------
    $type : str, default is Undefined, required
        Immutable. The type of supported feature. Read [Enabling guest operating system features](https://cloud.google.com/compute/docs/images/create-delete-deprecate-private-images#guest-os-features) to see a list of available options. Possible values: ["MULTI_IP_SUBNET", "SECURE_BOOT", "SEV_CAPABLE", "UEFI_COMPATIBLE", "VIRTIO_SCSI_MULTIQUEUE", "WINDOWS", "GVNIC", "SEV_LIVE_MIGRATABLE", "SEV_SNP_CAPABLE", "SUSPEND_RESUME_COMPATIBLE", "TDX_CAPABLE"].
    """


    $type: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecImageRef:
    r"""
    The image from which to initialize this disk.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeImage` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecProjectRef:
    r"""
    The project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `Project` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecResourcePoliciesItems0:
    r"""
    Resource policies applied to this disk for automatic snapshot creations.
    This field only applies for zonal compute disk resources.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeResourcePolicy` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSnapshotRef:
    r"""
    The source snapshot used to create this disk.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeSnapshot` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceDiskRef:
    r"""
    The source disk used to create this disk.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeDisk` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceImageEncryptionKey:
    r"""
    Immutable. The customer-supplied encryption key of the source image. Required if
    the source image is protected by a customer-supplied encryption key.

    Attributes
    ----------
    kmsKeyRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceImageEncryptionKeyKmsKeyRef, default is Undefined, optional
        kms key ref
    kmsKeyServiceAccountRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceImageEncryptionKeyKmsKeyServiceAccountRef, default is Undefined, optional
        kms key service account ref
    rawKey : str, default is Undefined, optional
        Immutable. Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    sha256 : str, default is Undefined, optional
        The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
        encryption key that protects this resource.
    """


    kmsKeyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceImageEncryptionKeyKmsKeyRef

    kmsKeyServiceAccountRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceImageEncryptionKeyKmsKeyServiceAccountRef

    rawKey?: str

    sha256?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceImageEncryptionKeyKmsKeyRef:
    r"""
    The encryption key used to encrypt the disk. Your project's Compute
    Engine System service account
    ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
    must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this
    feature. See
    https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceImageEncryptionKeyKmsKeyServiceAccountRef:
    r"""
    The service account used for the encryption request for the given KMS key.
    If absent, the Compute Engine Service Agent service account is used.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `email` field of an `IAMServiceAccount` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceSnapshotEncryptionKey:
    r"""
    Immutable. The customer-supplied encryption key of the source snapshot. Required
    if the source snapshot is protected by a customer-supplied encryption
    key.

    Attributes
    ----------
    kmsKeyRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceSnapshotEncryptionKeyKmsKeyRef, default is Undefined, optional
        kms key ref
    kmsKeyServiceAccountRef : ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceSnapshotEncryptionKeyKmsKeyServiceAccountRef, default is Undefined, optional
        kms key service account ref
    rawKey : str, default is Undefined, optional
        Immutable. Specifies a 256-bit customer-supplied encryption key, encoded in
        RFC 4648 base64 to either encrypt or decrypt this resource.
    sha256 : str, default is Undefined, optional
        The RFC 4648 base64 encoded SHA-256 hash of the customer-supplied
        encryption key that protects this resource.
    """


    kmsKeyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceSnapshotEncryptionKeyKmsKeyRef

    kmsKeyServiceAccountRef?: ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceSnapshotEncryptionKeyKmsKeyServiceAccountRef

    rawKey?: str

    sha256?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceSnapshotEncryptionKeyKmsKeyRef:
    r"""
    The encryption key used to encrypt the disk. Your project's Compute
    Engine System service account
    ('service-{{PROJECT_NUMBER}}@compute-system.iam.gserviceaccount.com')
    must have 'roles/cloudkms.cryptoKeyEncrypterDecrypter' to use this
    feature. See
    https://cloud.google.com/compute/docs/disks/customer-managed-encryption#encrypt_a_new_persistent_disk_with_your_own_keys

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskSpecSourceSnapshotEncryptionKeyKmsKeyServiceAccountRef:
    r"""
    The service account used for the encryption request for the given KMS key.
    If absent, the Compute Engine Service Agent service account is used.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `email` field of an `IAMServiceAccount` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskStatus:
    r"""
    compute cnrm cloud google com v1beta1 compute disk status

    Attributes
    ----------
    conditions : [ComputeCnrmCloudGoogleComV1beta1ComputeDiskStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    labelFingerprint : str, default is Undefined, optional
        The fingerprint used for optimistic locking of this resource.  Used
        internally during updates.
    lastAttachTimestamp : str, default is Undefined, optional
        Last attach timestamp in RFC3339 text format.
    lastDetachTimestamp : str, default is Undefined, optional
        Last detach timestamp in RFC3339 text format.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    selfLink : str, default is Undefined, optional
        self link
    sourceDiskId : str, default is Undefined, optional
        The ID value of the disk used to create this image. This value may
        be used to determine whether the image was taken from the current
        or a previous instance of a given disk name.
    sourceImageId : str, default is Undefined, optional
        The ID value of the image used to create this disk. This value
        identifies the exact image that was used to create this persistent
        disk. For example, if you created the persistent disk from an image
        that was later deleted and recreated under the same name, the source
        image ID would identify the exact version of the image that was used.
    sourceSnapshotId : str, default is Undefined, optional
        The unique ID of the snapshot used to create this disk. This value
        identifies the exact snapshot that was used to create this persistent
        disk. For example, if you created the persistent disk from a snapshot
        that was later deleted and recreated under the same name, the source
        snapshot ID would identify the exact version of the snapshot that was
        used.
    users : [str], default is Undefined, optional
        Links to the users of the disk (attached instances) in form:
        project/zones/zone/instances/instance.
    """


    conditions?: [ComputeCnrmCloudGoogleComV1beta1ComputeDiskStatusConditionsItems0]

    creationTimestamp?: str

    labelFingerprint?: str

    lastAttachTimestamp?: str

    lastDetachTimestamp?: str

    observedGeneration?: int

    selfLink?: str

    sourceDiskId?: str

    sourceImageId?: str

    sourceSnapshotId?: str

    users?: [str]


schema ComputeCnrmCloudGoogleComV1beta1ComputeDiskStatusConditionsItems0:
    r"""
    compute cnrm cloud google com v1beta1 compute disk status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


