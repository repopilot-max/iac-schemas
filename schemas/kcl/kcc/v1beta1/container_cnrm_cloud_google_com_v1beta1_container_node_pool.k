"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ContainerNodePool:
    r"""
    container cnrm cloud google com v1beta1 container node pool

    Attributes
    ----------
    apiVersion : str, default is "container.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ContainerNodePool", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpec, default is Undefined, required
        spec
    status : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolStatus, default is Undefined, optional
        status
    """


    apiVersion: "container.cnrm.cloud.google.com/v1beta1" = "container.cnrm.cloud.google.com/v1beta1"

    kind: "ContainerNodePool" = "ContainerNodePool"

    metadata?: v1.ObjectMeta

    spec: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpec

    status?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolStatus


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpec:
    r"""
    container cnrm cloud google com v1beta1 container node pool spec

    Attributes
    ----------
    autoscaling : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecAutoscaling, default is Undefined, optional
        autoscaling
    clusterRef : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecClusterRef, default is Undefined, required
        cluster ref
    initialNodeCount : int, default is Undefined, optional
        Immutable. The initial number of nodes for the pool. In regional or multi-zonal clusters, this is the number of nodes per zone. Changing this will force recreation of the resource.
    location : str, default is Undefined, required
        Immutable. The location (region or zone) of the cluster.
    management : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecManagement, default is Undefined, optional
        management
    maxPodsPerNode : int, default is Undefined, optional
        Immutable. The maximum number of pods per node in this node pool. Note that this does not work on node pools which are "route-based" - that is, node pools belonging to clusters that do not have IP Aliasing enabled.
    namePrefix : str, default is Undefined, optional
        Immutable. Creates a unique name for the node pool beginning with the specified prefix. Conflicts with name.
    networkConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfig, default is Undefined, optional
        network config
    nodeConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfig, default is Undefined, optional
        node config
    nodeCount : int, default is Undefined, optional
        The number of nodes per instance group. This field can be used to update the number of nodes per instance group but should not be used alongside autoscaling.
    nodeLocations : [str], default is Undefined, optional
        The list of zones in which the node pool's nodes should be located. Nodes must be in the region of their regional cluster or in the same region as their cluster's zone for zonal clusters. If unspecified, the cluster-level node_locations will be used.
    placementPolicy : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecPlacementPolicy, default is Undefined, optional
        placement policy
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    upgradeSettings : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecUpgradeSettings, default is Undefined, optional
        upgrade settings
    version : str, default is Undefined, optional
        version
    """


    autoscaling?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecAutoscaling

    clusterRef: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecClusterRef

    initialNodeCount?: int

    location: str

    management?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecManagement

    maxPodsPerNode?: int

    namePrefix?: str

    networkConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfig

    nodeConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfig

    nodeCount?: int

    nodeLocations?: [str]

    placementPolicy?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecPlacementPolicy

    resourceID?: str

    upgradeSettings?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecUpgradeSettings

    version?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecAutoscaling:
    r"""
    Configuration required by cluster autoscaler to adjust the size of the node pool to the current cluster usage. To disable autoscaling, set minNodeCount and maxNodeCount to 0.

    Attributes
    ----------
    locationPolicy : str, default is Undefined, optional
        Location policy specifies the algorithm used when scaling-up the node pool. "BALANCED" - Is a best effort policy that aims to balance the sizes of available zones. "ANY" - Instructs the cluster autoscaler to prioritize utilization of unused reservations, and reduces preemption risk for Spot VMs.
    maxNodeCount : int, default is Undefined, optional
        Maximum number of nodes per zone in the node pool. Must be >= min_node_count. Cannot be used with total limits.
    minNodeCount : int, default is Undefined, optional
        Minimum number of nodes per zone in the node pool. Must be >=0 and <= max_node_count. Cannot be used with total limits.
    totalMaxNodeCount : int, default is Undefined, optional
        Maximum number of all nodes in the node pool. Must be >= total_min_node_count. Cannot be used with per zone limits.
    totalMinNodeCount : int, default is Undefined, optional
        Minimum number of all nodes in the node pool. Must be >=0 and <= total_max_node_count. Cannot be used with per zone limits.
    """


    locationPolicy?: str

    maxNodeCount?: int

    minNodeCount?: int

    totalMaxNodeCount?: int

    totalMinNodeCount?: int


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecClusterRef:
    r"""
    container cnrm cloud google com v1beta1 container node pool spec cluster ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `ContainerCluster` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecManagement:
    r"""
    Node management configuration, wherein auto-repair and auto-upgrade is configured.

    Attributes
    ----------
    autoRepair : bool, default is Undefined, optional
        Whether the nodes will be automatically repaired.
    autoUpgrade : bool, default is Undefined, optional
        Whether the nodes will be automatically upgraded.
    """


    autoRepair?: bool

    autoUpgrade?: bool


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfig:
    r"""
    Networking configuration for this NodePool. If specified, it overrides the cluster-level defaults.

    Attributes
    ----------
    additionalNodeNetworkConfigs : [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalNodeNetworkConfigsItems0], default is Undefined, optional
        Immutable. We specify the additional node networks for this node pool using this list. Each node network corresponds to an additional interface.
    additionalPodNetworkConfigs : [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalPodNetworkConfigsItems0], default is Undefined, optional
        Immutable. We specify the additional pod networks for this node pool using this list. Each pod network corresponds to an additional alias IP range for the node.
    createPodRange : bool, default is Undefined, optional
        Immutable. Whether to create a new range for pod IPs in this node pool. Defaults are provided for pod_range and pod_ipv4_cidr_block if they are not specified.
    enablePrivateNodes : bool, default is Undefined, optional
        Whether nodes have internal IP addresses only.
    podCidrOverprovisionConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigPodCidrOverprovisionConfig, default is Undefined, optional
        pod cidr overprovision config
    podIpv4CidrBlock : str, default is Undefined, optional
        Immutable. The IP address range for pod IPs in this node pool. Only applicable if create_pod_range is true. Set to blank to have a range chosen with the default size. Set to /netmask (e.g. /14) to have a range chosen with a specific netmask. Set to a CIDR notation (e.g. 10.96.0.0/14) to pick a specific range to use.
    podRange : str, default is Undefined, optional
        Immutable. The ID of the secondary range for pod IPs. If create_pod_range is true, this ID is used for the new range. If create_pod_range is false, uses an existing secondary range with this ID.
    """


    additionalNodeNetworkConfigs?: [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalNodeNetworkConfigsItems0]

    additionalPodNetworkConfigs?: [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalPodNetworkConfigsItems0]

    createPodRange?: bool

    enablePrivateNodes?: bool

    podCidrOverprovisionConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigPodCidrOverprovisionConfig

    podIpv4CidrBlock?: str

    podRange?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalNodeNetworkConfigsItems0:
    r"""
    container cnrm cloud google com v1beta1 container node pool spec network config additional node network configs items0

    Attributes
    ----------
    networkRef : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalNodeNetworkConfigsItems0NetworkRef, default is Undefined, optional
        network ref
    subnetworkRef : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalNodeNetworkConfigsItems0SubnetworkRef, default is Undefined, optional
        subnetwork ref
    """


    networkRef?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalNodeNetworkConfigsItems0NetworkRef

    subnetworkRef?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalNodeNetworkConfigsItems0SubnetworkRef


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalNodeNetworkConfigsItems0NetworkRef:
    r"""
    Immutable. Name of the VPC where the additional interface belongs.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeNetwork` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalNodeNetworkConfigsItems0SubnetworkRef:
    r"""
    Immutable. Name of the subnetwork where the additional interface belongs.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeSubnetwork` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalPodNetworkConfigsItems0:
    r"""
    container cnrm cloud google com v1beta1 container node pool spec network config additional pod network configs items0

    Attributes
    ----------
    maxPodsPerNode : int, default is Undefined, optional
        Immutable. The maximum number of pods per node which use this pod network.
    secondaryPodRange : str, default is Undefined, optional
        Immutable. The name of the secondary range on the subnet which provides IP address for this pod range.
    subnetworkRef : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalPodNetworkConfigsItems0SubnetworkRef, default is Undefined, optional
        subnetwork ref
    """


    maxPodsPerNode?: int

    secondaryPodRange?: str

    subnetworkRef?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalPodNetworkConfigsItems0SubnetworkRef


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigAdditionalPodNetworkConfigsItems0SubnetworkRef:
    r"""
    Immutable. Name of the subnetwork where the additional pod network belongs.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeSubnetwork` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNetworkConfigPodCidrOverprovisionConfig:
    r"""
    Immutable. Configuration for node-pool level pod cidr overprovision. If not set, the cluster level setting will be inherited.

    Attributes
    ----------
    disabled : bool, default is Undefined, required
        disabled
    """


    disabled: bool


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfig:
    r"""
    Immutable. The configuration of the nodepool.

    Attributes
    ----------
    advancedMachineFeatures : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigAdvancedMachineFeatures, default is Undefined, optional
        advanced machine features
    bootDiskKMSCryptoKeyRef : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigBootDiskKMSCryptoKeyRef, default is Undefined, optional
        boot disk k m s crypto key ref
    confidentialNodes : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigConfidentialNodes, default is Undefined, optional
        confidential nodes
    diskSizeGb : int, default is Undefined, optional
        Immutable. Size of the disk attached to each node, specified in GB. The smallest allowed disk size is 10GB.
    diskType : str, default is Undefined, optional
        Immutable. Type of the disk attached to each node. Such as pd-standard, pd-balanced or pd-ssd.
    ephemeralStorageConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigEphemeralStorageConfig, default is Undefined, optional
        ephemeral storage config
    ephemeralStorageLocalSsdConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigEphemeralStorageLocalSsdConfig, default is Undefined, optional
        ephemeral storage local ssd config
    fastSocket : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigFastSocket, default is Undefined, optional
        fast socket
    gcfsConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGcfsConfig, default is Undefined, optional
        gcfs config
    guestAccelerator : [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGuestAcceleratorItems0], default is Undefined, optional
        Immutable. List of the type and count of accelerator cards attached to the instance.
    gvnic : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGvnic, default is Undefined, optional
        gvnic
    hostMaintenancePolicy : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigHostMaintenancePolicy, default is Undefined, optional
        host maintenance policy
    imageType : str, default is Undefined, optional
        The image type to use for this node. Note that for a given image type, the latest version of it will be used.
    kubeletConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigKubeletConfig, default is Undefined, optional
        kubelet config
    labels : {str:str}, default is Undefined, optional
        The map of Kubernetes labels (key/value pairs) to be applied to each node. These will added in addition to any default label(s) that Kubernetes may apply to the node.
    linuxNodeConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigLinuxNodeConfig, default is Undefined, optional
        linux node config
    localNvmeSsdBlockConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigLocalNvmeSsdBlockConfig, default is Undefined, optional
        local nvme ssd block config
    localSsdCount : int, default is Undefined, optional
        Immutable. The number of local SSD disks to be attached to the node.
    loggingVariant : str, default is Undefined, optional
        Type of logging agent that is used as the default value for node pools in the cluster. Valid values include DEFAULT and MAX_THROUGHPUT.
    machineType : str, default is Undefined, optional
        Immutable. The name of a Google Compute Engine machine type.
    metadata : {str:str}, default is Undefined, optional
        Immutable. The metadata key/value pairs assigned to instances in the cluster.
    minCpuPlatform : str, default is Undefined, optional
        Immutable. Minimum CPU platform to be used by this instance. The instance may be scheduled on the specified or newer CPU platform.
    nodeGroupRef : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigNodeGroupRef, default is Undefined, optional
        node group ref
    oauthScopes : [str], default is Undefined, optional
        Immutable. The set of Google API scopes to be made available on all of the node VMs.
    preemptible : bool, default is Undefined, optional
        Immutable. Whether the nodes are created as preemptible VM instances.
    reservationAffinity : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigReservationAffinity, default is Undefined, optional
        reservation affinity
    resourceLabels : {str:str}, default is Undefined, optional
        The GCE resource labels (a map of key/value pairs) to be applied to the node pool.
    sandboxConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigSandboxConfig, default is Undefined, optional
        sandbox config
    serviceAccountRef : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigServiceAccountRef, default is Undefined, optional
        service account ref
    shieldedInstanceConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    soleTenantConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigSoleTenantConfig, default is Undefined, optional
        sole tenant config
    spot : bool, default is Undefined, optional
        Immutable. Whether the nodes are created as spot VM instances.
    tags : [str], default is Undefined, optional
        The list of instance tags applied to all nodes.
    taint : [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigTaintItems0], default is Undefined, optional
        List of Kubernetes taints to be applied to each node.
    workloadMetadataConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigWorkloadMetadataConfig, default is Undefined, optional
        workload metadata config
    """


    advancedMachineFeatures?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigAdvancedMachineFeatures

    bootDiskKMSCryptoKeyRef?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigBootDiskKMSCryptoKeyRef

    confidentialNodes?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigConfidentialNodes

    diskSizeGb?: int

    diskType?: str

    ephemeralStorageConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigEphemeralStorageConfig

    ephemeralStorageLocalSsdConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigEphemeralStorageLocalSsdConfig

    fastSocket?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigFastSocket

    gcfsConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGcfsConfig

    guestAccelerator?: [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGuestAcceleratorItems0]

    gvnic?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGvnic

    hostMaintenancePolicy?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigHostMaintenancePolicy

    imageType?: str

    kubeletConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigKubeletConfig

    labels?: {str:str}

    linuxNodeConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigLinuxNodeConfig

    localNvmeSsdBlockConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigLocalNvmeSsdBlockConfig

    localSsdCount?: int

    loggingVariant?: str

    machineType?: str

    metadata?: {str:str}

    minCpuPlatform?: str

    nodeGroupRef?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigNodeGroupRef

    oauthScopes?: [str]

    preemptible?: bool

    reservationAffinity?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigReservationAffinity

    resourceLabels?: {str:str}

    sandboxConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigSandboxConfig

    serviceAccountRef?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigServiceAccountRef

    shieldedInstanceConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigShieldedInstanceConfig

    soleTenantConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigSoleTenantConfig

    spot?: bool

    tags?: [str]

    taint?: [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigTaintItems0]

    workloadMetadataConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigWorkloadMetadataConfig


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigAdvancedMachineFeatures:
    r"""
    Immutable. Specifies options for controlling advanced machine features.

    Attributes
    ----------
    threadsPerCore : int, default is Undefined, required
        Immutable. The number of threads per physical core. To disable simultaneous multithreading (SMT) set this to 1. If unset, the maximum number of threads supported per core by the underlying processor is assumed.
    """


    threadsPerCore: int


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigBootDiskKMSCryptoKeyRef:
    r"""
    container cnrm cloud google com v1beta1 container node pool spec node config boot disk k m s crypto key ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigConfidentialNodes:
    r"""
    Immutable. Configuration for the confidential nodes feature, which makes nodes run on confidential VMs. Warning: This configuration can't be changed (or added/removed) after pool creation without deleting and recreating the entire pool.

    Attributes
    ----------
    enabled : bool, default is Undefined, required
        Immutable. Whether Confidential Nodes feature is enabled for all nodes in this pool.
    """


    enabled: bool


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigEphemeralStorageConfig:
    r"""
    Immutable. Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.

    Attributes
    ----------
    localSsdCount : int, default is Undefined, required
        Immutable. Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
    """


    localSsdCount: int


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigEphemeralStorageLocalSsdConfig:
    r"""
    Immutable. Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.

    Attributes
    ----------
    localSsdCount : int, default is Undefined, required
        Immutable. Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD must be 375 or 3000 GB in size, and all local SSDs must share the same size.
    """


    localSsdCount: int


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigFastSocket:
    r"""
    Enable or disable NCCL Fast Socket in the node pool.

    Attributes
    ----------
    enabled : bool, default is Undefined, required
        Whether or not NCCL Fast Socket is enabled.
    """


    enabled: bool


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGcfsConfig:
    r"""
    Immutable. GCFS configuration for this node.

    Attributes
    ----------
    enabled : bool, default is Undefined, required
        Immutable. Whether or not GCFS is enabled.
    """


    enabled: bool


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGuestAcceleratorItems0:
    r"""
    container cnrm cloud google com v1beta1 container node pool spec node config guest accelerator items0

    Attributes
    ----------
    count : int, default is Undefined, required
        Immutable. The number of the accelerator cards exposed to an instance.
    gpuDriverInstallationConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig, default is Undefined, optional
        gpu driver installation config
    gpuPartitionSize : str, default is Undefined, optional
        Immutable. Size of partitions to create on the GPU. Valid values are described in the NVIDIA mig user guide (https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
    gpuSharingConfig : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGuestAcceleratorItems0GpuSharingConfig, default is Undefined, optional
        gpu sharing config
    $type : str, default is Undefined, required
        Immutable. The accelerator type resource name.
    """


    count: int

    gpuDriverInstallationConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig

    gpuPartitionSize?: str

    gpuSharingConfig?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGuestAcceleratorItems0GpuSharingConfig

    $type: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGuestAcceleratorItems0GpuDriverInstallationConfig:
    r"""
    Immutable. Configuration for auto installation of GPU driver.

    Attributes
    ----------
    gpuDriverVersion : str, default is Undefined, required
        Immutable. Mode for how the GPU driver is installed.
    """


    gpuDriverVersion: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGuestAcceleratorItems0GpuSharingConfig:
    r"""
    Immutable. Configuration for GPU sharing.

    Attributes
    ----------
    gpuSharingStrategy : str, default is Undefined, required
        Immutable. The type of GPU sharing strategy to enable on the GPU node. Possible values are described in the API package (https://pkg.go.dev/google.golang.org/api/container/v1#GPUSharingConfig).
    maxSharedClientsPerGpu : int, default is Undefined, required
        Immutable. The maximum number of containers that can share a GPU.
    """


    gpuSharingStrategy: str

    maxSharedClientsPerGpu: int


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigGvnic:
    r"""
    Immutable. Enable or disable gvnic in the node pool.

    Attributes
    ----------
    enabled : bool, default is Undefined, required
        Immutable. Whether or not gvnic is enabled.
    """


    enabled: bool


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigHostMaintenancePolicy:
    r"""
    Immutable. The maintenance policy for the hosts on which the GKE VMs run on.

    Attributes
    ----------
    maintenanceInterval : str, default is Undefined, required
        Immutable. .
    """


    maintenanceInterval: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigKubeletConfig:
    r"""
    Node kubelet configs.

    Attributes
    ----------
    cpuCfsQuota : bool, default is Undefined, optional
        Enable CPU CFS quota enforcement for containers that specify CPU limits.
    cpuCfsQuotaPeriod : str, default is Undefined, optional
        Set the CPU CFS quota period value 'cpu.cfs_period_us'.
    cpuManagerPolicy : str, default is Undefined, required
        Control the CPU management policy on the node.
    podPidsLimit : int, default is Undefined, optional
        Controls the maximum number of processes allowed to run in a pod.
    """


    cpuCfsQuota?: bool

    cpuCfsQuotaPeriod?: str

    cpuManagerPolicy: str

    podPidsLimit?: int


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigLinuxNodeConfig:
    r"""
    Parameters that can be configured on Linux nodes.

    Attributes
    ----------
    cgroupMode : str, default is Undefined, optional
        cgroupMode specifies the cgroup mode to be used on the node.
    sysctls : {str:str}, default is Undefined, optional
        The Linux kernel parameters to be applied to the nodes and all pods running on the nodes.
    """


    cgroupMode?: str

    sysctls?: {str:str}


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigLocalNvmeSsdBlockConfig:
    r"""
    Immutable. Parameters for raw-block local NVMe SSDs.

    Attributes
    ----------
    localSsdCount : int, default is Undefined, required
        Immutable. Number of raw-block local NVMe SSD disks to be attached to the node. Each local SSD is 375 GB in size.
    """


    localSsdCount: int


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigNodeGroupRef:
    r"""
    Immutable. Setting this field will assign instances
    of this pool to run on the specified node group. This is useful
    for running workloads on sole tenant nodes.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `ComputeNodeGroup` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigReservationAffinity:
    r"""
    Immutable. The reservation affinity configuration for the node pool.

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, required
        Immutable. Corresponds to the type of reservation consumption.
    key : str, default is Undefined, optional
        Immutable. The label key of a reservation resource.
    values : [str], default is Undefined, optional
        Immutable. The label values of the reservation resource.
    """


    consumeReservationType: str

    key?: str

    values?: [str]


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigSandboxConfig:
    r"""
    Immutable. Sandbox configuration for this node.

    Attributes
    ----------
    sandboxType : str, default is Undefined, required
        Type of the sandbox to use for the node (e.g. 'gvisor').
    """


    sandboxType: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigServiceAccountRef:
    r"""
    container cnrm cloud google com v1beta1 container node pool spec node config service account ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `email` field of an `IAMServiceAccount` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigShieldedInstanceConfig:
    r"""
    Immutable. Shielded Instance options.

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        Immutable. Defines whether the instance has integrity monitoring enabled.
    enableSecureBoot : bool, default is Undefined, optional
        Immutable. Defines whether the instance has Secure Boot enabled.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigSoleTenantConfig:
    r"""
    Immutable. Node affinity options for sole tenant node pools.

    Attributes
    ----------
    nodeAffinity : [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigSoleTenantConfigNodeAffinityItems0], default is Undefined, required
        Immutable. .
    """


    nodeAffinity: [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigSoleTenantConfigNodeAffinityItems0]


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigSoleTenantConfigNodeAffinityItems0:
    r"""
    container cnrm cloud google com v1beta1 container node pool spec node config sole tenant config node affinity items0

    Attributes
    ----------
    key : str, default is Undefined, required
        Immutable. .
    operator : str, default is Undefined, required
        Immutable. .
    values : [str], default is Undefined, required
        Immutable. .
    """


    key: str

    operator: str

    values: [str]


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigTaintItems0:
    r"""
    container cnrm cloud google com v1beta1 container node pool spec node config taint items0

    Attributes
    ----------
    effect : str, default is Undefined, required
        Effect for taint.
    key : str, default is Undefined, required
        Key for taint.
    value : str, default is Undefined, required
        Value for taint.
    """


    effect: str

    key: str

    value: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecNodeConfigWorkloadMetadataConfig:
    r"""
    The workload metadata configuration for this node.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        Mode is the configuration for how to expose metadata to workloads running on the node.
    nodeMetadata : str, default is Undefined, optional
        DEPRECATED. Deprecated in favor of mode. NodeMetadata is the configuration for how to expose metadata to the workloads running on the node.
    """


    mode?: str

    nodeMetadata?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecPlacementPolicy:
    r"""
    Immutable. Specifies the node placement policy.

    Attributes
    ----------
    policyNameRef : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecPlacementPolicyPolicyNameRef, default is Undefined, optional
        policy name ref
    tpuTopology : str, default is Undefined, optional
        TPU placement topology for pod slice node pool. https://cloud.google.com/tpu/docs/types-topologies#tpu_topologies.
    $type : str, default is Undefined, required
        Type defines the type of placement policy.
    """


    policyNameRef?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecPlacementPolicyPolicyNameRef

    tpuTopology?: str

    $type: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecPlacementPolicyPolicyNameRef:
    r"""
    Immutable. If set, refers to the name of a custom resource policy supplied by the user. The resource policy must be in the same project and region as the node pool. If not found, InvalidArgument error is returned.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeResourcePolicy` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecUpgradeSettings:
    r"""
    Specify node upgrade settings to change how many nodes GKE attempts to upgrade at once. The number of nodes upgraded simultaneously is the sum of max_surge and max_unavailable. The maximum number of nodes upgraded simultaneously is limited to 20.

    Attributes
    ----------
    blueGreenSettings : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecUpgradeSettingsBlueGreenSettings, default is Undefined, optional
        blue green settings
    maxSurge : int, default is Undefined, optional
        The number of additional nodes that can be added to the node pool during an upgrade. Increasing max_surge raises the number of nodes that can be upgraded simultaneously. Can be set to 0 or greater.
    maxUnavailable : int, default is Undefined, optional
        The number of nodes that can be simultaneously unavailable during an upgrade. Increasing max_unavailable raises the number of nodes that can be upgraded in parallel. Can be set to 0 or greater.
    strategy : str, default is Undefined, optional
        Update strategy for the given nodepool.
    """


    blueGreenSettings?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecUpgradeSettingsBlueGreenSettings

    maxSurge?: int

    maxUnavailable?: int

    strategy?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecUpgradeSettingsBlueGreenSettings:
    r"""
    Settings for BlueGreen node pool upgrade.

    Attributes
    ----------
    nodePoolSoakDuration : str, default is Undefined, optional
        Time needed after draining entire blue pool. After this period, blue pool will be cleaned up.
    standardRolloutPolicy : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy, default is Undefined, required
        standard rollout policy
    """


    nodePoolSoakDuration?: str

    standardRolloutPolicy: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolSpecUpgradeSettingsBlueGreenSettingsStandardRolloutPolicy:
    r"""
    Standard rollout policy is the default policy for blue-green.

    Attributes
    ----------
    batchNodeCount : int, default is Undefined, optional
        Number of blue nodes to drain in a batch.
    batchPercentage : float, default is Undefined, optional
        Percentage of the blue pool nodes to drain in a batch.
    batchSoakDuration : str, default is Undefined, optional
        Soak time after each batch gets drained.
    """


    batchNodeCount?: int

    batchPercentage?: float

    batchSoakDuration?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolStatus:
    r"""
    container cnrm cloud google com v1beta1 container node pool status

    Attributes
    ----------
    conditions : [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    instanceGroupUrls : [str], default is Undefined, optional
        The resource URLs of the managed instance groups associated with this node pool.
    managedInstanceGroupUrls : [str], default is Undefined, optional
        List of instance group URLs which have been assigned to this node pool.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    observedState : ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolStatusObservedState, default is Undefined, optional
        observed state
    operation : str, default is Undefined, optional
        operation
    """


    conditions?: [ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolStatusConditionsItems0]

    instanceGroupUrls?: [str]

    managedInstanceGroupUrls?: [str]

    observedGeneration?: int

    observedState?: ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolStatusObservedState

    operation?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolStatusConditionsItems0:
    r"""
    container cnrm cloud google com v1beta1 container node pool status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


schema ContainerCnrmCloudGoogleComV1beta1ContainerNodePoolStatusObservedState:
    r"""
    The observed state of the underlying GCP resource.

    Attributes
    ----------
    version : str, default is Undefined, optional
        version
    """


    version?: str


