"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CloudBuildTrigger:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger

    Attributes
    ----------
    apiVersion : str, default is "cloudbuild.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CloudBuildTrigger", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpec, default is Undefined, optional
        spec
    status : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudbuild.cnrm.cloud.google.com/v1beta1" = "cloudbuild.cnrm.cloud.google.com/v1beta1"

    kind: "CloudBuildTrigger" = "CloudBuildTrigger"

    metadata?: v1.ObjectMeta

    spec?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpec

    status?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerStatus


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpec:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger spec

    Attributes
    ----------
    approvalConfig : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecApprovalConfig, default is Undefined, optional
        approval config
    bitbucketServerTriggerConfig : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfig, default is Undefined, optional
        bitbucket server trigger config
    build : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuild, default is Undefined, optional
        build
    description : str, default is Undefined, optional
        Human-readable description of the trigger.
    disabled : bool, default is Undefined, optional
        Whether the trigger is disabled or not. If true, the trigger will never result in a build.
    filename : str, default is Undefined, optional
        Path, from the source root, to a file whose contents is used for the template.
        Either a filename or build template must be provided. Set this only when using trigger_template or github.
        When using Pub/Sub, Webhook or Manual set the file name using git_file_source instead.
    $filter : str, default is Undefined, optional
        A Common Expression Language string. Used only with Pub/Sub and Webhook.
    gitFileSource : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSource, default is Undefined, optional
        git file source
    github : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithub, default is Undefined, optional
        github
    ignoredFiles : [str], default is Undefined, optional
        ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
        extended with support for '**'.

        If ignoredFiles and changed files are both empty, then they are not
        used to determine whether or not to trigger a build.

        If ignoredFiles is not empty, then we ignore any files that match any
        of the ignored_file globs. If the change has no files that are outside
        of the ignoredFiles globs, then we do not trigger a build.
    includeBuildLogs : str, default is Undefined, optional
        Build logs will be sent back to GitHub as part of the checkrun
        result.  Values can be INCLUDE_BUILD_LOGS_UNSPECIFIED or
        INCLUDE_BUILD_LOGS_WITH_STATUS Possible values: ["INCLUDE_BUILD_LOGS_UNSPECIFIED", "INCLUDE_BUILD_LOGS_WITH_STATUS"].
    includedFiles : [str], default is Undefined, optional
        ignoredFiles and includedFiles are file glob matches using https://golang.org/pkg/path/filepath/#Match
        extended with support for '**'.

        If any of the files altered in the commit pass the ignoredFiles filter
        and includedFiles is empty, then as far as this filter is concerned, we
        should trigger the build.

        If any of the files altered in the commit pass the ignoredFiles filter
        and includedFiles is not empty, then we make sure that at least one of
        those files matches a includedFiles glob. If not, then we do not trigger
        a build.
    location : str, default is Undefined, optional
        Immutable. The location of the Cloud Build trigger. If not specified, "global" is used. More info: cloud.google.com/build/docs/locations.
    pubsubConfig : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecPubsubConfig, default is Undefined, optional
        pubsub config
    repositoryEventConfig : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecRepositoryEventConfig, default is Undefined, optional
        repository event config
    serviceAccountRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecServiceAccountRef, default is Undefined, optional
        service account ref
    sourceToBuild : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuild, default is Undefined, optional
        source to build
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tags : [str], default is Undefined, optional
        Tags for annotation of a BuildTrigger.
    triggerTemplate : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecTriggerTemplate, default is Undefined, optional
        trigger template
    webhookConfig : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecWebhookConfig, default is Undefined, optional
        webhook config
    """


    approvalConfig?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecApprovalConfig

    bitbucketServerTriggerConfig?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfig

    build?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuild

    description?: str

    disabled?: bool

    filename?: str

    $filter?: str

    gitFileSource?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSource

    github?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithub

    ignoredFiles?: [str]

    includeBuildLogs?: str

    includedFiles?: [str]

    location?: str

    pubsubConfig?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecPubsubConfig

    repositoryEventConfig?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecRepositoryEventConfig

    serviceAccountRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecServiceAccountRef

    sourceToBuild?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuild

    substitutions?: {str:str}

    tags?: [str]

    triggerTemplate?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecTriggerTemplate

    webhookConfig?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecWebhookConfig


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecApprovalConfig:
    r"""
    Configuration for manual approval to start a build invocation of this BuildTrigger.
    Builds created by this trigger will require approval before they execute.
    Any user with a Cloud Build Approver role for the project can approve a build.

    Attributes
    ----------
    approvalRequired : bool, default is Undefined, optional
        Whether or not approval is needed. If this is set on a build, it will become pending when run,
        and will need to be explicitly approved to start.
    """


    approvalRequired?: bool


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfig:
    r"""
    BitbucketServerTriggerConfig describes the configuration of a trigger that creates a build whenever a Bitbucket Server event is received.

    Attributes
    ----------
    bitbucketServerConfigResourceRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfigBitbucketServerConfigResourceRef, default is Undefined, required
        bitbucket server config resource ref
    projectKey : str, default is Undefined, required
        Key of the project that the repo is in. For example: The key for https://mybitbucket.server/projects/TEST/repos/test-repo is "TEST".
    pullRequest : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfigPullRequest, default is Undefined, optional
        pull request
    push : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfigPush, default is Undefined, optional
        push
    repoSlug : str, default is Undefined, required
        Slug of the repository. A repository slug is a URL-friendly version of a repository name, automatically generated by Bitbucket for use in the URL.
        For example, if the repository name is 'test repo', in the URL it would become 'test-repo' as in https://mybitbucket.server/projects/TEST/repos/test-repo.
    """


    bitbucketServerConfigResourceRef: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfigBitbucketServerConfigResourceRef

    projectKey: str

    pullRequest?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfigPullRequest

    push?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfigPush

    repoSlug: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfigBitbucketServerConfigResourceRef:
    r"""
    Only `external` field is supported to configure the reference.

    The full resource name of the bitbucket server config. Format:
    projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `CloudBuildBitbucketServerConfig` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfigPullRequest:
    r"""
    Filter to match changes in pull requests.

    Attributes
    ----------
    branch : str, default is Undefined, required
        Regex of branches to match.
        The syntax of the regular expressions accepted is the syntax accepted by RE2 and described at https://github.com/google/re2/wiki/Syntax.
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment /gcbrun. Possible values: ["COMMENTS_DISABLED", "COMMENTS_ENABLED", "COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY"].
    invertRegex : bool, default is Undefined, optional
        If true, branches that do NOT match the git_ref will trigger a build.
    """


    branch: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBitbucketServerTriggerConfigPush:
    r"""
    Filter to match changes in refs like branches, tags.

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.  Specify only one of branch or tag.
    invertRegex : bool, default is Undefined, optional
        When true, only trigger a build if the revision regex does NOT match the gitRef regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.  Specify only one of branch or tag.
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuild:
    r"""
    Contents of the build template. Either a filename or build template must be provided.

    Attributes
    ----------
    artifacts : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildArtifacts, default is Undefined, optional
        artifacts
    availableSecrets : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildAvailableSecrets, default is Undefined, optional
        available secrets
    images : [str], default is Undefined, optional
        A list of images to be pushed upon the successful completion of all build steps.
        The images are pushed using the builder service account's credentials.
        The digests of the pushed images will be stored in the Build resource's results field.
        If any of the images fail to be pushed, the build status is marked FAILURE.
    logsBucketRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildLogsBucketRef, default is Undefined, optional
        logs bucket ref
    options : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildOptions, default is Undefined, optional
        options
    queueTtl : str, default is Undefined, optional
        TTL in queue for this build. If provided and the build is enqueued longer than this value,
        the build will expire and the build status will be EXPIRED.
        The TTL starts ticking from createTime.
        A duration in seconds with up to nine fractional digits, terminated by 's'. Example: "3.5s".
    secret : [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSecretItems0], default is Undefined, optional
        Secrets to decrypt using Cloud Key Management Service.
    source : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSource, default is Undefined, optional
        source
    step : [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildStepItems0], default is Undefined, required
        The operations to be performed on the workspace.
    substitutions : {str:str}, default is Undefined, optional
        Substitutions data for Build resource.
    tags : [str], default is Undefined, optional
        Tags for annotation of a Build. These are not docker tags.
    timeout : str, default is Undefined, optional
        Amount of time that this build should be allowed to run, to second granularity.
        If this amount of time elapses, work on the build will cease and the build status will be TIMEOUT.
        This timeout must be equal to or greater than the sum of the timeouts for build steps within the build.
        The expected format is the number of seconds followed by s.
        Default time is ten minutes (600s).
    """


    artifacts?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildArtifacts

    availableSecrets?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildAvailableSecrets

    images?: [str]

    logsBucketRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildLogsBucketRef

    options?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildOptions

    queueTtl?: str

    secret?: [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSecretItems0]

    source?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSource

    step: [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildStepItems0]

    substitutions?: {str:str}

    tags?: [str]

    timeout?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildArtifacts:
    r"""
    Artifacts produced by the build that should be uploaded upon successful completion of all build steps.

    Attributes
    ----------
    images : [str], default is Undefined, optional
        A list of images to be pushed upon the successful completion of all build steps.

        The images will be pushed using the builder service account's credentials.

        The digests of the pushed images will be stored in the Build resource's results field.

        If any of the images fail to be pushed, the build is marked FAILURE.
    objects : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildArtifactsObjects, default is Undefined, optional
        objects
    """


    images?: [str]

    objects?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildArtifactsObjects


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildArtifactsObjects:
    r"""
    A list of objects to be uploaded to Cloud Storage upon successful completion of all build steps.

    Files in the workspace matching specified paths globs will be uploaded to the
    Cloud Storage location using the builder service account's credentials.

    The location and generation of the uploaded objects will be stored in the Build resource's results field.

    If any objects fail to be pushed, the build is marked FAILURE.

    Attributes
    ----------
    location : str, default is Undefined, optional
        Cloud Storage bucket and optional object path, in the form "gs://bucket/path/to/somewhere/".

        Files in the workspace matching any path pattern will be uploaded to Cloud Storage with
        this location as a prefix.
    paths : [str], default is Undefined, optional
        Path globs used to match files in the build's workspace.
    timing : [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildArtifactsObjectsTimingItems0], default is Undefined, optional
        Output only. Stores timing information for pushing all artifact objects.
    """


    location?: str

    paths?: [str]

    timing?: [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildArtifactsObjectsTimingItems0]


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildArtifactsObjectsTimingItems0:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger spec build artifacts objects timing items0

    Attributes
    ----------
    endTime : str, default is Undefined, optional
        End of time span.

        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
        nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    startTime : str, default is Undefined, optional
        Start of time span.

        A timestamp in RFC3339 UTC "Zulu" format, with nanosecond resolution and up to
        nine fractional digits. Examples: "2014-10-02T15:01:23Z" and "2014-10-02T15:01:23.045123456Z".
    """


    endTime?: str

    startTime?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildAvailableSecrets:
    r"""
    Secrets and secret environment variables.

    Attributes
    ----------
    secretManager : [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildAvailableSecretsSecretManagerItems0], default is Undefined, required
        Pairs a secret environment variable with a SecretVersion in Secret Manager.
    """


    secretManager: [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildAvailableSecretsSecretManagerItems0]


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildAvailableSecretsSecretManagerItems0:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger spec build available secrets secret manager items0

    Attributes
    ----------
    env : str, default is Undefined, required
        Environment variable name to associate with the secret. Secret environment
        variables must be unique across all of a build's secrets, and must be used
        by at least one build step.
    versionRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildAvailableSecretsSecretManagerItems0VersionRef, default is Undefined, required
        version ref
    """


    env: str

    versionRef: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildAvailableSecretsSecretManagerItems0VersionRef


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildAvailableSecretsSecretManagerItems0VersionRef:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger spec build available secrets secret manager items0 version ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `SecretManagerSecretVersion` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildLogsBucketRef:
    r"""
    Google Cloud Storage bucket where logs should be written. Logs file
    names will be of the format ${logsBucket}/log-${build_id}.txt.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `url` field of a `StorageBucket` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildOptions:
    r"""
    Special options for this build.

    Attributes
    ----------
    diskSizeGb : int, default is Undefined, optional
        Requested disk size for the VM that runs the build. Note that this is NOT "disk free";
        some of the space will be used by the operating system and build utilities.
        Also note that this is the minimum disk size that will be allocated for the build --
        the build may run with a larger disk than requested. At present, the maximum disk size
        is 1000GB; builds that request more than the maximum are rejected with an error.
    dynamicSubstitutions : bool, default is Undefined, optional
        Option to specify whether or not to apply bash style string operations to the substitutions.

        NOTE this is always enabled for triggered builds and cannot be overridden in the build configuration file.
    env : [str], default is Undefined, optional
        A list of global environment variable definitions that will exist for all build steps
        in this build. If a variable is defined in both globally and in a build step,
        the variable will use the build step value.

        The elements are of the form "KEY=VALUE" for the environment variable "KEY" being given the value "VALUE".
    logStreamingOption : str, default is Undefined, optional
        Option to define build log streaming behavior to Google Cloud Storage. Possible values: ["STREAM_DEFAULT", "STREAM_ON", "STREAM_OFF"].
    logging : str, default is Undefined, optional
        Option to specify the logging mode, which determines if and where build logs are stored. Possible values: ["LOGGING_UNSPECIFIED", "LEGACY", "GCS_ONLY", "STACKDRIVER_ONLY", "CLOUD_LOGGING_ONLY", "NONE"].
    machineType : str, default is Undefined, optional
        Compute Engine machine type on which to run the build.
    requestedVerifyOption : str, default is Undefined, optional
        Requested verifiability options. Possible values: ["NOT_VERIFIED", "VERIFIED"].
    secretEnv : [str], default is Undefined, optional
        A list of global environment variables, which are encrypted using a Cloud Key Management
        Service crypto key. These values must be specified in the build's Secret. These variables
        will be available to all build steps in this build.
    sourceProvenanceHash : [str], default is Undefined, optional
        Requested hash for SourceProvenance. Possible values: ["NONE", "SHA256", "MD5"].
    substitutionOption : str, default is Undefined, optional
        Option to specify behavior when there is an error in the substitution checks.

        NOTE this is always set to ALLOW_LOOSE for triggered builds and cannot be overridden
        in the build configuration file. Possible values: ["MUST_MATCH", "ALLOW_LOOSE"].
    volumes : [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildOptionsVolumesItems0], default is Undefined, optional
        Global list of volumes to mount for ALL build steps

        Each volume is created as an empty volume prior to starting the build process.
        Upon completion of the build, volumes and their contents are discarded. Global
        volume names and paths cannot conflict with the volumes defined a build step.

        Using a global volume in a build with only one step is not valid as it is indicative
        of a build request with an incorrect configuration.
    workerPool : str, default is Undefined, optional
        Option to specify a WorkerPool for the build. Format projects/{project}/workerPools/{workerPool}

        This field is experimental.
    """


    diskSizeGb?: int

    dynamicSubstitutions?: bool

    env?: [str]

    logStreamingOption?: str

    logging?: str

    machineType?: str

    requestedVerifyOption?: str

    secretEnv?: [str]

    sourceProvenanceHash?: [str]

    substitutionOption?: str

    volumes?: [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildOptionsVolumesItems0]

    workerPool?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildOptionsVolumesItems0:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger spec build options volumes items0

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the volume to mount.

        Volume names must be unique per build step and must be valid names for Docker volumes.
        Each named volume must be used by at least two build steps.
    path : str, default is Undefined, optional
        Path at which to mount the volume.

        Paths must be absolute and cannot conflict with other volume paths on the same
        build step or with certain reserved volume paths.
    """


    name?: str

    path?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSecretItems0:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger spec build secret items0

    Attributes
    ----------
    kmsKeyRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSecretItems0KmsKeyRef, default is Undefined, required
        kms key ref
    secretEnv : {str:str}, default is Undefined, optional
        Map of environment variable name to its encrypted value.
        Secret environment variables must be unique across all of a build's secrets,
        and must be used by at least one build step. Values can be at most 64 KB in size.
        There can be at most 100 secret values across all of a build's secrets.
    """


    kmsKeyRef: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSecretItems0KmsKeyRef

    secretEnv?: {str:str}


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSecretItems0KmsKeyRef:
    r"""
    KMS crypto key to use to decrypt these envs.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSource:
    r"""
    The location of the source files to build.

    One of 'storageSource' or 'repoSource' must be provided.

    Attributes
    ----------
    repoSource : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceRepoSource, default is Undefined, optional
        repo source
    storageSource : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceStorageSource, default is Undefined, optional
        storage source
    """


    repoSource?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceRepoSource

    storageSource?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceStorageSource


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceRepoSource:
    r"""
    Location of the source in a Google Cloud Source Repository.

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Regex matching branches to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        The syntax of the regular expressions accepted is the syntax accepted by RE2 and
        described at https://github.com/google/re2/wiki/Syntax.
    commitSha : str, default is Undefined, optional
        Explicit commit SHA to build. Exactly one a of branch name, tag, or commit SHA must be provided.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
        This must be a relative path. If a step's dir is specified and is an absolute path,
        this value is ignored for that step's execution.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    projectId : str, default is Undefined, optional
        ID of the project that owns the Cloud Source Repository.
        If omitted, the project ID requesting the build is assumed.
    repoRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceRepoSourceRepoRef, default is Undefined, required
        repo ref
    substitutions : {str:str}, default is Undefined, optional
        Substitutions to use in a triggered build. Should only be used with triggers.run.
    tagName : str, default is Undefined, optional
        Regex matching tags to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        The syntax of the regular expressions accepted is the syntax accepted by RE2 and
        described at https://github.com/google/re2/wiki/Syntax.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoRef: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceRepoSourceRepoRef

    substitutions?: {str:str}

    tagName?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceRepoSourceRepoRef:
    r"""
    The desired Cloud Source Repository. If omitted, "default" is
    assumed.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `SourceRepoRepository` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceStorageSource:
    r"""
    Location of the source in an archive file in Google Cloud Storage.

    Attributes
    ----------
    bucketRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceStorageSourceBucketRef, default is Undefined, required
        bucket ref
    generation : str, default is Undefined, optional
        Google Cloud Storage generation for the object.
        If the generation is omitted, the latest generation will be used.
    object : str, default is Undefined, required
        Google Cloud Storage object containing the source.
        This object must be a gzipped archive file (.tar.gz) containing source to build.
    """


    bucketRef: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceStorageSourceBucketRef

    generation?: str

    object: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildSourceStorageSourceBucketRef:
    r"""
    Google Cloud Storage bucket containing the source.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `StorageBucket` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildStepItems0:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger spec build step items0

    Attributes
    ----------
    allowExitCodes : [int], default is Undefined, optional
        Allow this build step to fail without failing the entire build if and
        only if the exit code is one of the specified codes.

        If 'allowFailure' is also specified, this field will take precedence.
    allowFailure : bool, default is Undefined, optional
        Allow this build step to fail without failing the entire build.
        If false, the entire build will fail if this step fails. Otherwise, the
        build will succeed, but this step will still have a failure status.
        Error information will be reported in the 'failureDetail' field.

        'allowExitCodes' takes precedence over this field.
    args : [str], default is Undefined, optional
        A list of arguments that will be presented to the step when it is started.

        If the image used to run the step's container has an entrypoint, the args
        are used as arguments to that entrypoint. If the image does not define an
        entrypoint, the first element in args is used as the entrypoint, and the
        remainder will be used as arguments.
    dir : str, default is Undefined, optional
        Working directory to use when running this step's container.

        If this value is a relative path, it is relative to the build's working
        directory. If this value is absolute, it may be outside the build's working
        directory, in which case the contents of the path may not be persisted
        across build step executions, unless a 'volume' for that path is specified.

        If the build specifies a 'RepoSource' with 'dir' and a step with a
        'dir',
        which specifies an absolute path, the 'RepoSource' 'dir' is ignored
        for the step's execution.
    entrypoint : str, default is Undefined, optional
        Entrypoint to be used instead of the build step image's
        default entrypoint.
        If unset, the image's default entrypoint is used.
    env : [str], default is Undefined, optional
        A list of environment variable definitions to be used when
        running a step.

        The elements are of the form "KEY=VALUE" for the environment variable
        "KEY" being given the value "VALUE".
    id : str, default is Undefined, optional
        Unique identifier for this build step, used in 'wait_for' to
        reference this build step as a dependency.
    name : str, default is Undefined, required
        The name of the container image that will run this particular build step.

        If the image is available in the host's Docker daemon's cache, it will be
        run directly. If not, the host will attempt to pull the image first, using
        the builder service account's credentials if necessary.

        The Docker daemon's cache will already have the latest versions of all of
        the officially supported build steps (see https://github.com/GoogleCloudPlatform/cloud-builders
        for images and examples).
        The Docker daemon will also have cached many of the layers for some popular
        images, like "ubuntu", "debian", but they will be refreshed at the time
        you attempt to use them.

        If you built an image in a previous build step, it will be stored in the
        host's Docker daemon's cache and is available to use as the name for a
        later build step.
    script : str, default is Undefined, optional
        A shell script to be executed in the step.
        When script is provided, the user cannot specify the entrypoint or args.
    secretEnv : [str], default is Undefined, optional
        A list of environment variables which are encrypted using
        a Cloud Key
        Management Service crypto key. These values must be specified in
        the build's 'Secret'.
    timeout : str, default is Undefined, optional
        Time limit for executing this build step. If not defined,
        the step has no
        time limit and will be allowed to continue to run until either it
        completes or the build itself times out.
    timing : str, default is Undefined, optional
        Output only. Stores timing information for executing this
        build step.
    volumes : [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildStepItems0VolumesItems0], default is Undefined, optional
        List of volumes to mount into the build step.

        Each volume is created as an empty volume prior to execution of the
        build step. Upon completion of the build, volumes and their contents
        are discarded.

        Using a named volume in only one step is not valid as it is
        indicative of a build request with an incorrect configuration.
    waitFor : [str], default is Undefined, optional
        The ID(s) of the step(s) that this build step depends on.

        This build step will not start until all the build steps in 'wait_for'
        have completed successfully. If 'wait_for' is empty, this build step
        will start when all previous build steps in the 'Build.Steps' list
        have completed successfully.
    """


    allowExitCodes?: [int]

    allowFailure?: bool

    args?: [str]

    dir?: str

    entrypoint?: str

    env?: [str]

    id?: str

    name: str

    script?: str

    secretEnv?: [str]

    timeout?: str

    timing?: str

    volumes?: [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildStepItems0VolumesItems0]

    waitFor?: [str]


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecBuildStepItems0VolumesItems0:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger spec build step items0 volumes items0

    Attributes
    ----------
    name : str, default is Undefined, required
        Name of the volume to mount.

        Volume names must be unique per build step and must be valid names for
        Docker volumes. Each named volume must be used by at least two build steps.
    path : str, default is Undefined, required
        Path at which to mount the volume.

        Paths must be absolute and cannot conflict with other volume paths on
        the same build step or with certain reserved volume paths.
    """


    name: str

    path: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSource:
    r"""
    The file source describing the local or remote Build template.

    Attributes
    ----------
    bitbucketServerConfigRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSourceBitbucketServerConfigRef, default is Undefined, optional
        bitbucket server config ref
    githubEnterpriseConfigRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSourceGithubEnterpriseConfigRef, default is Undefined, optional
        github enterprise config ref
    path : str, default is Undefined, required
        The path of the file, with the repo root as the root of the path.
    repoType : str, default is Undefined, required
        The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
        Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER Possible values: ["UNKNOWN", "CLOUD_SOURCE_REPOSITORIES", "GITHUB", "BITBUCKET_SERVER"].
    repositoryRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSourceRepositoryRef, default is Undefined, optional
        repository ref
    revision : str, default is Undefined, optional
        The branch, tag, arbitrary ref, or SHA version of the repo to use when resolving the
        filename (optional). This field respects the same syntax/resolution as described here: https://git-scm.com/docs/gitrevisions
        If unspecified, the revision from which the trigger invocation originated is assumed to be the revision from which to read the specified path.
    uri : str, default is Undefined, optional
        The URI of the repo (optional). If unspecified, the repo from which the trigger
        invocation originated is assumed to be the repo from which to read the specified path.
    """


    bitbucketServerConfigRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSourceBitbucketServerConfigRef

    githubEnterpriseConfigRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSourceGithubEnterpriseConfigRef

    path: str

    repoType: str

    repositoryRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSourceRepositoryRef

    revision?: str

    uri?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSourceBitbucketServerConfigRef:
    r"""
    Only `external` field is supported to configure the reference.

    The full resource name of the bitbucket server config. Format:
    projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `CloudBuildBitbucketServerConfig` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSourceGithubEnterpriseConfigRef:
    r"""
    Only `external` field is supported to configure the reference.

    The full resource name of the github enterprise config. Format:
    projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `CloudBuildGithubEnterpriseConfig` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGitFileSourceRepositoryRef:
    r"""
    Only `external` field is supported to configure the reference.

    The fully qualified resource name of the Repo API repository. The fully qualified resource name of the Repo API repository.
    If unspecified, the repo from which the trigger invocation originated is assumed to be the repo from which to read the specified path.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `CloudBuildV2Repository` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithub:
    r"""
    Describes the configuration of a trigger that creates a build whenever a GitHub event is received.

    One of 'trigger_template', 'github', 'pubsub_config' or 'webhook_config' must be provided.

    Attributes
    ----------
    enterpriseConfigResourceNameRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithubEnterpriseConfigResourceNameRef, default is Undefined, optional
        enterprise config resource name ref
    name : str, default is Undefined, optional
        Name of the repository. For example: The name for
        https://github.com/googlecloudplatform/cloud-builders is "cloud-builders".
    owner : str, default is Undefined, optional
        Owner of the repository. For example: The owner for
        https://github.com/googlecloudplatform/cloud-builders is "googlecloudplatform".
    pullRequest : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithubPullRequest, default is Undefined, optional
        pull request
    push : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithubPush, default is Undefined, optional
        push
    """


    enterpriseConfigResourceNameRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithubEnterpriseConfigResourceNameRef

    name?: str

    owner?: str

    pullRequest?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithubPullRequest

    push?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithubPush


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithubEnterpriseConfigResourceNameRef:
    r"""
    Only `external` field is supported to configure the reference.

    The full resource name of the github enterprise config. Format:
    projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `CloudBuildGithubEnterpriseConfig` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithubPullRequest:
    r"""
    filter to match changes in pull requests. Specify only one of 'pull_request' or 'push'.

    Attributes
    ----------
    branch : str, default is Undefined, required
        Regex of branches to match.
    commentControl : str, default is Undefined, optional
        Whether to block builds on a "/gcbrun" comment from a repository owner or collaborator. Possible values: ["COMMENTS_DISABLED", "COMMENTS_ENABLED", "COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY"].
    invertRegex : bool, default is Undefined, optional
        If true, branches that do NOT match the git_ref will trigger a build.
    """


    branch: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecGithubPush:
    r"""
    filter to match changes in refs, like branches or tags. Specify only one of 'pull_request' or 'push'.

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.  Specify only one of branch or tag.
    invertRegex : bool, default is Undefined, optional
        When true, only trigger a build if the revision regex does NOT match the git_ref regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.  Specify only one of branch or tag.
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecPubsubConfig:
    r"""
    PubsubConfig describes the configuration of a trigger that creates
    a build whenever a Pub/Sub message is published.

    One of 'trigger_template', 'github', 'pubsub_config' 'webhook_config' or 'source_to_build' must be provided.

    Attributes
    ----------
    serviceAccountRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecPubsubConfigServiceAccountRef, default is Undefined, optional
        service account ref
    state : str, default is Undefined, optional
        Potential issues with the underlying Pub/Sub subscription configuration.
        Only populated on get requests.
    subscription : str, default is Undefined, optional
        Output only. Name of the subscription.
    topicRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecPubsubConfigTopicRef, default is Undefined, required
        topic ref
    """


    serviceAccountRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecPubsubConfigServiceAccountRef

    state?: str

    subscription?: str

    topicRef: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecPubsubConfigTopicRef


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecPubsubConfigServiceAccountRef:
    r"""
    Service account that will make the push request.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `email` field of an `IAMServiceAccount` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecPubsubConfigTopicRef:
    r"""
    The name of the topic from which this subscription
    is receiving messages.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: string of the format `projects/{{project}}/topics/{{value}}`, where {{value}} is the `name` field of a `PubSubTopic` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecRepositoryEventConfig:
    r"""
    The configuration of a trigger that creates a build whenever an event from Repo API is received.

    Attributes
    ----------
    pullRequest : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecRepositoryEventConfigPullRequest, default is Undefined, optional
        pull request
    push : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecRepositoryEventConfigPush, default is Undefined, optional
        push
    repository : str, default is Undefined, optional
        The resource name of the Repo API resource.
    """


    pullRequest?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecRepositoryEventConfigPullRequest

    push?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecRepositoryEventConfigPush

    repository?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecRepositoryEventConfigPullRequest:
    r"""
    Contains filter properties for matching Pull Requests.

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.

        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax.
    commentControl : str, default is Undefined, optional
        Configure builds to run whether a repository owner or collaborator need to comment '/gcbrun'. Possible values: ["COMMENTS_DISABLED", "COMMENTS_ENABLED", "COMMENTS_ENABLED_FOR_EXTERNAL_CONTRIBUTORS_ONLY"].
    invertRegex : bool, default is Undefined, optional
        If true, branches that do NOT match the git_ref will trigger a build.
    """


    branch?: str

    commentControl?: str

    invertRegex?: bool


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecRepositoryEventConfigPush:
    r"""
    Contains filter properties for matching git pushes.

    Attributes
    ----------
    branch : str, default is Undefined, optional
        Regex of branches to match.

        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax.
    invertRegex : bool, default is Undefined, optional
        If true, only trigger a build if the revision regex does NOT match the git_ref regex.
    tag : str, default is Undefined, optional
        Regex of tags to match.

        The syntax of the regular expressions accepted is the syntax accepted by
        RE2 and described at https://github.com/google/re2/wiki/Syntax.
    """


    branch?: str

    invertRegex?: bool

    tag?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecServiceAccountRef:
    r"""
    The service account used for all user-controlled operations including
    triggers.patch, triggers.run, builds.create, and builds.cancel.

    If no service account is set, then the standard Cloud Build service account
    ([PROJECT_NUM]@system.gserviceaccount.com) will be used instead.

    When populating via the external field, the following format is supported:
    projects/{PROJECT_ID}/serviceAccounts/{SERVICE_ACCOUNT_EMAIL}

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: string of the format `projects/{{project}}/serviceAccounts/{{value}}`, where {{value}} is the `email` field of an `IAMServiceAccount` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuild:
    r"""
    The repo and ref of the repository from which to build.
    This field is used only for those triggers that do not respond to SCM events.
    Triggers that respond to such events build source at whatever commit caused the event.
    This field is currently only used by Webhook, Pub/Sub, Manual, and Cron triggers.

    One of 'trigger_template', 'github', 'pubsub_config' 'webhook_config' or 'source_to_build' must be provided.

    Attributes
    ----------
    bitbucketServerConfigRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuildBitbucketServerConfigRef, default is Undefined, optional
        bitbucket server config ref
    githubEnterpriseConfigRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuildGithubEnterpriseConfigRef, default is Undefined, optional
        github enterprise config ref
    ref : str, default is Undefined, required
        The branch or tag to use. Must start with "refs/" (required).
    repoType : str, default is Undefined, required
        The type of the repo, since it may not be explicit from the repo field (e.g from a URL).
        Values can be UNKNOWN, CLOUD_SOURCE_REPOSITORIES, GITHUB, BITBUCKET_SERVER Possible values: ["UNKNOWN", "CLOUD_SOURCE_REPOSITORIES", "GITHUB", "BITBUCKET_SERVER"].
    repositoryRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuildRepositoryRef, default is Undefined, optional
        repository ref
    uri : str, default is Undefined, optional
        The URI of the repo.
    """


    bitbucketServerConfigRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuildBitbucketServerConfigRef

    githubEnterpriseConfigRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuildGithubEnterpriseConfigRef

    ref: str

    repoType: str

    repositoryRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuildRepositoryRef

    uri?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuildBitbucketServerConfigRef:
    r"""
    Only `external` field is supported to configure the reference.

    The full resource name of the bitbucket server config. Format:
    projects/{project}/locations/{location}/bitbucketServerConfigs/{id}.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `CloudBuildBitbucketServerConfig` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuildGithubEnterpriseConfigRef:
    r"""
    Only `external` field is supported to configure the reference.

    The full resource name of the github enterprise config. Format:
    projects/{project}/locations/{location}/githubEnterpriseConfigs/{id}.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `CloudBuildGithubEnterpriseConfig` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecSourceToBuildRepositoryRef:
    r"""
    Only `external` field is supported to configure the reference.

    The qualified resource name of the Repo API repository.
    Either uri or repository can be specified and is required.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `CloudBuildV2Repository` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecTriggerTemplate:
    r"""
    Template describing the types of source changes to trigger a build.

    Branch and tag names in trigger templates are interpreted as regular
    expressions. Any branch or tag change that matches that regular
    expression will trigger a build.

    One of 'trigger_template', 'github', 'pubsub_config', 'webhook_config' or 'source_to_build' must be provided.

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Name of the branch to build. Exactly one a of branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    commitSha : str, default is Undefined, optional
        Explicit commit SHA to build. Exactly one of a branch name, tag, or commit SHA must be provided.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.

        This must be a relative path. If a step's dir is specified and
        is an absolute path, this value is ignored for that step's
        execution.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does NOT match the revision regex.
    repoRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecTriggerTemplateRepoRef, default is Undefined, optional
        repo ref
    tagName : str, default is Undefined, optional
        Name of the tag to build. Exactly one of a branch name, tag, or commit SHA must be provided.
        This field is a regular expression.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    repoRef?: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecTriggerTemplateRepoRef

    tagName?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecTriggerTemplateRepoRef:
    r"""
    The Cloud Source Repository to build. If omitted, the repo with
    name "default" is assumed.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `SourceRepoRepository` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecWebhookConfig:
    r"""
    WebhookConfig describes the configuration of a trigger that creates
    a build whenever a webhook is sent to a trigger's webhook URL.

    One of 'trigger_template', 'github', 'pubsub_config' 'webhook_config' or 'source_to_build' must be provided.

    Attributes
    ----------
    secretRef : CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecWebhookConfigSecretRef, default is Undefined, required
        secret ref
    state : str, default is Undefined, optional
        Potential issues with the underlying Pub/Sub subscription configuration.
        Only populated on get requests.
    """


    secretRef: CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecWebhookConfigSecretRef

    state?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerSpecWebhookConfigSecretRef:
    r"""
    The secret required

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `SecretManagerSecretVersion` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerStatus:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger status

    Attributes
    ----------
    conditions : [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    createTime : str, default is Undefined, optional
        Time when the trigger was created.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    triggerId : str, default is Undefined, optional
        The unique identifier for the trigger.
    """


    conditions?: [CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerStatusConditionsItems0]

    createTime?: str

    observedGeneration?: int

    triggerId?: str


schema CloudbuildCnrmCloudGoogleComV1beta1CloudBuildTriggerStatusConditionsItems0:
    r"""
    cloudbuild cnrm cloud google com v1beta1 cloud build trigger status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


