"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema IAMWorkloadIdentityPoolProvider:
    r"""
    iam cnrm cloud google com v1beta1 i a m workload identity pool provider

    Attributes
    ----------
    apiVersion : str, default is "iam.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "IAMWorkloadIdentityPoolProvider", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpec, default is Undefined, required
        spec
    status : IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderStatus, default is Undefined, optional
        status
    """


    apiVersion: "iam.cnrm.cloud.google.com/v1beta1" = "iam.cnrm.cloud.google.com/v1beta1"

    kind: "IAMWorkloadIdentityPoolProvider" = "IAMWorkloadIdentityPoolProvider"

    metadata?: v1.ObjectMeta

    spec: IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpec

    status?: IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderStatus


schema IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpec:
    r"""
    iam cnrm cloud google com v1beta1 i a m workload identity pool provider spec

    Attributes
    ----------
    attributeCondition : str, default is Undefined, optional
        [A Common Expression Language](https://opensource.google/projects/cel) expression, in plain text, to restrict what otherwise valid authentication credentials issued by the provider should not be accepted. The expression must output a boolean representing whether to allow the federation. The following keywords may be referenced in the expressions: * `assertion`: JSON representing the authentication credential issued by the provider. * `google`: The Google attributes mapped from the assertion in the `attribute_mappings`. * `attribute`: The custom attributes mapped from the assertion in the `attribute_mappings`. The maximum length of the attribute condition expression is 4096 characters. If unspecified, all valid authentication credential are accepted. The following example shows how to only allow credentials with a mapped `google.groups` value of `admins`: ``` "'admins' in google.groups" ```
    attributeMapping : {str:str}, default is Undefined, optional
        Maps attributes from authentication credentials issued by an external identity provider to Google Cloud attributes, such as `subject` and `segment`. Each key must be a string specifying the Google Cloud IAM attribute to map to. The following keys are supported: * `google.subject`: The principal IAM is authenticating. You can reference this value in IAM bindings. This is also the subject that appears in Cloud Logging logs. Cannot exceed 127 characters. * `google.groups`: Groups the external identity belongs to. You can grant groups access to resources using an IAM `principalSet` binding; access applies to all members of the group. You can also provide custom attributes by specifying `attribute.{custom_attribute}`, where `{custom_attribute}` is the name of the custom attribute to be mapped. You can define a maximum of 50 custom attributes. The maximum length of a mapped attribute key is 100 characters, and the key may only contain the characters [a-z0-9_]. You can reference these attributes in IAM policies to define fine-grained access for a workload to Google Cloud resources. For example: * `google.subject`: `principal://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/subject/{value}` * `google.groups`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/group/{value}` * `attribute.{custom_attribute}`: `principalSet://iam.googleapis.com/projects/{project}/locations/{location}/workloadIdentityPools/{pool}/attribute.{custom_attribute}/{value}` Each value must be a [Common Expression Language] (https://opensource.google/projects/cel) function that maps an identity provider credential to the normalized attribute specified by the corresponding map key. You can use the `assertion` keyword in the expression to access a JSON representation of the authentication credential issued by the provider. The maximum length of an attribute mapping expression is 2048 characters. When evaluated, the total size of all mapped attributes must not exceed 8KB. For AWS providers, if no attribute mapping is defined, the following default mapping applies: ``` { "google.subject":"assertion.arn", "attribute.aws_role": "assertion.arn.contains('assumed-role')" " ? assertion.arn.extract('{account_arn}assumed-role/')" " + 'assumed-role/'" " + assertion.arn.extract('assumed-role/{role_name}/')" " : assertion.arn", } ``` If any custom attribute mappings are defined, they must include a mapping to the `google.subject` attribute. For OIDC providers, you must supply a custom mapping, which must include the `google.subject` attribute. For example, the following maps the `sub` claim of the incoming credential to the `subject` attribute on a Google token: ``` {"google.subject": "assertion.sub"} ```
    aws : IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecAws, default is Undefined, optional
        aws
    description : str, default is Undefined, optional
        A description for the provider. Cannot exceed 256 characters.
    disabled : bool, default is Undefined, optional
        Whether the provider is disabled. You cannot use a disabled provider to exchange tokens. However, existing tokens still grant access.
    displayName : str, default is Undefined, optional
        A display name for the provider. Cannot exceed 32 characters.
    location : str, default is Undefined, required
        Immutable. The location for the resource
    oidc : IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecOidc, default is Undefined, optional
        oidc
    projectRef : IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecProjectRef, default is Undefined, required
        project ref
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    workloadIdentityPoolRef : IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecWorkloadIdentityPoolRef, default is Undefined, required
        workload identity pool ref
    """


    attributeCondition?: str

    attributeMapping?: {str:str}

    aws?: IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecAws

    description?: str

    disabled?: bool

    displayName?: str

    location: str

    oidc?: IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecOidc

    projectRef: IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecProjectRef

    resourceID?: str

    workloadIdentityPoolRef: IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecWorkloadIdentityPoolRef


schema IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecAws:
    r"""
    An Amazon Web Services identity provider.

    Attributes
    ----------
    accountId : str, default is Undefined, required
        Required. The AWS account ID.
    stsUri : [str], default is Undefined, optional
        A list of AWS STS URIs that can be used when exchanging credentials. If not provided, any valid AWS STS URI is allowed. URIs must use the form `https://sts.amazonaws.com` or `https://sts.{region}.amazonaws.com`, where {region} is a valid AWS region. You can specify a maximum of 25 URIs.
    """


    accountId: str

    stsUri?: [str]


schema IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecOidc:
    r"""
    An OpenId Connect 1.0 identity provider.

    Attributes
    ----------
    allowedAudiences : [str], default is Undefined, optional
        Acceptable values for the `aud` field (audience) in the OIDC token. Token exchange requests are rejected if the token audience does not match one of the configured values. Each audience may be at most 256 characters. A maximum of 10 audiences may be configured. If this list is empty, the OIDC token audience must be equal to the full canonical resource name of the WorkloadIdentityPoolProvider, with or without the HTTPS prefix. For example: ``` //iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ https://iam.googleapis.com/projects//locations//workloadIdentityPools//providers/ ```
    issuerUri : str, default is Undefined, required
        Required. The OIDC issuer URL. Must be an HTTPS endpoint.
    """


    allowedAudiences?: [str]

    issuerUri: str


schema IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecProjectRef:
    r"""
    Immutable. The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The project for the resource

        Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderSpecWorkloadIdentityPoolRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The workloadIdentityPool for the resource

        Allowed value: The Google Cloud resource name of an `IAMWorkloadIdentityPool` resource (format: `projects/{{project}}/locations/{{location}}/workloadIdentityPools/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderStatus:
    r"""
    iam cnrm cloud google com v1beta1 i a m workload identity pool provider status

    Attributes
    ----------
    conditions : [IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    state : str, default is Undefined, optional
        Output only. The state of the provider. Possible values: STATE_UNSPECIFIED, ACTIVE, DELETED
    """


    conditions?: [IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderStatusConditionsItems0]

    observedGeneration?: int

    state?: str


schema IamCnrmCloudGoogleComV1beta1IAMWorkloadIdentityPoolProviderStatusConditionsItems0:
    r"""
    iam cnrm cloud google com v1beta1 i a m workload identity pool provider status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


