"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MonitoringServiceLevelObjective:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring service level objective

    Attributes
    ----------
    apiVersion : str, default is "monitoring.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MonitoringServiceLevelObjective", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpec, default is Undefined, required
        spec
    status : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.cnrm.cloud.google.com/v1beta1" = "monitoring.cnrm.cloud.google.com/v1beta1"

    kind: "MonitoringServiceLevelObjective" = "MonitoringServiceLevelObjective"

    metadata?: v1.ObjectMeta

    spec: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpec

    status?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveStatus


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpec:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring service level objective spec

    Attributes
    ----------
    calendarPeriod : str, default is Undefined, optional
        A calendar period, semantically "since the start of the current ``". At this time, only `DAY`, `WEEK`, `FORTNIGHT`, and `MONTH` are supported. Possible values: CALENDAR_PERIOD_UNSPECIFIED, DAY, WEEK, FORTNIGHT, MONTH, QUARTER, HALF, YEAR
    displayName : str, default is Undefined, optional
        Name used for UI elements listing this SLO.
    goal : float, default is Undefined, required
        The fraction of service that must be good in order for this objective to be met. `0 < goal <= 0.999`.
    projectRef : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecProjectRef, default is Undefined, required
        project ref
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    rollingPeriod : str, default is Undefined, optional
        A rolling time period, semantically "in the past ``". Must be an integer multiple of 1 day no larger than 30 days.
    serviceLevelIndicator : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicator, default is Undefined, optional
        service level indicator
    serviceRef : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceRef, default is Undefined, required
        service ref
    """


    calendarPeriod?: str

    displayName?: str

    goal: float

    projectRef: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecProjectRef

    resourceID?: str

    rollingPeriod?: str

    serviceLevelIndicator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicator

    serviceRef: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceRef


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecProjectRef:
    r"""
    Immutable. The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The project for the resource

        Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicator:
    r"""
    The definition of good service, used to measure and calculate the quality of the `Service`'s performance with respect to a single aspect of service quality.

    Attributes
    ----------
    basicSli : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorBasicSli, default is Undefined, optional
        basic sli
    requestBased : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBased, default is Undefined, optional
        request based
    windowsBased : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBased, default is Undefined, optional
        windows based
    """


    basicSli?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorBasicSli

    requestBased?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBased

    windowsBased?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBased


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorBasicSli:
    r"""
    Basic SLI on a well-known service type.

    Attributes
    ----------
    availability : any, default is Undefined, optional
        Good service is defined to be the count of requests made to this service that return successfully.
    latency : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorBasicSliLatency, default is Undefined, optional
        latency
    location : [str], default is Undefined, optional
        OPTIONAL: The set of locations to which this SLI is relevant. Telemetry from other locations will not be used to calculate performance for this SLI. If omitted, this SLI applies to all locations in which the Service has activity. For service types that don't support breaking down by location, setting this field will result in an error.
    method : [str], default is Undefined, optional
        OPTIONAL: The set of RPCs to which this SLI is relevant. Telemetry from other methods will not be used to calculate performance for this SLI. If omitted, this SLI applies to all the Service's methods. For service types that don't support breaking down by method, setting this field will result in an error.
    operationAvailability : any, default is Undefined, optional
        Good service is defined to be the count of operations performed by this service that return successfully
    operationLatency : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorBasicSliOperationLatency, default is Undefined, optional
        operation latency
    version : [str], default is Undefined, optional
        OPTIONAL: The set of API versions to which this SLI is relevant. Telemetry from other API versions will not be used to calculate performance for this SLI. If omitted, this SLI applies to all API versions. For service types that don't support breaking down by version, setting this field will result in an error.
    """


    availability?: any

    latency?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorBasicSliLatency

    location?: [str]

    method?: [str]

    operationAvailability?: any

    operationLatency?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorBasicSliOperationLatency

    version?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorBasicSliLatency:
    r"""
    Good service is defined to be the count of requests made to this service that are fast enough with respect to `latency.threshold`.

    Attributes
    ----------
    experience : str, default is Undefined, optional
        A description of the experience associated with failing requests. Possible values: LATENCY_EXPERIENCE_UNSPECIFIED, DELIGHTING, SATISFYING, ANNOYING
    threshold : str, default is Undefined, optional
        Good service is defined to be the count of requests made to this service that return in no more than `threshold`.
    """


    experience?: str

    threshold?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorBasicSliOperationLatency:
    r"""
    Good service is defined to be the count of operations performed by this service that are fast enough with respect to `operation_latency.threshold`.

    Attributes
    ----------
    experience : str, default is Undefined, optional
        A description of the experience associated with failing requests. Possible values: LATENCY_EXPERIENCE_UNSPECIFIED, DELIGHTING, SATISFYING, ANNOYING
    threshold : str, default is Undefined, optional
        Good service is defined to be the count of operations that are completed in no more than `threshold`.
    """


    experience?: str

    threshold?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBased:
    r"""
    Request-based SLIs

    Attributes
    ----------
    distributionCut : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBasedDistributionCut, default is Undefined, optional
        distribution cut
    goodTotalRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBasedGoodTotalRatio, default is Undefined, optional
        good total ratio
    """


    distributionCut?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBasedDistributionCut

    goodTotalRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBasedGoodTotalRatio


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBasedDistributionCut:
    r"""
    `distribution_cut` is used when `good_service` is a count of values aggregated in a `Distribution` that fall into a good range. The `total_service` is the total count of all values aggregated in the `Distribution`.

    Attributes
    ----------
    distributionFilter : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying a `TimeSeries` aggregating values. Must have `ValueType = DISTRIBUTION` and `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
    range : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBasedDistributionCutRange, default is Undefined, optional
        range
    """


    distributionFilter?: str

    range?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBasedDistributionCutRange


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBasedDistributionCutRange:
    r"""
    Range of values considered "good." For a one-sided range, set one bound to an infinite value.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Range maximum.
    min : float, default is Undefined, optional
        Range minimum.
    """


    max?: float

    min?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorRequestBasedGoodTotalRatio:
    r"""
    `good_total_ratio` is used when the ratio of `good_service` to `total_service` is computed from two `TimeSeries`.

    Attributes
    ----------
    badServiceFilter : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying a `TimeSeries` quantifying bad service, either demanded service that was not provided or demanded service that was of inadequate quality. Must have `ValueType = DOUBLE` or `ValueType = INT64` and must have `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
    goodServiceFilter : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying a `TimeSeries` quantifying good service provided. Must have `ValueType = DOUBLE` or `ValueType = INT64` and must have `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
    totalServiceFilter : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying a `TimeSeries` quantifying total demanded service. Must have `ValueType = DOUBLE` or `ValueType = INT64` and must have `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
    """


    badServiceFilter?: str

    goodServiceFilter?: str

    totalServiceFilter?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBased:
    r"""
    Windows-based SLIs

    Attributes
    ----------
    goodBadMetricFilter : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying a `TimeSeries` with `ValueType = BOOL`. The window is good if any `true` values appear in the window.
    goodTotalRatioThreshold : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThreshold, default is Undefined, optional
        good total ratio threshold
    metricMeanInRange : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricMeanInRange, default is Undefined, optional
        metric mean in range
    metricSumInRange : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricSumInRange, default is Undefined, optional
        metric sum in range
    windowPeriod : str, default is Undefined, optional
        Duration over which window quality is evaluated. Must be an integer fraction of a day and at least `60s`.
    """


    goodBadMetricFilter?: str

    goodTotalRatioThreshold?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThreshold

    metricMeanInRange?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricMeanInRange

    metricSumInRange?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricSumInRange

    windowPeriod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThreshold:
    r"""
    A window is good if its `performance` is high enough.

    Attributes
    ----------
    basicSliPerformance : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdBasicSliPerformance, default is Undefined, optional
        basic sli performance
    performance : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformance, default is Undefined, optional
        performance
    threshold : float, default is Undefined, optional
        If window `performance >= threshold`, the window is counted as good.
    """


    basicSliPerformance?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdBasicSliPerformance

    performance?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformance

    threshold?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdBasicSliPerformance:
    r"""
    `BasicSli` to evaluate to judge window quality.

    Attributes
    ----------
    availability : any, default is Undefined, optional
        Good service is defined to be the count of requests made to this service that return successfully.
    latency : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdBasicSliPerformanceLatency, default is Undefined, optional
        latency
    location : [str], default is Undefined, optional
        OPTIONAL: The set of locations to which this SLI is relevant. Telemetry from other locations will not be used to calculate performance for this SLI. If omitted, this SLI applies to all locations in which the Service has activity. For service types that don't support breaking down by location, setting this field will result in an error.
    method : [str], default is Undefined, optional
        OPTIONAL: The set of RPCs to which this SLI is relevant. Telemetry from other methods will not be used to calculate performance for this SLI. If omitted, this SLI applies to all the Service's methods. For service types that don't support breaking down by method, setting this field will result in an error.
    operationAvailability : any, default is Undefined, optional
        Good service is defined to be the count of operations performed by this service that return successfully
    operationLatency : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdBasicSliPerformanceOperationLatency, default is Undefined, optional
        operation latency
    version : [str], default is Undefined, optional
        OPTIONAL: The set of API versions to which this SLI is relevant. Telemetry from other API versions will not be used to calculate performance for this SLI. If omitted, this SLI applies to all API versions. For service types that don't support breaking down by version, setting this field will result in an error.
    """


    availability?: any

    latency?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdBasicSliPerformanceLatency

    location?: [str]

    method?: [str]

    operationAvailability?: any

    operationLatency?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdBasicSliPerformanceOperationLatency

    version?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdBasicSliPerformanceLatency:
    r"""
    Good service is defined to be the count of requests made to this service that are fast enough with respect to `latency.threshold`.

    Attributes
    ----------
    experience : str, default is Undefined, optional
        A description of the experience associated with failing requests. Possible values: LATENCY_EXPERIENCE_UNSPECIFIED, DELIGHTING, SATISFYING, ANNOYING
    threshold : str, default is Undefined, optional
        Good service is defined to be the count of requests made to this service that return in no more than `threshold`.
    """


    experience?: str

    threshold?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdBasicSliPerformanceOperationLatency:
    r"""
    Good service is defined to be the count of operations performed by this service that are fast enough with respect to `operation_latency.threshold`.

    Attributes
    ----------
    experience : str, default is Undefined, optional
        A description of the experience associated with failing requests. Possible values: LATENCY_EXPERIENCE_UNSPECIFIED, DELIGHTING, SATISFYING, ANNOYING
    threshold : str, default is Undefined, optional
        Good service is defined to be the count of operations that are completed in no more than `threshold`.
    """


    experience?: str

    threshold?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformance:
    r"""
    `RequestBasedSli` to evaluate to judge window quality.

    Attributes
    ----------
    distributionCut : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformanceDistributionCut, default is Undefined, optional
        distribution cut
    goodTotalRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformanceGoodTotalRatio, default is Undefined, optional
        good total ratio
    """


    distributionCut?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformanceDistributionCut

    goodTotalRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformanceGoodTotalRatio


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformanceDistributionCut:
    r"""
    `distribution_cut` is used when `good_service` is a count of values aggregated in a `Distribution` that fall into a good range. The `total_service` is the total count of all values aggregated in the `Distribution`.

    Attributes
    ----------
    distributionFilter : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying a `TimeSeries` aggregating values. Must have `ValueType = DISTRIBUTION` and `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
    range : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformanceDistributionCutRange, default is Undefined, optional
        range
    """


    distributionFilter?: str

    range?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformanceDistributionCutRange


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformanceDistributionCutRange:
    r"""
    Range of values considered "good." For a one-sided range, set one bound to an infinite value.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Range maximum.
    min : float, default is Undefined, optional
        Range minimum.
    """


    max?: float

    min?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedGoodTotalRatioThresholdPerformanceGoodTotalRatio:
    r"""
    `good_total_ratio` is used when the ratio of `good_service` to `total_service` is computed from two `TimeSeries`.

    Attributes
    ----------
    badServiceFilter : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying a `TimeSeries` quantifying bad service, either demanded service that was not provided or demanded service that was of inadequate quality. Must have `ValueType = DOUBLE` or `ValueType = INT64` and must have `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
    goodServiceFilter : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying a `TimeSeries` quantifying good service provided. Must have `ValueType = DOUBLE` or `ValueType = INT64` and must have `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
    totalServiceFilter : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying a `TimeSeries` quantifying total demanded service. Must have `ValueType = DOUBLE` or `ValueType = INT64` and must have `MetricKind = DELTA` or `MetricKind = CUMULATIVE`.
    """


    badServiceFilter?: str

    goodServiceFilter?: str

    totalServiceFilter?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricMeanInRange:
    r"""
    A window is good if the metric's value is in a good range, averaged across returned streams.

    Attributes
    ----------
    range : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricMeanInRangeRange, default is Undefined, optional
        range
    timeSeries : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying the `TimeSeries` to use for evaluating window quality.
    """


    range?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricMeanInRangeRange

    timeSeries?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricMeanInRangeRange:
    r"""
    Range of values considered "good." For a one-sided range, set one bound to an infinite value.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Range maximum.
    min : float, default is Undefined, optional
        Range minimum.
    """


    max?: float

    min?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricSumInRange:
    r"""
    A window is good if the metric's value is in a good range, summed across returned streams.

    Attributes
    ----------
    range : MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricSumInRangeRange, default is Undefined, optional
        range
    timeSeries : str, default is Undefined, optional
        A [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) specifying the `TimeSeries` to use for evaluating window quality.
    """


    range?: MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricSumInRangeRange

    timeSeries?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceLevelIndicatorWindowsBasedMetricSumInRangeRange:
    r"""
    Range of values considered "good." For a one-sided range, set one bound to an infinite value.

    Attributes
    ----------
    max : float, default is Undefined, optional
        Range maximum.
    min : float, default is Undefined, optional
        Range minimum.
    """


    max?: float

    min?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveSpecServiceRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The service for the resource

        Allowed value: The Google Cloud resource name of a `MonitoringService` resource (format: `projects/{{project}}/services/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveStatus:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring service level objective status

    Attributes
    ----------
    conditions : [MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    createTime : str, default is Undefined, optional
        Time stamp of the `Create` or most recent `Update` command on this `Slo`.
    deleteTime : str, default is Undefined, optional
        Time stamp of the `Update` or `Delete` command that made this no longer a current `Slo`. This field is not populated in `ServiceLevelObjective`s returned from calls to `GetServiceLevelObjective` and `ListServiceLevelObjectives`, because it is always empty in the current version. It is populated in `ServiceLevelObjective`s representing previous versions in the output of `ListServiceLevelObjectiveVersions`. Because all old configuration versions are stored, `Update` operations mark the obsoleted version as deleted.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    serviceManagementOwned : bool, default is Undefined, optional
        Output only. If set, this SLO is managed at the [Service Management](https://cloud.google.com/service-management/overview) level. Therefore the service yaml file is the source of truth for this SLO, and API `Update` and `Delete` operations are forbidden.
    """


    conditions?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveStatusConditionsItems0]

    createTime?: str

    deleteTime?: str

    observedGeneration?: int

    serviceManagementOwned?: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringServiceLevelObjectiveStatusConditionsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring service level objective status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


