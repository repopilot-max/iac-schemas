"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MonitoringDashboard:
    r"""
    MonitoringDashboard is the Schema for the monitoring API

    Attributes
    ----------
    apiVersion : str, default is "monitoring.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MonitoringDashboard", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpec, default is Undefined, required
        spec
    status : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.cnrm.cloud.google.com/v1beta1" = "monitoring.cnrm.cloud.google.com/v1beta1"

    kind: "MonitoringDashboard" = "MonitoringDashboard"

    metadata?: v1.ObjectMeta

    spec: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpec

    status?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardStatus


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpec:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec

    Attributes
    ----------
    columnLayout : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayout, default is Undefined, optional
        column layout
    dashboardFilters : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecDashboardFiltersItems0], default is Undefined, optional
        Filters to reduce the amount of data charted based on the filter criteria.
    displayName : str, default is Undefined, required
        Required. The mutable, human-readable name.
    gridLayout : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayout, default is Undefined, optional
        grid layout
    mosaicLayout : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayout, default is Undefined, optional
        mosaic layout
    projectRef : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecProjectRef, default is Undefined, required
        project ref
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition.
    rowLayout : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayout, default is Undefined, optional
        row layout
    """


    columnLayout?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayout

    dashboardFilters?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecDashboardFiltersItems0]

    displayName: str

    gridLayout?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayout

    mosaicLayout?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayout

    projectRef: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecProjectRef

    resourceID?: str

    rowLayout?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayout


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayout:
    r"""
    The content is divided into equally spaced columns and the widgets are arranged vertically.

    Attributes
    ----------
    columns : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0], default is Undefined, optional
        The columns of content to display.
    """


    columns?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0

    Attributes
    ----------
    weight : int, default is Undefined, optional
        The relative weight of this column. The column weight is used to adjust the width of columns on the screen (relative to peers).
    widgets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0], default is Undefined, optional
        The display widgets arranged vertically in this column.
    """


    weight?: int

    widgets?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0 widgets items0

    Attributes
    ----------
    alertChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0AlertChart, default is Undefined, optional
        alert chart
    blank : any, default is Undefined, optional
        A blank space.
    collapsibleGroup : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0CollapsibleGroup, default is Undefined, optional
        collapsible group
    errorReportingPanel : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ErrorReportingPanel, default is Undefined, optional
        error reporting panel
    id : str, default is Undefined, optional
        Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.
    incidentList : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0IncidentList, default is Undefined, optional
        incident list
    logsPanel : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0LogsPanel, default is Undefined, optional
        logs panel
    pieChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChart, default is Undefined, optional
        pie chart
    scorecard : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0Scorecard, default is Undefined, optional
        scorecard
    sectionHeader : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0SectionHeader, default is Undefined, optional
        section header
    singleViewGroup : any, default is Undefined, optional
        A widget that groups the other widgets by using a dropdown menu.
    text : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0Text, default is Undefined, optional
        text
    timeSeriesTable : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTable, default is Undefined, optional
        time series table
    title : str, default is Undefined, optional
        Optional. The title of the widget.
    xyChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChart, default is Undefined, optional
        xy chart
    """


    alertChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0AlertChart

    blank?: any

    collapsibleGroup?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0CollapsibleGroup

    errorReportingPanel?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ErrorReportingPanel

    id?: str

    incidentList?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0IncidentList

    logsPanel?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0LogsPanel

    pieChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChart

    scorecard?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0Scorecard

    sectionHeader?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0SectionHeader

    singleViewGroup?: any

    text?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0Text

    timeSeriesTable?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTable

    title?: str

    xyChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChart


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0AlertChart:
    r"""
    A chart of alert policy data.

    Attributes
    ----------
    alertPolicyRef : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0AlertChartAlertPolicyRef, default is Undefined, required
        alert policy ref
    """


    alertPolicyRef: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0AlertChartAlertPolicyRef


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0AlertChartAlertPolicyRef:
    r"""
    Required. A reference to the MonitoringAlertPolicy.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The value of an externally managed MonitoringAlertPolicy resource. Should be in the format "projects/{{projectID}}/alertPolicies/{{alertPolicyID}}".
    name : str, default is Undefined, optional
        The name of a MonitoringAlertPolicy resource.
    namespace : str, default is Undefined, optional
        The namespace of a MonitoringAlertPolicy resource.
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0CollapsibleGroup:
    r"""
    A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.

    Attributes
    ----------
    collapsed : bool, default is Undefined, optional
        The collapsed state of the widget on first page load.
    """


    collapsed?: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ErrorReportingPanel:
    r"""
    A widget that displays a list of error groups.

    Attributes
    ----------
    projectRefs : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ErrorReportingPanelProjectRefsItems0], default is Undefined, optional
        The projects from which to gather errors.
    services : [str], default is Undefined, optional
        An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed.
    versions : [str], default is Undefined, optional
        Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.
    """


    projectRefs?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ErrorReportingPanelProjectRefsItems0]

    services?: [str]

    versions?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ErrorReportingPanelProjectRefsItems0:
    r"""
    The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The `projectID` field of a project, when not managed by Config Connector.
    kind : str, default is Undefined, optional
        The kind of the Project resource; optional but must be `Project` if provided.
    name : str, default is Undefined, optional
        The `name` field of a `Project` resource.
    namespace : str, default is Undefined, optional
        The `namespace` field of a `Project` resource.
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0IncidentList:
    r"""
    A widget that shows list of incidents.

    Attributes
    ----------
    monitoredResources : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0IncidentListMonitoredResourcesItems0], default is Undefined, optional
        Optional. The monitored resource for which incidents are listed.
    policyRefs : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0IncidentListPolicyRefsItems0], default is Undefined, optional
        Optional. A list of alert policies to filter the incident list by.
    """


    monitoredResources?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0IncidentListMonitoredResourcesItems0]

    policyRefs?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0IncidentListPolicyRefsItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0IncidentListMonitoredResourcesItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0 widgets items0 incident list monitored resources items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Required. Values for all of the labels listed in the associated monitored resource descriptor.
    $type : str, default is Undefined, optional
        Required. The monitored resource type. This field must match the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object.
    """


    labels?: {str:str}

    $type?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0IncidentListPolicyRefsItems0:
    r"""
    MonitoringAlertPolicyRef defines the resource reference to MonitoringAlertPolicy, which "External" field holds the GCP identifier for the KRM object.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The value of an externally managed MonitoringAlertPolicy resource. Should be in the format "projects/{{projectID}}/alertPolicies/{{alertPolicyID}}".
    name : str, default is Undefined, optional
        The name of a MonitoringAlertPolicy resource.
    namespace : str, default is Undefined, optional
        The namespace of a MonitoringAlertPolicy resource.
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0LogsPanel:
    r"""
    A widget that shows a stream of logs.

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter that chooses which log entries to return.  See [Advanced Logs Queries](https://cloud.google.com/logging/docs/view/advanced-queries).
    resourceNames : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0LogsPanelResourceNamesItems0], default is Undefined, optional
        The names of logging resources to collect logs for.
    """


    $filter?: str

    resourceNames?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0LogsPanelResourceNamesItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0LogsPanelResourceNamesItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0 widgets items0 logs panel resource names items0

    Attributes
    ----------
    external : str, default is Undefined, optional
        The external name of the referenced resource
    kind : str, default is Undefined, optional
        Kind of the referent.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChart:
    r"""
    A widget that displays timeseries data as a pie chart.

    Attributes
    ----------
    chartType : str, default is Undefined, required
        Required. Indicates the visualization type for the PieChart.
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0], default is Undefined, required
        Required. The queries for the chart's data.
    showLabels : bool, default is Undefined, optional
        Optional. Indicates whether or not the pie chart should show slices' labels
    """


    chartType: str

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0]

    showLabels?: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0 widgets items0 pie chart data sets items0

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    sliceNameTemplate : str, default is Undefined, optional
        Optional. A template for the name of the slice.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQuery, default is Undefined, required
        time series query
    """


    minAlignmentPeriod?: str

    sliceNameTemplate?: str

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQuery:
    r"""
    Required. The query for the PieChart. See, `google.monitoring.dashboard.v1.TimeSeriesQuery`.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0Scorecard:
    r"""
    A scorecard summarizing time series data.

    Attributes
    ----------
    blankView : any, default is Undefined, optional
        Will cause the `Scorecard` to show only the value, with no indicator to its value relative to its thresholds.
    gaugeView : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardGaugeView, default is Undefined, optional
        gauge view
    sparkChartView : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardSparkChartView, default is Undefined, optional
        spark chart view
    thresholds : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardThresholdsItems0], default is Undefined, optional
        The thresholds used to determine the state of the scorecard given the time series' current value.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQuery, default is Undefined, required
        time series query
    """


    blankView?: any

    gaugeView?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardGaugeView

    sparkChartView?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardSparkChartView

    thresholds?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardThresholdsItems0]

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardGaugeView:
    r"""
    Will cause the scorecard to show a gauge chart.

    Attributes
    ----------
    lowerBound : float, default is Undefined, optional
        The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.
    upperBound : float, default is Undefined, optional
        The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.
    """


    lowerBound?: float

    upperBound?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardSparkChartView:
    r"""
    Will cause the scorecard to show a spark chart.

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query.
    sparkChartType : str, default is Undefined, required
        Required. The type of sparkchart to show in this chartView.
    """


    minAlignmentPeriod?: str

    sparkChartType: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardThresholdsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0 widgets items0 scorecard thresholds items0

    Attributes
    ----------
    color : str, default is Undefined, optional
        The state color for this threshold. Color is not allowed in a XyChart.
    direction : str, default is Undefined, optional
        The direction for the current threshold. Direction is not allowed in a XyChart.
    label : str, default is Undefined, optional
        A label for the threshold.
    targetAxis : str, default is Undefined, optional
        The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
    value : float, default is Undefined, optional
        The value of the threshold. The value should be defined in the native scale of the metric.
    """


    color?: str

    direction?: str

    label?: str

    targetAxis?: str

    value?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQuery:
    r"""
    Required. Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0SectionHeader:
    r"""
    A widget that defines a section header for easier navigation of the dashboard.

    Attributes
    ----------
    dividerBelow : bool, default is Undefined, optional
        Whether to insert a divider below the section in the table of contents
    subtitle : str, default is Undefined, optional
        The subtitle of the section
    """


    dividerBelow?: bool

    subtitle?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0Text:
    r"""
    A raw string or markdown displaying textual content.

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text content to be displayed.
    format : str, default is Undefined, optional
        How the text content is formatted.
    style : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TextStyle, default is Undefined, optional
        style
    """


    content?: str

    format?: str

    style?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TextStyle


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TextStyle:
    r"""
    How the text is styled

    Attributes
    ----------
    backgroundColor : str, default is Undefined, optional
        The background color as a hex string. "#RRGGBB" or "#RGB"
    fontSize : str, default is Undefined, optional
        Font sizes for both the title and content. The title will still be larger relative to the content.
    horizontalAlignment : str, default is Undefined, optional
        The horizontal alignment of both the title and content
    padding : str, default is Undefined, optional
        The amount of padding around the widget
    pointerLocation : str, default is Undefined, optional
        The pointer location for this widget (also sometimes called a "tail")
    textColor : str, default is Undefined, optional
        The text color as a hex string. "#RRGGBB" or "#RGB"
    verticalAlignment : str, default is Undefined, optional
        The vertical alignment of both the title and content
    """


    backgroundColor?: str

    fontSize?: str

    horizontalAlignment?: str

    padding?: str

    pointerLocation?: str

    textColor?: str

    verticalAlignment?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTable:
    r"""
    A widget that displays time series data in a tabular format.

    Attributes
    ----------
    columnSettings : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableColumnSettingsItems0], default is Undefined, optional
        Optional. The list of the persistent column settings for the table.
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0], default is Undefined, required
        Required. The data displayed in this table.
    metricVisualization : str, default is Undefined, optional
        Optional. Store rendering strategy
    """


    columnSettings?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableColumnSettingsItems0]

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0]

    metricVisualization?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableColumnSettingsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0 widgets items0 time series table column settings items0

    Attributes
    ----------
    column : str, default is Undefined, required
        Required. The id of the column.
    visible : bool, default is Undefined, required
        Required. Whether the column should be visible on page load.
    """


    column: str

    visible: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0 widgets items0 time series table data sets items0

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    tableDisplayOptions : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TableDisplayOptions, default is Undefined, optional
        table display options
    tableTemplate : str, default is Undefined, optional
        Optional. A template string for naming `TimeSeries` in the resulting data set.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQuery, default is Undefined, optional
        time series query
    """


    minAlignmentPeriod?: str

    tableDisplayOptions?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TableDisplayOptions

    tableTemplate?: str

    timeSeriesQuery?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TableDisplayOptions:
    r"""
    Optional. Table display options for configuring how the table is rendered.

    Attributes
    ----------
    shownColumns : [str], default is Undefined, optional
        Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings
    """


    shownColumns?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQuery:
    r"""
    Required. Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChart:
    r"""
    A chart of time series data.

    Attributes
    ----------
    chartOptions : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartChartOptions, default is Undefined, optional
        chart options
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0], default is Undefined, required
        Required. The data displayed in this chart.
    thresholds : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartThresholdsItems0], default is Undefined, optional
        Threshold lines drawn horizontally across the chart.
    timeshiftDuration : str, default is Undefined, optional
        The duration used to display a comparison chart.
    xAxis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartXAxis, default is Undefined, optional
        x axis
    y2Axis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartY2Axis, default is Undefined, optional
        y2 axis
    yAxis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartYAxis, default is Undefined, optional
        y axis
    """


    chartOptions?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartChartOptions

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0]

    thresholds?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartThresholdsItems0]

    timeshiftDuration?: str

    xAxis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartXAxis

    y2Axis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartY2Axis

    yAxis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartYAxis


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartChartOptions:
    r"""
    Display options for the chart.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The chart mode.
    """


    mode?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0 widgets items0 xy chart data sets items0

    Attributes
    ----------
    legendTemplate : str, default is Undefined, optional
        A template string for naming `TimeSeries` in the resulting data set.
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    plotType : str, default is Undefined, optional
        How this data should be plotted on the chart.
    targetAxis : str, default is Undefined, optional
        Optional. The target axis to use for plotting the metric.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQuery, default is Undefined, required
        time series query
    """


    legendTemplate?: str

    minAlignmentPeriod?: str

    plotType?: str

    targetAxis?: str

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQuery:
    r"""
    Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartThresholdsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec column layout columns items0 widgets items0 xy chart thresholds items0

    Attributes
    ----------
    color : str, default is Undefined, optional
        The state color for this threshold. Color is not allowed in a XyChart.
    direction : str, default is Undefined, optional
        The direction for the current threshold. Direction is not allowed in a XyChart.
    label : str, default is Undefined, optional
        A label for the threshold.
    targetAxis : str, default is Undefined, optional
        The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
    value : float, default is Undefined, optional
        The value of the threshold. The value should be defined in the native scale of the metric.
    """


    color?: str

    direction?: str

    label?: str

    targetAxis?: str

    value?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartXAxis:
    r"""
    The properties applied to the x-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartY2Axis:
    r"""
    The properties applied to the y2-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecColumnLayoutColumnsItems0WidgetsItems0XyChartYAxis:
    r"""
    The properties applied to the y-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecDashboardFiltersItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec dashboard filters items0

    Attributes
    ----------
    filterType : str, default is Undefined, optional
        The specified filter type
    labelKey : str, default is Undefined, required
        Required. The key for the label
    stringValue : str, default is Undefined, optional
        A variable-length string value.
    templateVariable : str, default is Undefined, optional
        The placeholder text that can be referenced in a filter string or MQL query. If omitted, the dashboard filter will be applied to all relevant widgets in the dashboard.
    """


    filterType?: str

    labelKey: str

    stringValue?: str

    templateVariable?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayout:
    r"""
    Content is arranged with a basic layout that re-flows a simple list of informational elements like widgets or tiles.

    Attributes
    ----------
    columns : int, default is Undefined, optional
        The number of columns into which the view's width is divided. If omitted or set to zero, a system default will be used while rendering.
    widgets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0], default is Undefined, optional
        The informational elements that are arranged into the columns row-first.
    """


    columns?: int

    widgets?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec grid layout widgets items0

    Attributes
    ----------
    alertChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0AlertChart, default is Undefined, optional
        alert chart
    blank : any, default is Undefined, optional
        A blank space.
    collapsibleGroup : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0CollapsibleGroup, default is Undefined, optional
        collapsible group
    errorReportingPanel : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ErrorReportingPanel, default is Undefined, optional
        error reporting panel
    id : str, default is Undefined, optional
        Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.
    incidentList : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0IncidentList, default is Undefined, optional
        incident list
    logsPanel : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0LogsPanel, default is Undefined, optional
        logs panel
    pieChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChart, default is Undefined, optional
        pie chart
    scorecard : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0Scorecard, default is Undefined, optional
        scorecard
    sectionHeader : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0SectionHeader, default is Undefined, optional
        section header
    singleViewGroup : any, default is Undefined, optional
        A widget that groups the other widgets by using a dropdown menu.
    text : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0Text, default is Undefined, optional
        text
    timeSeriesTable : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTable, default is Undefined, optional
        time series table
    title : str, default is Undefined, optional
        Optional. The title of the widget.
    xyChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChart, default is Undefined, optional
        xy chart
    """


    alertChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0AlertChart

    blank?: any

    collapsibleGroup?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0CollapsibleGroup

    errorReportingPanel?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ErrorReportingPanel

    id?: str

    incidentList?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0IncidentList

    logsPanel?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0LogsPanel

    pieChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChart

    scorecard?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0Scorecard

    sectionHeader?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0SectionHeader

    singleViewGroup?: any

    text?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0Text

    timeSeriesTable?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTable

    title?: str

    xyChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChart


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0AlertChart:
    r"""
    A chart of alert policy data.

    Attributes
    ----------
    alertPolicyRef : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0AlertChartAlertPolicyRef, default is Undefined, required
        alert policy ref
    """


    alertPolicyRef: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0AlertChartAlertPolicyRef


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0AlertChartAlertPolicyRef:
    r"""
    Required. A reference to the MonitoringAlertPolicy.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The value of an externally managed MonitoringAlertPolicy resource. Should be in the format "projects/{{projectID}}/alertPolicies/{{alertPolicyID}}".
    name : str, default is Undefined, optional
        The name of a MonitoringAlertPolicy resource.
    namespace : str, default is Undefined, optional
        The namespace of a MonitoringAlertPolicy resource.
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0CollapsibleGroup:
    r"""
    A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.

    Attributes
    ----------
    collapsed : bool, default is Undefined, optional
        The collapsed state of the widget on first page load.
    """


    collapsed?: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ErrorReportingPanel:
    r"""
    A widget that displays a list of error groups.

    Attributes
    ----------
    projectRefs : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ErrorReportingPanelProjectRefsItems0], default is Undefined, optional
        The projects from which to gather errors.
    services : [str], default is Undefined, optional
        An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed.
    versions : [str], default is Undefined, optional
        Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.
    """


    projectRefs?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ErrorReportingPanelProjectRefsItems0]

    services?: [str]

    versions?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ErrorReportingPanelProjectRefsItems0:
    r"""
    The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The `projectID` field of a project, when not managed by Config Connector.
    kind : str, default is Undefined, optional
        The kind of the Project resource; optional but must be `Project` if provided.
    name : str, default is Undefined, optional
        The `name` field of a `Project` resource.
    namespace : str, default is Undefined, optional
        The `namespace` field of a `Project` resource.
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0IncidentList:
    r"""
    A widget that shows list of incidents.

    Attributes
    ----------
    monitoredResources : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0IncidentListMonitoredResourcesItems0], default is Undefined, optional
        Optional. The monitored resource for which incidents are listed.
    policyRefs : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0IncidentListPolicyRefsItems0], default is Undefined, optional
        Optional. A list of alert policies to filter the incident list by.
    """


    monitoredResources?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0IncidentListMonitoredResourcesItems0]

    policyRefs?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0IncidentListPolicyRefsItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0IncidentListMonitoredResourcesItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec grid layout widgets items0 incident list monitored resources items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Required. Values for all of the labels listed in the associated monitored resource descriptor.
    $type : str, default is Undefined, optional
        Required. The monitored resource type. This field must match the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object.
    """


    labels?: {str:str}

    $type?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0IncidentListPolicyRefsItems0:
    r"""
    MonitoringAlertPolicyRef defines the resource reference to MonitoringAlertPolicy, which "External" field holds the GCP identifier for the KRM object.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The value of an externally managed MonitoringAlertPolicy resource. Should be in the format "projects/{{projectID}}/alertPolicies/{{alertPolicyID}}".
    name : str, default is Undefined, optional
        The name of a MonitoringAlertPolicy resource.
    namespace : str, default is Undefined, optional
        The namespace of a MonitoringAlertPolicy resource.
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0LogsPanel:
    r"""
    A widget that shows a stream of logs.

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter that chooses which log entries to return.  See [Advanced Logs Queries](https://cloud.google.com/logging/docs/view/advanced-queries).
    resourceNames : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0LogsPanelResourceNamesItems0], default is Undefined, optional
        The names of logging resources to collect logs for.
    """


    $filter?: str

    resourceNames?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0LogsPanelResourceNamesItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0LogsPanelResourceNamesItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec grid layout widgets items0 logs panel resource names items0

    Attributes
    ----------
    external : str, default is Undefined, optional
        The external name of the referenced resource
    kind : str, default is Undefined, optional
        Kind of the referent.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChart:
    r"""
    A widget that displays timeseries data as a pie chart.

    Attributes
    ----------
    chartType : str, default is Undefined, required
        Required. Indicates the visualization type for the PieChart.
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0], default is Undefined, required
        Required. The queries for the chart's data.
    showLabels : bool, default is Undefined, optional
        Optional. Indicates whether or not the pie chart should show slices' labels
    """


    chartType: str

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0]

    showLabels?: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec grid layout widgets items0 pie chart data sets items0

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    sliceNameTemplate : str, default is Undefined, optional
        Optional. A template for the name of the slice.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQuery, default is Undefined, required
        time series query
    """


    minAlignmentPeriod?: str

    sliceNameTemplate?: str

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQuery:
    r"""
    Required. The query for the PieChart. See, `google.monitoring.dashboard.v1.TimeSeriesQuery`.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0Scorecard:
    r"""
    A scorecard summarizing time series data.

    Attributes
    ----------
    blankView : any, default is Undefined, optional
        Will cause the `Scorecard` to show only the value, with no indicator to its value relative to its thresholds.
    gaugeView : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardGaugeView, default is Undefined, optional
        gauge view
    sparkChartView : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardSparkChartView, default is Undefined, optional
        spark chart view
    thresholds : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardThresholdsItems0], default is Undefined, optional
        The thresholds used to determine the state of the scorecard given the time series' current value.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQuery, default is Undefined, required
        time series query
    """


    blankView?: any

    gaugeView?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardGaugeView

    sparkChartView?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardSparkChartView

    thresholds?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardThresholdsItems0]

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardGaugeView:
    r"""
    Will cause the scorecard to show a gauge chart.

    Attributes
    ----------
    lowerBound : float, default is Undefined, optional
        The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.
    upperBound : float, default is Undefined, optional
        The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.
    """


    lowerBound?: float

    upperBound?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardSparkChartView:
    r"""
    Will cause the scorecard to show a spark chart.

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query.
    sparkChartType : str, default is Undefined, required
        Required. The type of sparkchart to show in this chartView.
    """


    minAlignmentPeriod?: str

    sparkChartType: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardThresholdsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec grid layout widgets items0 scorecard thresholds items0

    Attributes
    ----------
    color : str, default is Undefined, optional
        The state color for this threshold. Color is not allowed in a XyChart.
    direction : str, default is Undefined, optional
        The direction for the current threshold. Direction is not allowed in a XyChart.
    label : str, default is Undefined, optional
        A label for the threshold.
    targetAxis : str, default is Undefined, optional
        The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
    value : float, default is Undefined, optional
        The value of the threshold. The value should be defined in the native scale of the metric.
    """


    color?: str

    direction?: str

    label?: str

    targetAxis?: str

    value?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQuery:
    r"""
    Required. Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0SectionHeader:
    r"""
    A widget that defines a section header for easier navigation of the dashboard.

    Attributes
    ----------
    dividerBelow : bool, default is Undefined, optional
        Whether to insert a divider below the section in the table of contents
    subtitle : str, default is Undefined, optional
        The subtitle of the section
    """


    dividerBelow?: bool

    subtitle?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0Text:
    r"""
    A raw string or markdown displaying textual content.

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text content to be displayed.
    format : str, default is Undefined, optional
        How the text content is formatted.
    style : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TextStyle, default is Undefined, optional
        style
    """


    content?: str

    format?: str

    style?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TextStyle


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TextStyle:
    r"""
    How the text is styled

    Attributes
    ----------
    backgroundColor : str, default is Undefined, optional
        The background color as a hex string. "#RRGGBB" or "#RGB"
    fontSize : str, default is Undefined, optional
        Font sizes for both the title and content. The title will still be larger relative to the content.
    horizontalAlignment : str, default is Undefined, optional
        The horizontal alignment of both the title and content
    padding : str, default is Undefined, optional
        The amount of padding around the widget
    pointerLocation : str, default is Undefined, optional
        The pointer location for this widget (also sometimes called a "tail")
    textColor : str, default is Undefined, optional
        The text color as a hex string. "#RRGGBB" or "#RGB"
    verticalAlignment : str, default is Undefined, optional
        The vertical alignment of both the title and content
    """


    backgroundColor?: str

    fontSize?: str

    horizontalAlignment?: str

    padding?: str

    pointerLocation?: str

    textColor?: str

    verticalAlignment?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTable:
    r"""
    A widget that displays time series data in a tabular format.

    Attributes
    ----------
    columnSettings : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableColumnSettingsItems0], default is Undefined, optional
        Optional. The list of the persistent column settings for the table.
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0], default is Undefined, required
        Required. The data displayed in this table.
    metricVisualization : str, default is Undefined, optional
        Optional. Store rendering strategy
    """


    columnSettings?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableColumnSettingsItems0]

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0]

    metricVisualization?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableColumnSettingsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec grid layout widgets items0 time series table column settings items0

    Attributes
    ----------
    column : str, default is Undefined, required
        Required. The id of the column.
    visible : bool, default is Undefined, required
        Required. Whether the column should be visible on page load.
    """


    column: str

    visible: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec grid layout widgets items0 time series table data sets items0

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    tableDisplayOptions : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TableDisplayOptions, default is Undefined, optional
        table display options
    tableTemplate : str, default is Undefined, optional
        Optional. A template string for naming `TimeSeries` in the resulting data set.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQuery, default is Undefined, optional
        time series query
    """


    minAlignmentPeriod?: str

    tableDisplayOptions?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TableDisplayOptions

    tableTemplate?: str

    timeSeriesQuery?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TableDisplayOptions:
    r"""
    Optional. Table display options for configuring how the table is rendered.

    Attributes
    ----------
    shownColumns : [str], default is Undefined, optional
        Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings
    """


    shownColumns?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQuery:
    r"""
    Required. Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChart:
    r"""
    A chart of time series data.

    Attributes
    ----------
    chartOptions : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartChartOptions, default is Undefined, optional
        chart options
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0], default is Undefined, required
        Required. The data displayed in this chart.
    thresholds : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartThresholdsItems0], default is Undefined, optional
        Threshold lines drawn horizontally across the chart.
    timeshiftDuration : str, default is Undefined, optional
        The duration used to display a comparison chart.
    xAxis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartXAxis, default is Undefined, optional
        x axis
    y2Axis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartY2Axis, default is Undefined, optional
        y2 axis
    yAxis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartYAxis, default is Undefined, optional
        y axis
    """


    chartOptions?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartChartOptions

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0]

    thresholds?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartThresholdsItems0]

    timeshiftDuration?: str

    xAxis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartXAxis

    y2Axis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartY2Axis

    yAxis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartYAxis


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartChartOptions:
    r"""
    Display options for the chart.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The chart mode.
    """


    mode?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec grid layout widgets items0 xy chart data sets items0

    Attributes
    ----------
    legendTemplate : str, default is Undefined, optional
        A template string for naming `TimeSeries` in the resulting data set.
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    plotType : str, default is Undefined, optional
        How this data should be plotted on the chart.
    targetAxis : str, default is Undefined, optional
        Optional. The target axis to use for plotting the metric.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQuery, default is Undefined, required
        time series query
    """


    legendTemplate?: str

    minAlignmentPeriod?: str

    plotType?: str

    targetAxis?: str

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQuery:
    r"""
    Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartThresholdsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec grid layout widgets items0 xy chart thresholds items0

    Attributes
    ----------
    color : str, default is Undefined, optional
        The state color for this threshold. Color is not allowed in a XyChart.
    direction : str, default is Undefined, optional
        The direction for the current threshold. Direction is not allowed in a XyChart.
    label : str, default is Undefined, optional
        A label for the threshold.
    targetAxis : str, default is Undefined, optional
        The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
    value : float, default is Undefined, optional
        The value of the threshold. The value should be defined in the native scale of the metric.
    """


    color?: str

    direction?: str

    label?: str

    targetAxis?: str

    value?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartXAxis:
    r"""
    The properties applied to the x-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartY2Axis:
    r"""
    The properties applied to the y2-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecGridLayoutWidgetsItems0XyChartYAxis:
    r"""
    The properties applied to the y-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayout:
    r"""
    The content is arranged as a grid of tiles, with each content widget occupying one or more grid blocks.

    Attributes
    ----------
    columns : int, default is Undefined, optional
        The number of columns in the mosaic grid. The number of columns must be between 1 and 12, inclusive.
    tiles : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0], default is Undefined, optional
        The tiles to display.
    """


    columns?: int

    tiles?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec mosaic layout tiles items0

    Attributes
    ----------
    height : int, default is Undefined, optional
        The height of the tile, measured in grid blocks. Tiles must have a minimum height of 1.
    widget : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0Widget, default is Undefined, optional
        widget
    width : int, default is Undefined, optional
        The width of the tile, measured in grid blocks. Tiles must have a minimum width of 1.
    xPos : int, default is Undefined, optional
        The zero-indexed position of the tile in grid blocks relative to the left edge of the grid. Tiles must be contained within the specified number of columns. `x_pos` cannot be negative.
    yPos : int, default is Undefined, optional
        The zero-indexed position of the tile in grid blocks relative to the top edge of the grid. `y_pos` cannot be negative.
    """


    height?: int

    widget?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0Widget

    width?: int

    xPos?: int

    yPos?: int


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0Widget:
    r"""
    The informational widget contained in the tile. For example an `XyChart`.

    Attributes
    ----------
    alertChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetAlertChart, default is Undefined, optional
        alert chart
    blank : any, default is Undefined, optional
        A blank space.
    collapsibleGroup : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetCollapsibleGroup, default is Undefined, optional
        collapsible group
    errorReportingPanel : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetErrorReportingPanel, default is Undefined, optional
        error reporting panel
    id : str, default is Undefined, optional
        Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.
    incidentList : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetIncidentList, default is Undefined, optional
        incident list
    logsPanel : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetLogsPanel, default is Undefined, optional
        logs panel
    pieChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChart, default is Undefined, optional
        pie chart
    scorecard : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecard, default is Undefined, optional
        scorecard
    sectionHeader : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetSectionHeader, default is Undefined, optional
        section header
    singleViewGroup : any, default is Undefined, optional
        A widget that groups the other widgets by using a dropdown menu.
    text : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetText, default is Undefined, optional
        text
    timeSeriesTable : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTable, default is Undefined, optional
        time series table
    title : str, default is Undefined, optional
        Optional. The title of the widget.
    xyChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChart, default is Undefined, optional
        xy chart
    """


    alertChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetAlertChart

    blank?: any

    collapsibleGroup?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetCollapsibleGroup

    errorReportingPanel?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetErrorReportingPanel

    id?: str

    incidentList?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetIncidentList

    logsPanel?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetLogsPanel

    pieChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChart

    scorecard?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecard

    sectionHeader?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetSectionHeader

    singleViewGroup?: any

    text?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetText

    timeSeriesTable?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTable

    title?: str

    xyChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChart


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetAlertChart:
    r"""
    A chart of alert policy data.

    Attributes
    ----------
    alertPolicyRef : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetAlertChartAlertPolicyRef, default is Undefined, required
        alert policy ref
    """


    alertPolicyRef: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetAlertChartAlertPolicyRef


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetAlertChartAlertPolicyRef:
    r"""
    Required. A reference to the MonitoringAlertPolicy.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The value of an externally managed MonitoringAlertPolicy resource. Should be in the format "projects/{{projectID}}/alertPolicies/{{alertPolicyID}}".
    name : str, default is Undefined, optional
        The name of a MonitoringAlertPolicy resource.
    namespace : str, default is Undefined, optional
        The namespace of a MonitoringAlertPolicy resource.
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetCollapsibleGroup:
    r"""
    A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.

    Attributes
    ----------
    collapsed : bool, default is Undefined, optional
        The collapsed state of the widget on first page load.
    """


    collapsed?: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetErrorReportingPanel:
    r"""
    A widget that displays a list of error groups.

    Attributes
    ----------
    projectRefs : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetErrorReportingPanelProjectRefsItems0], default is Undefined, optional
        The projects from which to gather errors.
    services : [str], default is Undefined, optional
        An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed.
    versions : [str], default is Undefined, optional
        Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.
    """


    projectRefs?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetErrorReportingPanelProjectRefsItems0]

    services?: [str]

    versions?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetErrorReportingPanelProjectRefsItems0:
    r"""
    The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The `projectID` field of a project, when not managed by Config Connector.
    kind : str, default is Undefined, optional
        The kind of the Project resource; optional but must be `Project` if provided.
    name : str, default is Undefined, optional
        The `name` field of a `Project` resource.
    namespace : str, default is Undefined, optional
        The `namespace` field of a `Project` resource.
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetIncidentList:
    r"""
    A widget that shows list of incidents.

    Attributes
    ----------
    monitoredResources : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetIncidentListMonitoredResourcesItems0], default is Undefined, optional
        Optional. The monitored resource for which incidents are listed.
    policyRefs : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetIncidentListPolicyRefsItems0], default is Undefined, optional
        Optional. A list of alert policies to filter the incident list by.
    """


    monitoredResources?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetIncidentListMonitoredResourcesItems0]

    policyRefs?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetIncidentListPolicyRefsItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetIncidentListMonitoredResourcesItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec mosaic layout tiles items0 widget incident list monitored resources items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Required. Values for all of the labels listed in the associated monitored resource descriptor.
    $type : str, default is Undefined, optional
        Required. The monitored resource type. This field must match the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object.
    """


    labels?: {str:str}

    $type?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetIncidentListPolicyRefsItems0:
    r"""
    MonitoringAlertPolicyRef defines the resource reference to MonitoringAlertPolicy, which "External" field holds the GCP identifier for the KRM object.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The value of an externally managed MonitoringAlertPolicy resource. Should be in the format "projects/{{projectID}}/alertPolicies/{{alertPolicyID}}".
    name : str, default is Undefined, optional
        The name of a MonitoringAlertPolicy resource.
    namespace : str, default is Undefined, optional
        The namespace of a MonitoringAlertPolicy resource.
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetLogsPanel:
    r"""
    A widget that shows a stream of logs.

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter that chooses which log entries to return.  See [Advanced Logs Queries](https://cloud.google.com/logging/docs/view/advanced-queries).
    resourceNames : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetLogsPanelResourceNamesItems0], default is Undefined, optional
        The names of logging resources to collect logs for.
    """


    $filter?: str

    resourceNames?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetLogsPanelResourceNamesItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetLogsPanelResourceNamesItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec mosaic layout tiles items0 widget logs panel resource names items0

    Attributes
    ----------
    external : str, default is Undefined, optional
        The external name of the referenced resource
    kind : str, default is Undefined, optional
        Kind of the referent.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChart:
    r"""
    A widget that displays timeseries data as a pie chart.

    Attributes
    ----------
    chartType : str, default is Undefined, required
        Required. Indicates the visualization type for the PieChart.
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0], default is Undefined, required
        Required. The queries for the chart's data.
    showLabels : bool, default is Undefined, optional
        Optional. Indicates whether or not the pie chart should show slices' labels
    """


    chartType: str

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0]

    showLabels?: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec mosaic layout tiles items0 widget pie chart data sets items0

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    sliceNameTemplate : str, default is Undefined, optional
        Optional. A template for the name of the slice.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQuery, default is Undefined, required
        time series query
    """


    minAlignmentPeriod?: str

    sliceNameTemplate?: str

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQuery:
    r"""
    Required. The query for the PieChart. See, `google.monitoring.dashboard.v1.TimeSeriesQuery`.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetPieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecard:
    r"""
    A scorecard summarizing time series data.

    Attributes
    ----------
    blankView : any, default is Undefined, optional
        Will cause the `Scorecard` to show only the value, with no indicator to its value relative to its thresholds.
    gaugeView : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardGaugeView, default is Undefined, optional
        gauge view
    sparkChartView : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardSparkChartView, default is Undefined, optional
        spark chart view
    thresholds : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardThresholdsItems0], default is Undefined, optional
        The thresholds used to determine the state of the scorecard given the time series' current value.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQuery, default is Undefined, required
        time series query
    """


    blankView?: any

    gaugeView?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardGaugeView

    sparkChartView?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardSparkChartView

    thresholds?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardThresholdsItems0]

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardGaugeView:
    r"""
    Will cause the scorecard to show a gauge chart.

    Attributes
    ----------
    lowerBound : float, default is Undefined, optional
        The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.
    upperBound : float, default is Undefined, optional
        The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.
    """


    lowerBound?: float

    upperBound?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardSparkChartView:
    r"""
    Will cause the scorecard to show a spark chart.

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query.
    sparkChartType : str, default is Undefined, required
        Required. The type of sparkchart to show in this chartView.
    """


    minAlignmentPeriod?: str

    sparkChartType: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardThresholdsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec mosaic layout tiles items0 widget scorecard thresholds items0

    Attributes
    ----------
    color : str, default is Undefined, optional
        The state color for this threshold. Color is not allowed in a XyChart.
    direction : str, default is Undefined, optional
        The direction for the current threshold. Direction is not allowed in a XyChart.
    label : str, default is Undefined, optional
        A label for the threshold.
    targetAxis : str, default is Undefined, optional
        The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
    value : float, default is Undefined, optional
        The value of the threshold. The value should be defined in the native scale of the metric.
    """


    color?: str

    direction?: str

    label?: str

    targetAxis?: str

    value?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQuery:
    r"""
    Required. Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetSectionHeader:
    r"""
    A widget that defines a section header for easier navigation of the dashboard.

    Attributes
    ----------
    dividerBelow : bool, default is Undefined, optional
        Whether to insert a divider below the section in the table of contents
    subtitle : str, default is Undefined, optional
        The subtitle of the section
    """


    dividerBelow?: bool

    subtitle?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetText:
    r"""
    A raw string or markdown displaying textual content.

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text content to be displayed.
    format : str, default is Undefined, optional
        How the text content is formatted.
    style : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTextStyle, default is Undefined, optional
        style
    """


    content?: str

    format?: str

    style?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTextStyle


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTextStyle:
    r"""
    How the text is styled

    Attributes
    ----------
    backgroundColor : str, default is Undefined, optional
        The background color as a hex string. "#RRGGBB" or "#RGB"
    fontSize : str, default is Undefined, optional
        Font sizes for both the title and content. The title will still be larger relative to the content.
    horizontalAlignment : str, default is Undefined, optional
        The horizontal alignment of both the title and content
    padding : str, default is Undefined, optional
        The amount of padding around the widget
    pointerLocation : str, default is Undefined, optional
        The pointer location for this widget (also sometimes called a "tail")
    textColor : str, default is Undefined, optional
        The text color as a hex string. "#RRGGBB" or "#RGB"
    verticalAlignment : str, default is Undefined, optional
        The vertical alignment of both the title and content
    """


    backgroundColor?: str

    fontSize?: str

    horizontalAlignment?: str

    padding?: str

    pointerLocation?: str

    textColor?: str

    verticalAlignment?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTable:
    r"""
    A widget that displays time series data in a tabular format.

    Attributes
    ----------
    columnSettings : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableColumnSettingsItems0], default is Undefined, optional
        Optional. The list of the persistent column settings for the table.
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0], default is Undefined, required
        Required. The data displayed in this table.
    metricVisualization : str, default is Undefined, optional
        Optional. Store rendering strategy
    """


    columnSettings?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableColumnSettingsItems0]

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0]

    metricVisualization?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableColumnSettingsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec mosaic layout tiles items0 widget time series table column settings items0

    Attributes
    ----------
    column : str, default is Undefined, required
        Required. The id of the column.
    visible : bool, default is Undefined, required
        Required. Whether the column should be visible on page load.
    """


    column: str

    visible: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec mosaic layout tiles items0 widget time series table data sets items0

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    tableDisplayOptions : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TableDisplayOptions, default is Undefined, optional
        table display options
    tableTemplate : str, default is Undefined, optional
        Optional. A template string for naming `TimeSeries` in the resulting data set.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQuery, default is Undefined, optional
        time series query
    """


    minAlignmentPeriod?: str

    tableDisplayOptions?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TableDisplayOptions

    tableTemplate?: str

    timeSeriesQuery?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TableDisplayOptions:
    r"""
    Optional. Table display options for configuring how the table is rendered.

    Attributes
    ----------
    shownColumns : [str], default is Undefined, optional
        Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings
    """


    shownColumns?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQuery:
    r"""
    Required. Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetTimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChart:
    r"""
    A chart of time series data.

    Attributes
    ----------
    chartOptions : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartChartOptions, default is Undefined, optional
        chart options
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0], default is Undefined, required
        Required. The data displayed in this chart.
    thresholds : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartThresholdsItems0], default is Undefined, optional
        Threshold lines drawn horizontally across the chart.
    timeshiftDuration : str, default is Undefined, optional
        The duration used to display a comparison chart.
    xAxis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartXAxis, default is Undefined, optional
        x axis
    y2Axis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartY2Axis, default is Undefined, optional
        y2 axis
    yAxis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartYAxis, default is Undefined, optional
        y axis
    """


    chartOptions?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartChartOptions

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0]

    thresholds?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartThresholdsItems0]

    timeshiftDuration?: str

    xAxis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartXAxis

    y2Axis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartY2Axis

    yAxis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartYAxis


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartChartOptions:
    r"""
    Display options for the chart.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The chart mode.
    """


    mode?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec mosaic layout tiles items0 widget xy chart data sets items0

    Attributes
    ----------
    legendTemplate : str, default is Undefined, optional
        A template string for naming `TimeSeries` in the resulting data set.
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    plotType : str, default is Undefined, optional
        How this data should be plotted on the chart.
    targetAxis : str, default is Undefined, optional
        Optional. The target axis to use for plotting the metric.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQuery, default is Undefined, required
        time series query
    """


    legendTemplate?: str

    minAlignmentPeriod?: str

    plotType?: str

    targetAxis?: str

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQuery:
    r"""
    Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartThresholdsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec mosaic layout tiles items0 widget xy chart thresholds items0

    Attributes
    ----------
    color : str, default is Undefined, optional
        The state color for this threshold. Color is not allowed in a XyChart.
    direction : str, default is Undefined, optional
        The direction for the current threshold. Direction is not allowed in a XyChart.
    label : str, default is Undefined, optional
        A label for the threshold.
    targetAxis : str, default is Undefined, optional
        The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
    value : float, default is Undefined, optional
        The value of the threshold. The value should be defined in the native scale of the metric.
    """


    color?: str

    direction?: str

    label?: str

    targetAxis?: str

    value?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartXAxis:
    r"""
    The properties applied to the x-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartY2Axis:
    r"""
    The properties applied to the y2-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecMosaicLayoutTilesItems0WidgetXyChartYAxis:
    r"""
    The properties applied to the y-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecProjectRef:
    r"""
    Immutable. The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The `projectID` field of a project, when not managed by Config Connector.
    kind : str, default is Undefined, optional
        The kind of the Project resource; optional but must be `Project` if provided.
    name : str, default is Undefined, optional
        The `name` field of a `Project` resource.
    namespace : str, default is Undefined, optional
        The `namespace` field of a `Project` resource.
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayout:
    r"""
    The content is divided into equally spaced rows and the widgets are arranged horizontally.

    Attributes
    ----------
    rows : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0], default is Undefined, optional
        The rows of content to display.
    """


    rows?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0

    Attributes
    ----------
    weight : int, default is Undefined, optional
        The relative weight of this row. The row weight is used to adjust the height of rows on the screen (relative to peers).
    widgets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0], default is Undefined, optional
        The display widgets arranged horizontally in this row.
    """


    weight?: int

    widgets?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0 widgets items0

    Attributes
    ----------
    alertChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0AlertChart, default is Undefined, optional
        alert chart
    blank : any, default is Undefined, optional
        A blank space.
    collapsibleGroup : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0CollapsibleGroup, default is Undefined, optional
        collapsible group
    errorReportingPanel : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ErrorReportingPanel, default is Undefined, optional
        error reporting panel
    id : str, default is Undefined, optional
        Optional. The widget id. Ids may be made up of alphanumerics, dashes and underscores. Widget ids are optional.
    incidentList : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0IncidentList, default is Undefined, optional
        incident list
    logsPanel : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0LogsPanel, default is Undefined, optional
        logs panel
    pieChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChart, default is Undefined, optional
        pie chart
    scorecard : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0Scorecard, default is Undefined, optional
        scorecard
    sectionHeader : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0SectionHeader, default is Undefined, optional
        section header
    singleViewGroup : any, default is Undefined, optional
        A widget that groups the other widgets by using a dropdown menu.
    text : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0Text, default is Undefined, optional
        text
    timeSeriesTable : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTable, default is Undefined, optional
        time series table
    title : str, default is Undefined, optional
        Optional. The title of the widget.
    xyChart : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChart, default is Undefined, optional
        xy chart
    """


    alertChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0AlertChart

    blank?: any

    collapsibleGroup?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0CollapsibleGroup

    errorReportingPanel?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ErrorReportingPanel

    id?: str

    incidentList?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0IncidentList

    logsPanel?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0LogsPanel

    pieChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChart

    scorecard?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0Scorecard

    sectionHeader?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0SectionHeader

    singleViewGroup?: any

    text?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0Text

    timeSeriesTable?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTable

    title?: str

    xyChart?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChart


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0AlertChart:
    r"""
    A chart of alert policy data.

    Attributes
    ----------
    alertPolicyRef : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0AlertChartAlertPolicyRef, default is Undefined, required
        alert policy ref
    """


    alertPolicyRef: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0AlertChartAlertPolicyRef


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0AlertChartAlertPolicyRef:
    r"""
    Required. A reference to the MonitoringAlertPolicy.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The value of an externally managed MonitoringAlertPolicy resource. Should be in the format "projects/{{projectID}}/alertPolicies/{{alertPolicyID}}".
    name : str, default is Undefined, optional
        The name of a MonitoringAlertPolicy resource.
    namespace : str, default is Undefined, optional
        The namespace of a MonitoringAlertPolicy resource.
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0CollapsibleGroup:
    r"""
    A widget that groups the other widgets. All widgets that are within the area spanned by the grouping widget are considered member widgets.

    Attributes
    ----------
    collapsed : bool, default is Undefined, optional
        The collapsed state of the widget on first page load.
    """


    collapsed?: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ErrorReportingPanel:
    r"""
    A widget that displays a list of error groups.

    Attributes
    ----------
    projectRefs : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ErrorReportingPanelProjectRefsItems0], default is Undefined, optional
        The projects from which to gather errors.
    services : [str], default is Undefined, optional
        An identifier of the service, such as the name of the executable, job, or Google App Engine service name. This field is expected to have a low number of values that are relatively stable over time, as opposed to `version`, which can be changed whenever new code is deployed.
    versions : [str], default is Undefined, optional
        Represents the source code version that the developer provided, which could represent a version label or a Git SHA-1 hash, for example. For App Engine standard environment, the version is set to the version of the app.
    """


    projectRefs?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ErrorReportingPanelProjectRefsItems0]

    services?: [str]

    versions?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ErrorReportingPanelProjectRefsItems0:
    r"""
    The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The `projectID` field of a project, when not managed by Config Connector.
    kind : str, default is Undefined, optional
        The kind of the Project resource; optional but must be `Project` if provided.
    name : str, default is Undefined, optional
        The `name` field of a `Project` resource.
    namespace : str, default is Undefined, optional
        The `namespace` field of a `Project` resource.
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0IncidentList:
    r"""
    A widget that shows list of incidents.

    Attributes
    ----------
    monitoredResources : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0IncidentListMonitoredResourcesItems0], default is Undefined, optional
        Optional. The monitored resource for which incidents are listed.
    policyRefs : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0IncidentListPolicyRefsItems0], default is Undefined, optional
        Optional. A list of alert policies to filter the incident list by.
    """


    monitoredResources?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0IncidentListMonitoredResourcesItems0]

    policyRefs?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0IncidentListPolicyRefsItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0IncidentListMonitoredResourcesItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0 widgets items0 incident list monitored resources items0

    Attributes
    ----------
    labels : {str:str}, default is Undefined, optional
        Required. Values for all of the labels listed in the associated monitored resource descriptor.
    $type : str, default is Undefined, optional
        Required. The monitored resource type. This field must match the `type` field of a [MonitoredResourceDescriptor][google.api.MonitoredResourceDescriptor] object.
    """


    labels?: {str:str}

    $type?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0IncidentListPolicyRefsItems0:
    r"""
    MonitoringAlertPolicyRef defines the resource reference to MonitoringAlertPolicy, which "External" field holds the GCP identifier for the KRM object.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The value of an externally managed MonitoringAlertPolicy resource. Should be in the format "projects/{{projectID}}/alertPolicies/{{alertPolicyID}}".
    name : str, default is Undefined, optional
        The name of a MonitoringAlertPolicy resource.
    namespace : str, default is Undefined, optional
        The namespace of a MonitoringAlertPolicy resource.
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0LogsPanel:
    r"""
    A widget that shows a stream of logs.

    Attributes
    ----------
    $filter : str, default is Undefined, optional
        A filter that chooses which log entries to return.  See [Advanced Logs Queries](https://cloud.google.com/logging/docs/view/advanced-queries).
    resourceNames : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0LogsPanelResourceNamesItems0], default is Undefined, optional
        The names of logging resources to collect logs for.
    """


    $filter?: str

    resourceNames?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0LogsPanelResourceNamesItems0]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0LogsPanelResourceNamesItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0 widgets items0 logs panel resource names items0

    Attributes
    ----------
    external : str, default is Undefined, optional
        The external name of the referenced resource
    kind : str, default is Undefined, optional
        Kind of the referent.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChart:
    r"""
    A widget that displays timeseries data as a pie chart.

    Attributes
    ----------
    chartType : str, default is Undefined, required
        Required. Indicates the visualization type for the PieChart.
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0], default is Undefined, required
        Required. The queries for the chart's data.
    showLabels : bool, default is Undefined, optional
        Optional. Indicates whether or not the pie chart should show slices' labels
    """


    chartType: str

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0]

    showLabels?: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0 widgets items0 pie chart data sets items0

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    sliceNameTemplate : str, default is Undefined, optional
        Optional. A template for the name of the slice.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQuery, default is Undefined, required
        time series query
    """


    minAlignmentPeriod?: str

    sliceNameTemplate?: str

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQuery:
    r"""
    Required. The query for the PieChart. See, `google.monitoring.dashboard.v1.TimeSeriesQuery`.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0PieChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0Scorecard:
    r"""
    A scorecard summarizing time series data.

    Attributes
    ----------
    blankView : any, default is Undefined, optional
        Will cause the `Scorecard` to show only the value, with no indicator to its value relative to its thresholds.
    gaugeView : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardGaugeView, default is Undefined, optional
        gauge view
    sparkChartView : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardSparkChartView, default is Undefined, optional
        spark chart view
    thresholds : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardThresholdsItems0], default is Undefined, optional
        The thresholds used to determine the state of the scorecard given the time series' current value.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQuery, default is Undefined, required
        time series query
    """


    blankView?: any

    gaugeView?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardGaugeView

    sparkChartView?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardSparkChartView

    thresholds?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardThresholdsItems0]

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardGaugeView:
    r"""
    Will cause the scorecard to show a gauge chart.

    Attributes
    ----------
    lowerBound : float, default is Undefined, optional
        The lower bound for this gauge chart. The value of the chart should always be greater than or equal to this.
    upperBound : float, default is Undefined, optional
        The upper bound for this gauge chart. The value of the chart should always be less than or equal to this.
    """


    lowerBound?: float

    upperBound?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardSparkChartView:
    r"""
    Will cause the scorecard to show a spark chart.

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        The lower bound on data point frequency in the chart implemented by specifying the minimum alignment period to use in a time series query.
    sparkChartType : str, default is Undefined, required
        Required. The type of sparkchart to show in this chartView.
    """


    minAlignmentPeriod?: str

    sparkChartType: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardThresholdsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0 widgets items0 scorecard thresholds items0

    Attributes
    ----------
    color : str, default is Undefined, optional
        The state color for this threshold. Color is not allowed in a XyChart.
    direction : str, default is Undefined, optional
        The direction for the current threshold. Direction is not allowed in a XyChart.
    label : str, default is Undefined, optional
        A label for the threshold.
    targetAxis : str, default is Undefined, optional
        The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
    value : float, default is Undefined, optional
        The value of the threshold. The value should be defined in the native scale of the metric.
    """


    color?: str

    direction?: str

    label?: str

    targetAxis?: str

    value?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQuery:
    r"""
    Required. Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0ScorecardTimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0SectionHeader:
    r"""
    A widget that defines a section header for easier navigation of the dashboard.

    Attributes
    ----------
    dividerBelow : bool, default is Undefined, optional
        Whether to insert a divider below the section in the table of contents
    subtitle : str, default is Undefined, optional
        The subtitle of the section
    """


    dividerBelow?: bool

    subtitle?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0Text:
    r"""
    A raw string or markdown displaying textual content.

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text content to be displayed.
    format : str, default is Undefined, optional
        How the text content is formatted.
    style : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TextStyle, default is Undefined, optional
        style
    """


    content?: str

    format?: str

    style?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TextStyle


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TextStyle:
    r"""
    How the text is styled

    Attributes
    ----------
    backgroundColor : str, default is Undefined, optional
        The background color as a hex string. "#RRGGBB" or "#RGB"
    fontSize : str, default is Undefined, optional
        Font sizes for both the title and content. The title will still be larger relative to the content.
    horizontalAlignment : str, default is Undefined, optional
        The horizontal alignment of both the title and content
    padding : str, default is Undefined, optional
        The amount of padding around the widget
    pointerLocation : str, default is Undefined, optional
        The pointer location for this widget (also sometimes called a "tail")
    textColor : str, default is Undefined, optional
        The text color as a hex string. "#RRGGBB" or "#RGB"
    verticalAlignment : str, default is Undefined, optional
        The vertical alignment of both the title and content
    """


    backgroundColor?: str

    fontSize?: str

    horizontalAlignment?: str

    padding?: str

    pointerLocation?: str

    textColor?: str

    verticalAlignment?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTable:
    r"""
    A widget that displays time series data in a tabular format.

    Attributes
    ----------
    columnSettings : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableColumnSettingsItems0], default is Undefined, optional
        Optional. The list of the persistent column settings for the table.
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0], default is Undefined, required
        Required. The data displayed in this table.
    metricVisualization : str, default is Undefined, optional
        Optional. Store rendering strategy
    """


    columnSettings?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableColumnSettingsItems0]

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0]

    metricVisualization?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableColumnSettingsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0 widgets items0 time series table column settings items0

    Attributes
    ----------
    column : str, default is Undefined, required
        Required. The id of the column.
    visible : bool, default is Undefined, required
        Required. Whether the column should be visible on page load.
    """


    column: str

    visible: bool


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0 widgets items0 time series table data sets items0

    Attributes
    ----------
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    tableDisplayOptions : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TableDisplayOptions, default is Undefined, optional
        table display options
    tableTemplate : str, default is Undefined, optional
        Optional. A template string for naming `TimeSeries` in the resulting data set.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQuery, default is Undefined, optional
        time series query
    """


    minAlignmentPeriod?: str

    tableDisplayOptions?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TableDisplayOptions

    tableTemplate?: str

    timeSeriesQuery?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TableDisplayOptions:
    r"""
    Optional. Table display options for configuring how the table is rendered.

    Attributes
    ----------
    shownColumns : [str], default is Undefined, optional
        Optional. This field is unused and has been replaced by TimeSeriesTable.column_settings
    """


    shownColumns?: [str]


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQuery:
    r"""
    Required. Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0TimeSeriesTableDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChart:
    r"""
    A chart of time series data.

    Attributes
    ----------
    chartOptions : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartChartOptions, default is Undefined, optional
        chart options
    dataSets : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0], default is Undefined, required
        Required. The data displayed in this chart.
    thresholds : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartThresholdsItems0], default is Undefined, optional
        Threshold lines drawn horizontally across the chart.
    timeshiftDuration : str, default is Undefined, optional
        The duration used to display a comparison chart.
    xAxis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartXAxis, default is Undefined, optional
        x axis
    y2Axis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartY2Axis, default is Undefined, optional
        y2 axis
    yAxis : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartYAxis, default is Undefined, optional
        y axis
    """


    chartOptions?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartChartOptions

    dataSets: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0]

    thresholds?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartThresholdsItems0]

    timeshiftDuration?: str

    xAxis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartXAxis

    y2Axis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartY2Axis

    yAxis?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartYAxis


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartChartOptions:
    r"""
    Display options for the chart.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        The chart mode.
    """


    mode?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0 widgets items0 xy chart data sets items0

    Attributes
    ----------
    legendTemplate : str, default is Undefined, optional
        A template string for naming `TimeSeries` in the resulting data set.
    minAlignmentPeriod : str, default is Undefined, optional
        Optional. The lower bound on data point frequency for this data set.
    plotType : str, default is Undefined, optional
        How this data should be plotted on the chart.
    targetAxis : str, default is Undefined, optional
        Optional. The target axis to use for plotting the metric.
    timeSeriesQuery : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQuery, default is Undefined, required
        time series query
    """


    legendTemplate?: str

    minAlignmentPeriod?: str

    plotType?: str

    targetAxis?: str

    timeSeriesQuery: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQuery


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQuery:
    r"""
    Fields for querying time series data from the Stackdriver metrics API.

    Attributes
    ----------
    outputFullDuration : bool, default is Undefined, optional
        Optional. If set, Cloud Monitoring will treat the full query duration as the alignment period so that there will be only 1 output value.
    prometheusQuery : str, default is Undefined, optional
        A query used to fetch time series with PromQL.
    timeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter, default is Undefined, optional
        time series filter
    timeSeriesFilterRatio : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio, default is Undefined, optional
        time series filter ratio
    timeSeriesQueryLanguage : str, default is Undefined, optional
        A query used to fetch time series with MQL.
    unitOverride : str, default is Undefined, optional
        The unit of data contained in fetched time series. If non-empty, this unit will override any unit that accompanies fetched data. The format is the same as the [`unit`](https://cloud.google.com/monitoring/api/ref_v3/rest/v3/projects.metricDescriptors) field in `MetricDescriptor`.
    """


    outputFullDuration?: bool

    prometheusQuery?: str

    timeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter

    timeSeriesFilterRatio?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio

    timeSeriesQueryLanguage?: str

    unitOverride?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilter:
    r"""
    Filter parameters to fetch time series.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        Required. The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation

    $filter: str

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterAggregation:
    r"""
    By default, the raw time series data is returned. Use this field to combine multiple time series for different views of the data.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatio:
    r"""
    Parameters to fetch a ratio between two time series filters.

    Attributes
    ----------
    denominator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator, default is Undefined, optional
        denominator
    numerator : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator, default is Undefined, optional
        numerator
    pickTimeSeriesFilter : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter, default is Undefined, optional
        pick time series filter
    secondaryAggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation, default is Undefined, optional
        secondary aggregation
    """


    denominator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator

    numerator?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator

    pickTimeSeriesFilter?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter

    secondaryAggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominator:
    r"""
    The denominator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioDenominatorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumerator:
    r"""
    The numerator of the ratio.

    Attributes
    ----------
    aggregation : MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation, default is Undefined, optional
        aggregation
    $filter : str, default is Undefined, required
        The [monitoring filter](https://cloud.google.com/monitoring/api/v3/filters) that identifies the metric types, resources, and projects to query.
    """


    aggregation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation

    $filter: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioNumeratorAggregation:
    r"""
    By default, the raw time series data is returned.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioPickTimeSeriesFilter:
    r"""
    Ranking based time series filter.

    Attributes
    ----------
    direction : str, default is Undefined, optional
        How to use the ranking to select time series that pass through the filter.
    numTimeSeries : int, default is Undefined, optional
        How many time series to allow to pass through the filter.
    rankingMethod : str, default is Undefined, optional
        `ranking_method` is applied to each time series independently to produce the value which will be used to compare the time series to other time series.
    """


    direction?: str

    numTimeSeries?: int

    rankingMethod?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterRatioSecondaryAggregation:
    r"""
    Apply a second aggregation after the ratio is computed.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartDataSetsItems0TimeSeriesQueryTimeSeriesFilterSecondaryAggregation:
    r"""
    Apply a second aggregation after `aggregation` is applied.

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The `alignment_period` specifies a time interval, in seconds, that is used to divide the data in all the [time series][google.monitoring.v3.TimeSeries] into consistent blocks of time. This will be done before the per-series aligner can be applied to the data.
    crossSeriesReducer : str, default is Undefined, optional
        The reduction operation to be used to combine time series into a single time series, where the value of each data point in the resulting series is a function of all the already aligned values in the input time series.
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when `cross_series_reducer` is specified.
    perSeriesAligner : str, default is Undefined, optional
        An `Aligner` describes how to bring the data points in a single time series into temporal alignment. Except for `ALIGN_NONE`, all alignments cause all the data points in an `alignment_period` to be mathematically grouped together, resulting in a single data point for each `alignment_period` with end timestamp at the end of the period.
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartThresholdsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard spec row layout rows items0 widgets items0 xy chart thresholds items0

    Attributes
    ----------
    color : str, default is Undefined, optional
        The state color for this threshold. Color is not allowed in a XyChart.
    direction : str, default is Undefined, optional
        The direction for the current threshold. Direction is not allowed in a XyChart.
    label : str, default is Undefined, optional
        A label for the threshold.
    targetAxis : str, default is Undefined, optional
        The target axis to use for plotting the threshold. Target axis is not allowed in a Scorecard.
    value : float, default is Undefined, optional
        The value of the threshold. The value should be defined in the native scale of the metric.
    """


    color?: str

    direction?: str

    label?: str

    targetAxis?: str

    value?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartXAxis:
    r"""
    The properties applied to the x-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartY2Axis:
    r"""
    The properties applied to the y2-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardSpecRowLayoutRowsItems0WidgetsItems0XyChartYAxis:
    r"""
    The properties applied to the y-axis.

    Attributes
    ----------
    label : str, default is Undefined, optional
        The label of the axis.
    scale : str, default is Undefined, optional
        The axis scale. By default, a linear scale is used.
    """


    label?: str

    scale?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardStatus:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard status

    Attributes
    ----------
    conditions : [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observations of the MonitoringDashboard's current state.
    etag : str, default is Undefined, optional
        \`etag\` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    """


    conditions?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardStatusConditionsItems0]

    etag?: str

    observedGeneration?: int


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringDashboardStatusConditionsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring dashboard status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


