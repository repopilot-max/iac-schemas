"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ComputeSSLCertificate:
    r"""
    compute cnrm cloud google com v1beta1 compute s s l certificate

    Attributes
    ----------
    apiVersion : str, default is "compute.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ComputeSSLCertificate", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpec, default is Undefined, required
        spec
    status : ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.cnrm.cloud.google.com/v1beta1" = "compute.cnrm.cloud.google.com/v1beta1"

    kind: "ComputeSSLCertificate" = "ComputeSSLCertificate"

    metadata?: v1.ObjectMeta

    spec: ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpec

    status?: ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateStatus


schema ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpec:
    r"""
    compute cnrm cloud google com v1beta1 compute s s l certificate spec

    Attributes
    ----------
    certificate : ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecCertificate, default is Undefined, required
        certificate
    description : str, default is Undefined, optional
        Immutable. An optional description of this resource.
    location : str, default is Undefined, required
        Location represents the geographical location of the ComputeSSLCertificate. Specify a region name or "global" for global resources. Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)
    privateKey : ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecPrivateKey, default is Undefined, required
        private key
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    """


    certificate: ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecCertificate

    description?: str

    location: str

    privateKey: ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecPrivateKey

    resourceID?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecCertificate:
    r"""
    Immutable. The certificate in PEM format.
    The certificate chain must be no greater than 5 certs long.
    The chain must include at least one intermediate cert.

    Attributes
    ----------
    value : str, default is Undefined, optional
        Value of the field. Cannot be used if 'valueFrom' is specified.
    valueFrom : ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecCertificateValueFrom, default is Undefined, optional
        value from
    """


    value?: str

    valueFrom?: ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecCertificateValueFrom


schema ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecCertificateValueFrom:
    r"""
    Source for the field's value. Cannot be used if 'value' is specified.

    Attributes
    ----------
    secretKeyRef : ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecCertificateValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    secretKeyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecCertificateValueFromSecretKeyRef


schema ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecCertificateValueFromSecretKeyRef:
    r"""
    Reference to a value with the given key in the given Secret in the resource's namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key that identifies the value to be extracted.
    name : str, default is Undefined, required
        Name of the Secret to extract a value from.
    """


    key: str

    name: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecPrivateKey:
    r"""
    Immutable. The write-only private key in PEM format.

    Attributes
    ----------
    value : str, default is Undefined, optional
        Value of the field. Cannot be used if 'valueFrom' is specified.
    valueFrom : ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecPrivateKeyValueFrom, default is Undefined, optional
        value from
    """


    value?: str

    valueFrom?: ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecPrivateKeyValueFrom


schema ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecPrivateKeyValueFrom:
    r"""
    Source for the field's value. Cannot be used if 'value' is specified.

    Attributes
    ----------
    secretKeyRef : ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecPrivateKeyValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    secretKeyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecPrivateKeyValueFromSecretKeyRef


schema ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateSpecPrivateKeyValueFromSecretKeyRef:
    r"""
    Reference to a value with the given key in the given Secret in the resource's namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key that identifies the value to be extracted.
    name : str, default is Undefined, required
        Name of the Secret to extract a value from.
    """


    key: str

    name: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateStatus:
    r"""
    compute cnrm cloud google com v1beta1 compute s s l certificate status

    Attributes
    ----------
    certificateId : int, default is Undefined, optional
        The unique identifier for the resource.
    conditions : [ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    expireTime : str, default is Undefined, optional
        Expire time of the certificate in RFC3339 text format.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    selfLink : str, default is Undefined, optional
        self link
    """


    certificateId?: int

    conditions?: [ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateStatusConditionsItems0]

    creationTimestamp?: str

    expireTime?: str

    observedGeneration?: int

    selfLink?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeSSLCertificateStatusConditionsItems0:
    r"""
    compute cnrm cloud google com v1beta1 compute s s l certificate status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


