"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DNSPolicy:
    r"""
    dns cnrm cloud google com v1beta1 DNS policy

    Attributes
    ----------
    apiVersion : str, default is "dns.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DNSPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DNSCnrmCloudGoogleComV1beta1DNSPolicySpec, default is Undefined, optional
        spec
    status : DNSCnrmCloudGoogleComV1beta1DNSPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "dns.cnrm.cloud.google.com/v1beta1" = "dns.cnrm.cloud.google.com/v1beta1"

    kind: "DNSPolicy" = "DNSPolicy"

    metadata?: v1.ObjectMeta

    spec?: DNSCnrmCloudGoogleComV1beta1DNSPolicySpec

    status?: DNSCnrmCloudGoogleComV1beta1DNSPolicyStatus


schema DNSCnrmCloudGoogleComV1beta1DNSPolicySpec:
    r"""
    DNS cnrm cloud google com v1beta1 DNS policy spec

    Attributes
    ----------
    alternativeNameServerConfig : DNSCnrmCloudGoogleComV1beta1DNSPolicySpecAlternativeNameServerConfig, default is Undefined, optional
        alternative name server config
    description : str, default is Undefined, optional
        A textual description field. Defaults to 'Managed by Config Connector'.
    enableInboundForwarding : bool, default is Undefined, optional
        Allows networks bound to this policy to receive DNS queries sent
        by VMs or applications over VPN connections. When enabled, a
        virtual IP address will be allocated from each of the sub-networks
        that are bound to this policy.
    enableLogging : bool, default is Undefined, optional
        Controls whether logging is enabled for the networks bound to this policy.
        Defaults to no logging if not set.
    networks : [DNSCnrmCloudGoogleComV1beta1DNSPolicySpecNetworksItems0], default is Undefined, optional
        List of network names specifying networks to which this policy is applied.
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    """


    alternativeNameServerConfig?: DNSCnrmCloudGoogleComV1beta1DNSPolicySpecAlternativeNameServerConfig

    description?: str

    enableInboundForwarding?: bool

    enableLogging?: bool

    networks?: [DNSCnrmCloudGoogleComV1beta1DNSPolicySpecNetworksItems0]

    resourceID?: str


schema DNSCnrmCloudGoogleComV1beta1DNSPolicySpecAlternativeNameServerConfig:
    r"""
    Sets an alternative name server for the associated networks.
    When specified, all DNS queries are forwarded to a name server that you choose.
    Names such as .internal are not available when an alternative name server is specified.

    Attributes
    ----------
    targetNameServers : [DNSCnrmCloudGoogleComV1beta1DNSPolicySpecAlternativeNameServerConfigTargetNameServersItems0], default is Undefined, required
        Sets an alternative name server for the associated networks. When specified,
        all DNS queries are forwarded to a name server that you choose. Names such as .internal
        are not available when an alternative name server is specified.
    """


    targetNameServers: [DNSCnrmCloudGoogleComV1beta1DNSPolicySpecAlternativeNameServerConfigTargetNameServersItems0]


schema DNSCnrmCloudGoogleComV1beta1DNSPolicySpecAlternativeNameServerConfigTargetNameServersItems0:
    r"""
    DNS cnrm cloud google com v1beta1 DNS policy spec alternative name server config target name servers items0

    Attributes
    ----------
    forwardingPath : str, default is Undefined, optional
        Forwarding path for this TargetNameServer. If unset or 'default' Cloud DNS will make forwarding
        decision based on address ranges, i.e. RFC1918 addresses go to the VPC, Non-RFC1918 addresses go
        to the Internet. When set to 'private', Cloud DNS will always send queries through VPC for this target Possible values: ["default", "private"].
    ipv4Address : str, default is Undefined, required
        IPv4 address to forward to.
    """


    forwardingPath?: str

    ipv4Address: str


schema DNSCnrmCloudGoogleComV1beta1DNSPolicySpecNetworksItems0:
    r"""
    DNS cnrm cloud google com v1beta1 DNS policy spec networks items0

    Attributes
    ----------
    networkRef : DNSCnrmCloudGoogleComV1beta1DNSPolicySpecNetworksItems0NetworkRef, default is Undefined, required
        network ref
    """


    networkRef: DNSCnrmCloudGoogleComV1beta1DNSPolicySpecNetworksItems0NetworkRef


schema DNSCnrmCloudGoogleComV1beta1DNSPolicySpecNetworksItems0NetworkRef:
    r"""
    VPC network to bind to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeNetwork` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DNSCnrmCloudGoogleComV1beta1DNSPolicyStatus:
    r"""
    DNS cnrm cloud google com v1beta1 DNS policy status

    Attributes
    ----------
    conditions : [DNSCnrmCloudGoogleComV1beta1DNSPolicyStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    """


    conditions?: [DNSCnrmCloudGoogleComV1beta1DNSPolicyStatusConditionsItems0]

    observedGeneration?: int


schema DNSCnrmCloudGoogleComV1beta1DNSPolicyStatusConditionsItems0:
    r"""
    DNS cnrm cloud google com v1beta1 DNS policy status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


