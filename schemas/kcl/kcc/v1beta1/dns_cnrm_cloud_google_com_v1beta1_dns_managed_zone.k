"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DNSManagedZone:
    r"""
    dns cnrm cloud google com v1beta1 DNS managed zone

    Attributes
    ----------
    apiVersion : str, default is "dns.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DNSManagedZone", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpec, default is Undefined, required
        spec
    status : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneStatus, default is Undefined, optional
        status
    """


    apiVersion: "dns.cnrm.cloud.google.com/v1beta1" = "dns.cnrm.cloud.google.com/v1beta1"

    kind: "DNSManagedZone" = "DNSManagedZone"

    metadata?: v1.ObjectMeta

    spec: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpec

    status?: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneStatus


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpec:
    r"""
    DNS cnrm cloud google com v1beta1 DNS managed zone spec

    Attributes
    ----------
    cloudLoggingConfig : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecCloudLoggingConfig, default is Undefined, optional
        cloud logging config
    description : str, default is Undefined, optional
        A textual description field. Defaults to 'Managed by Config Connector'.
    dnsName : str, default is Undefined, required
        Immutable. The DNS name of this managed zone, for instance "example.com.".
    dnssecConfig : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecDnssecConfig, default is Undefined, optional
        dnssec config
    forwardingConfig : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecForwardingConfig, default is Undefined, optional
        forwarding config
    peeringConfig : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPeeringConfig, default is Undefined, optional
        peering config
    privateVisibilityConfig : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfig, default is Undefined, optional
        private visibility config
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    reverseLookup : bool, default is Undefined, optional
        Immutable. Specifies if this is a managed reverse lookup zone. If true, Cloud DNS will resolve reverse
        lookup queries using automatically configured records for VPC resources. This only applies
        to networks listed under 'private_visibility_config'.
    serviceDirectoryConfig : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecServiceDirectoryConfig, default is Undefined, optional
        service directory config
    visibility : str, default is Undefined, optional
        Immutable. The zone's visibility: public zones are exposed to the Internet,
        while private zones are visible only to Virtual Private Cloud resources. Default value: "public" Possible values: ["private", "public"].
    """


    cloudLoggingConfig?: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecCloudLoggingConfig

    description?: str

    dnsName: str

    dnssecConfig?: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecDnssecConfig

    forwardingConfig?: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecForwardingConfig

    peeringConfig?: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPeeringConfig

    privateVisibilityConfig?: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfig

    resourceID?: str

    reverseLookup?: bool

    serviceDirectoryConfig?: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecServiceDirectoryConfig

    visibility?: str


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecCloudLoggingConfig:
    r"""
    Cloud logging configuration.

    Attributes
    ----------
    enableLogging : bool, default is Undefined, required
        If set, enable query logging for this ManagedZone. False by default, making logging opt-in.
    """


    enableLogging: bool


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecDnssecConfig:
    r"""
    DNSSEC configuration.

    Attributes
    ----------
    defaultKeySpecs : [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecDnssecConfigDefaultKeySpecsItems0], default is Undefined, optional
        Specifies parameters that will be used for generating initial DnsKeys
        for this ManagedZone. If you provide a spec for keySigning or zoneSigning,
        you must also provide one for the other.
        default_key_specs can only be updated when the state is 'off'.
    kind : str, default is Undefined, optional
        Identifies what kind of resource this is.
    nonExistence : str, default is Undefined, optional
        Specifies the mechanism used to provide authenticated denial-of-existence responses.
        non_existence can only be updated when the state is 'off'. Possible values: ["nsec", "nsec3"].
    state : str, default is Undefined, optional
        Specifies whether DNSSEC is enabled, and what mode it is in Possible values: ["off", "on", "transfer"].
    """


    defaultKeySpecs?: [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecDnssecConfigDefaultKeySpecsItems0]

    kind?: str

    nonExistence?: str

    state?: str


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecDnssecConfigDefaultKeySpecsItems0:
    r"""
    DNS cnrm cloud google com v1beta1 DNS managed zone spec dnssec config default key specs items0

    Attributes
    ----------
    algorithm : str, default is Undefined, optional
        String mnemonic specifying the DNSSEC algorithm of this key Possible values: ["ecdsap256sha256", "ecdsap384sha384", "rsasha1", "rsasha256", "rsasha512"].
    keyLength : int, default is Undefined, optional
        Length of the keys in bits.
    keyType : str, default is Undefined, optional
        Specifies whether this is a key signing key (KSK) or a zone
        signing key (ZSK). Key signing keys have the Secure Entry
        Point flag set and, when active, will only be used to sign
        resource record sets of type DNSKEY. Zone signing keys do
        not have the Secure Entry Point flag set and will be used
        to sign all other types of resource record sets. Possible values: ["keySigning", "zoneSigning"].
    kind : str, default is Undefined, optional
        Identifies what kind of resource this is.
    """


    algorithm?: str

    keyLength?: int

    keyType?: str

    kind?: str


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecForwardingConfig:
    r"""
    The presence for this field indicates that outbound forwarding is enabled
    for this zone. The value of this field contains the set of destinations
    to forward to.

    Attributes
    ----------
    targetNameServers : [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecForwardingConfigTargetNameServersItems0], default is Undefined, required
        List of target name servers to forward to. Cloud DNS will
        select the best available name server if more than
        one target is given.
    """


    targetNameServers: [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecForwardingConfigTargetNameServersItems0]


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecForwardingConfigTargetNameServersItems0:
    r"""
    DNS cnrm cloud google com v1beta1 DNS managed zone spec forwarding config target name servers items0

    Attributes
    ----------
    forwardingPath : str, default is Undefined, optional
        Forwarding path for this TargetNameServer. If unset or 'default' Cloud DNS will make forwarding
        decision based on address ranges, i.e. RFC1918 addresses go to the VPC, Non-RFC1918 addresses go
        to the Internet. When set to 'private', Cloud DNS will always send queries through VPC for this target Possible values: ["default", "private"].
    ipv4Address : str, default is Undefined, required
        IPv4 address of a target name server.
    """


    forwardingPath?: str

    ipv4Address: str


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPeeringConfig:
    r"""
    The presence of this field indicates that DNS Peering is enabled for this
    zone. The value of this field contains the network to peer with.

    Attributes
    ----------
    targetNetwork : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPeeringConfigTargetNetwork, default is Undefined, required
        target network
    """


    targetNetwork: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPeeringConfigTargetNetwork


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPeeringConfigTargetNetwork:
    r"""
    The network with which to peer.

    Attributes
    ----------
    networkRef : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPeeringConfigTargetNetworkNetworkRef, default is Undefined, required
        network ref
    """


    networkRef: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPeeringConfigTargetNetworkNetworkRef


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPeeringConfigTargetNetworkNetworkRef:
    r"""
    VPC network to forward queries to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeNetwork` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfig:
    r"""
    For privately visible zones, the set of Virtual Private Cloud
    resources that the zone is visible from. At least one of 'gke_clusters' or 'networks' must be specified.

    Attributes
    ----------
    gkeClusters : [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigGkeClustersItems0], default is Undefined, optional
        The list of Google Kubernetes Engine clusters that can see this zone.
    networks : [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigNetworksItems0], default is Undefined, optional
        networks
    """


    gkeClusters?: [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigGkeClustersItems0]

    networks?: [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigNetworksItems0]


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigGkeClustersItems0:
    r"""
    DNS cnrm cloud google com v1beta1 DNS managed zone spec private visibility config gke clusters items0

    Attributes
    ----------
    gkeClusterNameRef : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigGkeClustersItems0GkeClusterNameRef, default is Undefined, required
        gke cluster name ref
    """


    gkeClusterNameRef: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigGkeClustersItems0GkeClusterNameRef


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigGkeClustersItems0GkeClusterNameRef:
    r"""
    The resource name of the cluster to bind this ManagedZone to.
    This should be specified in the format like
    'projects/*/locations/*/clusters/*'.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ContainerCluster` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigNetworksItems0:
    r"""
    DNS cnrm cloud google com v1beta1 DNS managed zone spec private visibility config networks items0

    Attributes
    ----------
    networkRef : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigNetworksItems0NetworkRef, default is Undefined, required
        network ref
    """


    networkRef: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigNetworksItems0NetworkRef


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecPrivateVisibilityConfigNetworksItems0NetworkRef:
    r"""
    VPC network to bind to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeNetwork` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecServiceDirectoryConfig:
    r"""
    Immutable. The presence of this field indicates that this zone is backed by Service Directory. The value of this field contains information related to the namespace associated with the zone.

    Attributes
    ----------
    namespace : DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecServiceDirectoryConfigNamespace, default is Undefined, required
        namespace
    """


    namespace: DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecServiceDirectoryConfigNamespace


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneSpecServiceDirectoryConfigNamespace:
    r"""
    The namespace associated with the zone.

    Attributes
    ----------
    namespaceUrl : str, default is Undefined, required
        The fully qualified or partial URL of the service directory namespace that should be
        associated with the zone. This should be formatted like
        'https://servicedirectory.googleapis.com/v1/projects/{project}/locations/{location}/namespaces/{namespace_id}'
        or simply 'projects/{project}/locations/{location}/namespaces/{namespace_id}'
        Ignored for 'public' visibility zones.
    """


    namespaceUrl: str


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneStatus:
    r"""
    DNS cnrm cloud google com v1beta1 DNS managed zone status

    Attributes
    ----------
    conditions : [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    creationTime : str, default is Undefined, optional
        The time that this resource was created on the server.
        This is in RFC3339 text format.
    managedZoneId : int, default is Undefined, optional
        Unique identifier for the resource; defined by the server.
    nameServers : [str], default is Undefined, optional
        Delegate your managed_zone to these virtual name servers;
        defined by the server.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    """


    conditions?: [DNSCnrmCloudGoogleComV1beta1DNSManagedZoneStatusConditionsItems0]

    creationTime?: str

    managedZoneId?: int

    nameServers?: [str]

    observedGeneration?: int


schema DNSCnrmCloudGoogleComV1beta1DNSManagedZoneStatusConditionsItems0:
    r"""
    DNS cnrm cloud google com v1beta1 DNS managed zone status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


