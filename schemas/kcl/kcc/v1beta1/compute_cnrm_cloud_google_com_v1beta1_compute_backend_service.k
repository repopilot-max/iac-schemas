"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema ComputeBackendService:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service

    Attributes
    ----------
    apiVersion : str, default is "compute.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "ComputeBackendService", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpec, default is Undefined, required
        spec
    status : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceStatus, default is Undefined, optional
        status
    """


    apiVersion: "compute.cnrm.cloud.google.com/v1beta1" = "compute.cnrm.cloud.google.com/v1beta1"

    kind: "ComputeBackendService" = "ComputeBackendService"

    metadata?: v1.ObjectMeta

    spec: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpec

    status?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceStatus


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpec:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service spec

    Attributes
    ----------
    affinityCookieTtlSec : int, default is Undefined, optional
        Lifetime of cookies in seconds if session_affinity is
        GENERATED_COOKIE. If set to 0, the cookie is non-persistent and lasts
        only until the end of the browser session (or equivalent). The
        maximum allowed value for TTL is one day.

        When the load balancing scheme is INTERNAL, this field is not used.
    backend : [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0], default is Undefined, optional
        The set of backends that serve this BackendService.
    cdnPolicy : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicy, default is Undefined, optional
        cdn policy
    circuitBreakers : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCircuitBreakers, default is Undefined, optional
        circuit breakers
    compressionMode : str, default is Undefined, optional
        Compress text responses using Brotli or gzip compression, based on the client's Accept-Encoding header. Possible values: ["AUTOMATIC", "DISABLED"].
    connectionDrainingTimeoutSec : int, default is Undefined, optional
        Time for which instance will be drained (not accept new
        connections, but still work to finish started).
    connectionTrackingPolicy : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConnectionTrackingPolicy, default is Undefined, optional
        connection tracking policy
    consistentHash : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConsistentHash, default is Undefined, optional
        consistent hash
    customRequestHeaders : [str], default is Undefined, optional
        Headers that the HTTP/S load balancer should add to proxied
        requests.
    customResponseHeaders : [str], default is Undefined, optional
        Headers that the HTTP/S load balancer should add to proxied
        responses.
    description : str, default is Undefined, optional
        An optional description of this resource.
    edgeSecurityPolicyRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecEdgeSecurityPolicyRef, default is Undefined, optional
        edge security policy ref
    enableCdn : bool, default is Undefined, optional
        If true, enable Cloud CDN for this BackendService.
    failoverPolicy : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecFailoverPolicy, default is Undefined, optional
        failover policy
    healthChecks : [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecHealthChecksItems0], default is Undefined, optional
        health checks
    iap : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIap, default is Undefined, optional
        iap
    loadBalancingScheme : str, default is Undefined, optional
        Immutable. Indicates whether the backend service will be used with internal or
        external load balancing. A backend service created for one type of
        load balancing cannot be used with the other. For more information, refer to
        [Choosing a load balancer](https://cloud.google.com/load-balancing/docs/backend-service). Default value: "EXTERNAL" Possible values: ["EXTERNAL", "INTERNAL_SELF_MANAGED", "INTERNAL_MANAGED", "EXTERNAL_MANAGED"].
    localityLbPolicies : [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLocalityLbPoliciesItems0], default is Undefined, optional
        A list of locality load balancing policies to be used in order of
        preference. Either the policy or the customPolicy field should be set.
        Overrides any value set in the localityLbPolicy field.

        localityLbPolicies is only supported when the BackendService is referenced
        by a URL Map that is referenced by a target gRPC proxy that has the
        validateForProxyless field set to true.
    localityLbPolicy : str, default is Undefined, optional
        The load balancing algorithm used within the scope of the locality.
        The possible values are:

        * 'ROUND_ROBIN': This is a simple policy in which each healthy backend
                         is selected in round robin order.

        * 'LEAST_REQUEST': An O(1) algorithm which selects two random healthy
                           hosts and picks the host which has fewer active requests.

        * 'RING_HASH': The ring/modulo hash load balancer implements consistent
                       hashing to backends. The algorithm has the property that the
                       addition/removal of a host from a set of N hosts only affects
                       1/N of the requests.

        * 'RANDOM': The load balancer selects a random healthy host.

        * 'ORIGINAL_DESTINATION': Backend host is selected based on the client
                                  connection metadata, i.e., connections are opened
                                  to the same address as the destination address of
                                  the incoming connection before the connection
                                  was redirected to the load balancer.

        * 'MAGLEV': used as a drop in replacement for the ring hash load balancer.
                    Maglev is not as stable as ring hash but has faster table lookup
                    build times and host selection times. For more information about
                    Maglev, refer to https://ai.google/research/pubs/pub44824

        * 'WEIGHTED_MAGLEV': Per-instance weighted Load Balancing via health check
                             reported weights. If set, the Backend Service must
                             configure a non legacy HTTP-based Health Check, and
                             health check replies are expected to contain
                             non-standard HTTP response header field
                             X-Load-Balancing-Endpoint-Weight to specify the
                             per-instance weights. If set, Load Balancing is weight
                             based on the per-instance weights reported in the last
                             processed health check replies, as long as every
                             instance either reported a valid weight or had
                             UNAVAILABLE_WEIGHT. Otherwise, Load Balancing remains
                             equal-weight.


        This field is applicable to either:

        * A regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2,
          and loadBalancingScheme set to INTERNAL_MANAGED.
        * A global backend service with the load_balancing_scheme set to INTERNAL_SELF_MANAGED.
        * A regional backend service with loadBalancingScheme set to EXTERNAL (External Network
          Load Balancing). Only MAGLEV and WEIGHTED_MAGLEV values are possible for External
          Network Load Balancing. The default is MAGLEV.


        If session_affinity is not NONE, and this field is not set to MAGLEV, WEIGHTED_MAGLEV,
        or RING_HASH, session affinity settings will not take effect.

        Only ROUND_ROBIN and RING_HASH are supported when the backend service is referenced
        by a URL map that is bound to target gRPC proxy that has validate_for_proxyless
        field set to true. Possible values: ["ROUND_ROBIN", "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV", "WEIGHTED_MAGLEV"].
    location : str, default is Undefined, required
        Location represents the geographical location of the ComputeBackendService. Specify a region name or "global" for global resources. Reference: GCP definition of regions/zones (https://cloud.google.com/compute/docs/regions-zones/)
    logConfig : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLogConfig, default is Undefined, optional
        log config
    networkRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecNetworkRef, default is Undefined, optional
        network ref
    outlierDetection : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecOutlierDetection, default is Undefined, optional
        outlier detection
    portName : str, default is Undefined, optional
        Name of backend port. The same name should appear in the instance
        groups referenced by this service. Required when the load balancing
        scheme is EXTERNAL.
    $protocol : str, default is Undefined, optional
        The protocol this BackendService uses to communicate with backends.
        The default is HTTP. **NOTE**: HTTP2 is only valid for beta HTTP/2 load balancer
        types and may result in errors if used with the GA API. **NOTE**: With protocol “UNSPECIFIED”,
        the backend service can be used by Layer 4 Internal Load Balancing or Network Load Balancing
        with TCP/UDP/L3_DEFAULT Forwarding Rule protocol. Possible values: ["HTTP", "HTTPS", "HTTP2", "TCP", "SSL", "GRPC", "UNSPECIFIED"].
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    securityPolicy : str, default is Undefined, optional
        The security policy associated with this backend service.
    securityPolicyRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSecurityPolicyRef, default is Undefined, optional
        security policy ref
    securitySettings : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSecuritySettings, default is Undefined, optional
        security settings
    sessionAffinity : str, default is Undefined, optional
        Type of session affinity to use. The default is NONE. Session affinity is
        not applicable if the protocol is UDP. Possible values: ["NONE", "CLIENT_IP", "CLIENT_IP_PORT_PROTO", "CLIENT_IP_PROTO", "GENERATED_COOKIE", "HEADER_FIELD", "HTTP_COOKIE"].
    subsetting : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSubsetting, default is Undefined, optional
        subsetting
    timeoutSec : int, default is Undefined, optional
        How many seconds to wait for the backend before considering it a
        failed request. Default is 30 seconds. Valid range is [1, 86400].
    """


    affinityCookieTtlSec?: int

    backend?: [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0]

    cdnPolicy?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicy

    circuitBreakers?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCircuitBreakers

    compressionMode?: str

    connectionDrainingTimeoutSec?: int

    connectionTrackingPolicy?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConnectionTrackingPolicy

    consistentHash?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConsistentHash

    customRequestHeaders?: [str]

    customResponseHeaders?: [str]

    description?: str

    edgeSecurityPolicyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecEdgeSecurityPolicyRef

    enableCdn?: bool

    failoverPolicy?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecFailoverPolicy

    healthChecks?: [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecHealthChecksItems0]

    iap?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIap

    loadBalancingScheme?: str

    localityLbPolicies?: [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLocalityLbPoliciesItems0]

    localityLbPolicy?: str

    location: str

    logConfig?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLogConfig

    networkRef?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecNetworkRef

    outlierDetection?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecOutlierDetection

    portName?: str

    $protocol?: str

    resourceID?: str

    securityPolicy?: str

    securityPolicyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSecurityPolicyRef

    securitySettings?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSecuritySettings

    sessionAffinity?: str

    subsetting?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSubsetting

    timeoutSec?: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service spec backend items0

    Attributes
    ----------
    balancingMode : str, default is Undefined, optional
        Specifies the balancing mode for this backend.

        For global HTTP(S) or TCP/SSL load balancing, the default is
        UTILIZATION. Valid values are UTILIZATION, RATE (for HTTP(S))
        and CONNECTION (for TCP/SSL).

        See the [Backend Services Overview](https://cloud.google.com/load-balancing/docs/backend-service#balancing-mode)
        for an explanation of load balancing modes. Default value: "UTILIZATION" Possible values: ["UTILIZATION", "RATE", "CONNECTION"].
    capacityScaler : float, default is Undefined, optional
        A multiplier applied to the group's maximum servicing capacity
        (based on UTILIZATION, RATE or CONNECTION).

        Default value is 1, which means the group will serve up to 100%
        of its configured capacity (depending on balancingMode). A
        setting of 0 means the group is completely drained, offering
        0% of its available Capacity. Valid range is [0.0,1.0].
    description : str, default is Undefined, optional
        An optional description of this resource.
        Provide this property when you create the resource.
    failover : bool, default is Undefined, optional
        This field designates whether this is a failover backend. More
        than one failover backend can be configured for a given RegionBackendService.
    group : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0Group, default is Undefined, required
        group
    maxConnections : int, default is Undefined, optional
        The max number of simultaneous connections for the group. Can
        be used with either CONNECTION or UTILIZATION balancing modes.

        For CONNECTION mode, either maxConnections or one
        of maxConnectionsPerInstance or maxConnectionsPerEndpoint,
        as appropriate for group type, must be set.
    maxConnectionsPerEndpoint : int, default is Undefined, optional
        The max number of simultaneous connections that a single backend
        network endpoint can handle. This is used to calculate the
        capacity of the group. Can be used in either CONNECTION or
        UTILIZATION balancing modes.

        For CONNECTION mode, either
        maxConnections or maxConnectionsPerEndpoint must be set.
    maxConnectionsPerInstance : int, default is Undefined, optional
        The max number of simultaneous connections that a single
        backend instance can handle. This is used to calculate the
        capacity of the group. Can be used in either CONNECTION or
        UTILIZATION balancing modes.

        For CONNECTION mode, either maxConnections or
        maxConnectionsPerInstance must be set.
    maxRate : int, default is Undefined, optional
        The max requests per second (RPS) of the group.

        Can be used with either RATE or UTILIZATION balancing modes,
        but required if RATE mode. For RATE mode, either maxRate or one
        of maxRatePerInstance or maxRatePerEndpoint, as appropriate for
        group type, must be set.
    maxRatePerEndpoint : float, default is Undefined, optional
        The max requests per second (RPS) that a single backend network
        endpoint can handle. This is used to calculate the capacity of
        the group. Can be used in either balancing mode. For RATE mode,
        either maxRate or maxRatePerEndpoint must be set.
    maxRatePerInstance : float, default is Undefined, optional
        The max requests per second (RPS) that a single backend
        instance can handle. This is used to calculate the capacity of
        the group. Can be used in either balancing mode. For RATE mode,
        either maxRate or maxRatePerInstance must be set.
    maxUtilization : float, default is Undefined, optional
        Used when balancingMode is UTILIZATION. This ratio defines the
        CPU utilization target for the group. Valid range is [0.0, 1.0].
    """


    balancingMode?: str

    capacityScaler?: float

    description?: str

    failover?: bool

    group: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0Group

    maxConnections?: int

    maxConnectionsPerEndpoint?: int

    maxConnectionsPerInstance?: int

    maxRate?: int

    maxRatePerEndpoint?: float

    maxRatePerInstance?: float

    maxUtilization?: float


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0Group:
    r"""
    Reference to a ComputeInstanceGroup or ComputeNetworkEndpointGroup
    resource. In case of instance group this defines the list of
    instances that serve traffic. Member virtual machine instances from
    each instance group must live in the same zone as the instance
    group itself. No two backends in a backend service are allowed to
    use same Instance Group resource.

    For Network Endpoint Groups this defines list of endpoints. All
    endpoints of Network Endpoint Group must be hosted on instances
    located in the same zone as the Network Endpoint Group.

    Backend services cannot mix Instance Group and Network Endpoint
    Group backends.

    When the 'load_balancing_scheme' is INTERNAL, only instance groups
    are supported.

    Attributes
    ----------
    instanceGroupRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0GroupInstanceGroupRef, default is Undefined, optional
        instance group ref
    networkEndpointGroupRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0GroupNetworkEndpointGroupRef, default is Undefined, optional
        network endpoint group ref
    """


    instanceGroupRef?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0GroupInstanceGroupRef

    networkEndpointGroupRef?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0GroupNetworkEndpointGroupRef


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0GroupInstanceGroupRef:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service spec backend items0 group instance group ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeInstanceGroup` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecBackendItems0GroupNetworkEndpointGroupRef:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service spec backend items0 group network endpoint group ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeNetworkEndpointGroup` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicy:
    r"""
    Cloud CDN configuration for this BackendService.

    Attributes
    ----------
    bypassCacheOnRequestHeaders : [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicyBypassCacheOnRequestHeadersItems0], default is Undefined, optional
        Bypass the cache when the specified request headers are matched - e.g. Pragma or Authorization headers. Up to 5 headers can be specified.
        The cache is bypassed for all cdnPolicy.cacheMode settings.
    cacheKeyPolicy : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicyCacheKeyPolicy, default is Undefined, optional
        cache key policy
    cacheMode : str, default is Undefined, optional
        Specifies the cache setting for all responses from this backend.
        The possible values are: USE_ORIGIN_HEADERS, FORCE_CACHE_ALL and CACHE_ALL_STATIC Possible values: ["USE_ORIGIN_HEADERS", "FORCE_CACHE_ALL", "CACHE_ALL_STATIC"].
    clientTtl : int, default is Undefined, optional
        Specifies the maximum allowed TTL for cached content served by this origin.
    defaultTtl : int, default is Undefined, optional
        Specifies the default TTL for cached content served by this origin for responses
        that do not have an existing valid TTL (max-age or s-max-age).
    maxTtl : int, default is Undefined, optional
        Specifies the maximum allowed TTL for cached content served by this origin.
    negativeCaching : bool, default is Undefined, optional
        Negative caching allows per-status code TTLs to be set, in order to apply fine-grained caching for common errors or redirects.
    negativeCachingPolicy : [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicyNegativeCachingPolicyItems0], default is Undefined, optional
        Sets a cache TTL for the specified HTTP status code. negativeCaching must be enabled to configure negativeCachingPolicy.
        Omitting the policy and leaving negativeCaching enabled will use Cloud CDN's default cache TTLs.
    serveWhileStale : int, default is Undefined, optional
        Serve existing content from the cache (if available) when revalidating content with the origin, or when an error is encountered when refreshing the cache.
    signedUrlCacheMaxAgeSec : int, default is Undefined, optional
        Maximum number of seconds the response to a signed URL request
        will be considered fresh, defaults to 1hr (3600s). After this
        time period, the response will be revalidated before
        being served.

        When serving responses to signed URL requests, Cloud CDN will
        internally behave as though all responses from this backend had a
        "Cache-Control: public, max-age=[TTL]" header, regardless of any
        existing Cache-Control header. The actual headers served in
        responses will not be altered.
    """


    bypassCacheOnRequestHeaders?: [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicyBypassCacheOnRequestHeadersItems0]

    cacheKeyPolicy?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicyCacheKeyPolicy

    cacheMode?: str

    clientTtl?: int

    defaultTtl?: int

    maxTtl?: int

    negativeCaching?: bool

    negativeCachingPolicy?: [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicyNegativeCachingPolicyItems0]

    serveWhileStale?: int

    signedUrlCacheMaxAgeSec?: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicyBypassCacheOnRequestHeadersItems0:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service spec cdn policy bypass cache on request headers items0

    Attributes
    ----------
    headerName : str, default is Undefined, required
        The header field name to match on when bypassing cache. Values are case-insensitive.
    """


    headerName: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicyCacheKeyPolicy:
    r"""
    The CacheKeyPolicy for this CdnPolicy.

    Attributes
    ----------
    includeHost : bool, default is Undefined, optional
        If true requests to different hosts will be cached separately.
    includeHttpHeaders : [str], default is Undefined, optional
        Allows HTTP request headers (by name) to be used in the
        cache key.
    includeNamedCookies : [str], default is Undefined, optional
        Names of cookies to include in cache keys.
    includeProtocol : bool, default is Undefined, optional
        If true, http and https requests will be cached separately.
    includeQueryString : bool, default is Undefined, optional
        If true, include query string parameters in the cache key
        according to query_string_whitelist and
        query_string_blacklist. If neither is set, the entire query
        string will be included.

        If false, the query string will be excluded from the cache
        key entirely.
    queryStringBlacklist : [str], default is Undefined, optional
        Names of query string parameters to exclude in cache keys.

        All other parameters will be included. Either specify
        query_string_whitelist or query_string_blacklist, not both.
        '&' and '=' will be percent encoded and not treated as
        delimiters.
    queryStringWhitelist : [str], default is Undefined, optional
        Names of query string parameters to include in cache keys.

        All other parameters will be excluded. Either specify
        query_string_whitelist or query_string_blacklist, not both.
        '&' and '=' will be percent encoded and not treated as
        delimiters.
    """


    includeHost?: bool

    includeHttpHeaders?: [str]

    includeNamedCookies?: [str]

    includeProtocol?: bool

    includeQueryString?: bool

    queryStringBlacklist?: [str]

    queryStringWhitelist?: [str]


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCdnPolicyNegativeCachingPolicyItems0:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service spec cdn policy negative caching policy items0

    Attributes
    ----------
    code : int, default is Undefined, optional
        The HTTP status code to define a TTL against. Only HTTP status codes 300, 301, 308, 404, 405, 410, 421, 451 and 501
        can be specified as values, and you cannot specify a status code more than once.
    ttl : int, default is Undefined, optional
        The TTL (in seconds) for which to cache responses with the corresponding status code. The maximum allowed value is 1800s
        (30 minutes), noting that infrequently accessed objects may be evicted from the cache before the defined TTL.
    """


    code?: int

    ttl?: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCircuitBreakers:
    r"""
    Settings controlling the volume of connections to a backend service. This field
    is applicable only when the load_balancing_scheme is set to INTERNAL_SELF_MANAGED.

    Attributes
    ----------
    connectTimeout : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCircuitBreakersConnectTimeout, default is Undefined, optional
        connect timeout
    maxConnections : int, default is Undefined, optional
        The maximum number of connections to the backend cluster.
        Defaults to 1024.
    maxPendingRequests : int, default is Undefined, optional
        The maximum number of pending requests to the backend cluster.
        Defaults to 1024.
    maxRequests : int, default is Undefined, optional
        The maximum number of parallel requests to the backend cluster.
        Defaults to 1024.
    maxRequestsPerConnection : int, default is Undefined, optional
        Maximum requests for a single backend connection. This parameter
        is respected by both the HTTP/1.1 and HTTP/2 implementations. If
        not specified, there is no limit. Setting this parameter to 1
        will effectively disable keep alive.
    maxRetries : int, default is Undefined, optional
        The maximum number of parallel retries to the backend cluster.
        Defaults to 3.
    """


    connectTimeout?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCircuitBreakersConnectTimeout

    maxConnections?: int

    maxPendingRequests?: int

    maxRequests?: int

    maxRequestsPerConnection?: int

    maxRetries?: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecCircuitBreakersConnectTimeout:
    r"""
    The timeout for new network connections to hosts.

    Attributes
    ----------
    nanos : int, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : int, default is Undefined, required
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: int

    seconds: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConnectionTrackingPolicy:
    r"""
    Connection Tracking configuration for this BackendService.
    This is available only for Layer 4 Internal Load Balancing and
    Network Load Balancing.

    Attributes
    ----------
    connectionPersistenceOnUnhealthyBackends : str, default is Undefined, optional
        Specifies connection persistence when backends are unhealthy.

        If set to 'DEFAULT_FOR_PROTOCOL', the existing connections persist on
        unhealthy backends only for connection-oriented protocols (TCP and SCTP)
        and only if the Tracking Mode is PER_CONNECTION (default tracking mode)
        or the Session Affinity is configured for 5-tuple. They do not persist
        for UDP.

        If set to 'NEVER_PERSIST', after a backend becomes unhealthy, the existing
        connections on the unhealthy backend are never persisted on the unhealthy
        backend. They are always diverted to newly selected healthy backends
        (unless all backends are unhealthy).

        If set to 'ALWAYS_PERSIST', existing connections always persist on
        unhealthy backends regardless of protocol and session affinity. It is
        generally not recommended to use this mode overriding the default. Default value: "DEFAULT_FOR_PROTOCOL" Possible values: ["DEFAULT_FOR_PROTOCOL", "NEVER_PERSIST", "ALWAYS_PERSIST"].
    enableStrongAffinity : bool, default is Undefined, optional
        Enable Strong Session Affinity for Network Load Balancing. This option is not available publicly.
    idleTimeoutSec : int, default is Undefined, optional
        Specifies how long to keep a Connection Tracking entry while there is
        no matching traffic (in seconds).

        For L4 ILB the minimum(default) is 10 minutes and maximum is 16 hours.

        For NLB the minimum(default) is 60 seconds and the maximum is 16 hours.
    trackingMode : str, default is Undefined, optional
        Specifies the key used for connection tracking. There are two options:
        'PER_CONNECTION': The Connection Tracking is performed as per the
        Connection Key (default Hash Method) for the specific protocol.

        'PER_SESSION': The Connection Tracking is performed as per the
        configured Session Affinity. It matches the configured Session Affinity. Default value: "PER_CONNECTION" Possible values: ["PER_CONNECTION", "PER_SESSION"].
    """


    connectionPersistenceOnUnhealthyBackends?: str

    enableStrongAffinity?: bool

    idleTimeoutSec?: int

    trackingMode?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConsistentHash:
    r"""
    Consistent Hash-based load balancing can be used to provide soft session
    affinity based on HTTP headers, cookies or other properties. This load balancing
    policy is applicable only for HTTP connections. The affinity to a particular
    destination host will be lost when one or more hosts are added/removed from the
    destination service. This field specifies parameters that control consistent
    hashing. This field only applies if the load_balancing_scheme is set to
    INTERNAL_SELF_MANAGED. This field is only applicable when locality_lb_policy is
    set to MAGLEV or RING_HASH.

    Attributes
    ----------
    httpCookie : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConsistentHashHTTPCookie, default is Undefined, optional
        http cookie
    httpHeaderName : str, default is Undefined, optional
        The hash based on the value of the specified header field.
        This field is applicable if the sessionAffinity is set to HEADER_FIELD.
    minimumRingSize : int, default is Undefined, optional
        The minimum number of virtual nodes to use for the hash ring.
        Larger ring sizes result in more granular load
        distributions. If the number of hosts in the load balancing pool
        is larger than the ring size, each host will be assigned a single
        virtual node.
        Defaults to 1024.
    """


    httpCookie?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConsistentHashHTTPCookie

    httpHeaderName?: str

    minimumRingSize?: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConsistentHashHTTPCookie:
    r"""
    Hash is based on HTTP Cookie. This field describes a HTTP cookie
    that will be used as the hash key for the consistent hash load
    balancer. If the cookie is not present, it will be generated.
    This field is applicable if the sessionAffinity is set to HTTP_COOKIE.

    Attributes
    ----------
    name : str, default is Undefined, optional
        Name of the cookie.
    path : str, default is Undefined, optional
        Path to set for the cookie.
    ttl : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConsistentHashHTTPCookieTTL, default is Undefined, optional
        ttl
    """


    name?: str

    path?: str

    ttl?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConsistentHashHTTPCookieTTL


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecConsistentHashHTTPCookieTTL:
    r"""
    Lifetime of the cookie.

    Attributes
    ----------
    nanos : int, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond
        resolution. Durations less than one second are represented
        with a 0 seconds field and a positive nanos field. Must
        be from 0 to 999,999,999 inclusive.
    seconds : int, default is Undefined, required
        Span of time at a resolution of a second.
        Must be from 0 to 315,576,000,000 inclusive.
    """


    nanos?: int

    seconds: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecEdgeSecurityPolicyRef:
    r"""
    The resource URL for the edge security policy associated with this
    backend service.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeSecurityPolicy` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecFailoverPolicy:
    r"""
    Policy for failovers.

    Attributes
    ----------
    disableConnectionDrainOnFailover : bool, default is Undefined, optional
        On failover or failback, this field indicates whether connection drain
        will be honored. Setting this to true has the following effect: connections
        to the old active pool are not drained. Connections to the new active pool
        use the timeout of 10 min (currently fixed). Setting to false has the
        following effect: both old and new connections will have a drain timeout
        of 10 min.
        This can be set to true only if the protocol is TCP.
        The default is false.
    dropTrafficIfUnhealthy : bool, default is Undefined, optional
        This option is used only when no healthy VMs are detected in the primary
        and backup instance groups. When set to true, traffic is dropped. When
        set to false, new connections are sent across all VMs in the primary group.
        The default is false.
    failoverRatio : float, default is Undefined, optional
        The value of the field must be in [0, 1]. If the ratio of the healthy
        VMs in the primary backend is at or below this number, traffic arriving
        at the load-balanced IP will be directed to the failover backend.
        In case where 'failoverRatio' is not set or all the VMs in the backup
        backend are unhealthy, the traffic will be directed back to the primary
        backend in the "force" mode, where traffic will be spread to the healthy
        VMs with the best effort, or to all VMs when no VM is healthy.
        This field is only used with l4 load balancing.
    """


    disableConnectionDrainOnFailover?: bool

    dropTrafficIfUnhealthy?: bool

    failoverRatio?: float


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecHealthChecksItems0:
    r"""
    The health check resources for health checking this
    ComputeBackendService. Currently at most one health check can be
    specified, and a health check is required.

    Attributes
    ----------
    healthCheckRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecHealthChecksItems0HealthCheckRef, default is Undefined, optional
        health check ref
    httpHealthCheckRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecHealthChecksItems0HTTPHealthCheckRef, default is Undefined, optional
        http health check ref
    """


    healthCheckRef?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecHealthChecksItems0HealthCheckRef

    httpHealthCheckRef?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecHealthChecksItems0HTTPHealthCheckRef


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecHealthChecksItems0HTTPHealthCheckRef:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service spec health checks items0 HTTP health check ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeHTTPHealthCheck` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecHealthChecksItems0HealthCheckRef:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service spec health checks items0 health check ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeHealthCheck` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIap:
    r"""
    Settings for enabling Cloud Identity Aware Proxy.

    Attributes
    ----------
    oauth2ClientId : str, default is Undefined, optional
        DEPRECATED. Although this field is still available, there is limited support. We recommend that you use `spec.iap.oauth2ClientIdRef` instead.
    oauth2ClientIdRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientIDRef, default is Undefined, optional
        oauth2 client Id ref
    oauth2ClientSecret : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientSecret, default is Undefined, optional
        oauth2 client secret
    oauth2ClientSecretSha256 : str, default is Undefined, optional
        OAuth2 Client Secret SHA-256 for IAP.
    """


    oauth2ClientId?: str

    oauth2ClientIdRef?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientIDRef

    oauth2ClientSecret?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientSecret

    oauth2ClientSecretSha256?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientIDRef:
    r"""
    OAuth2 Client ID for IAP.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of an `IAPIdentityAwareProxyClient` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientSecret:
    r"""
    OAuth2 Client Secret for IAP.

    Attributes
    ----------
    value : str, default is Undefined, optional
        Value of the field. Cannot be used if 'valueFrom' is specified.
    valueFrom : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientSecretValueFrom, default is Undefined, optional
        value from
    """


    value?: str

    valueFrom?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientSecretValueFrom


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientSecretValueFrom:
    r"""
    Source for the field's value. Cannot be used if 'value' is specified.

    Attributes
    ----------
    secretKeyRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientSecretValueFromSecretKeyRef, default is Undefined, optional
        secret key ref
    """


    secretKeyRef?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientSecretValueFromSecretKeyRef


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecIapOauth2ClientSecretValueFromSecretKeyRef:
    r"""
    Reference to a value with the given key in the given Secret in the resource's namespace.

    Attributes
    ----------
    key : str, default is Undefined, required
        Key that identifies the value to be extracted.
    name : str, default is Undefined, required
        Name of the Secret to extract a value from.
    """


    key: str

    name: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLocalityLbPoliciesItems0:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service spec locality lb policies items0

    Attributes
    ----------
    customPolicy : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLocalityLbPoliciesItems0CustomPolicy, default is Undefined, optional
        custom policy
    policy : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLocalityLbPoliciesItems0Policy, default is Undefined, optional
        policy
    """


    customPolicy?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLocalityLbPoliciesItems0CustomPolicy

    policy?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLocalityLbPoliciesItems0Policy


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLocalityLbPoliciesItems0CustomPolicy:
    r"""
    The configuration for a custom policy implemented by the user and
    deployed with the client.

    Attributes
    ----------
    data : str, default is Undefined, optional
        An optional, arbitrary JSON object with configuration data, understood
        by a locally installed custom policy implementation.
    name : str, default is Undefined, required
        Identifies the custom policy.

        The value should match the type the custom implementation is registered
        with on the gRPC clients. It should follow protocol buffer
        message naming conventions and include the full path (e.g.
        myorg.CustomLbPolicy). The maximum length is 256 characters.

        Note that specifying the same custom policy more than once for a
        backend is not a valid configuration and will be rejected.
    """


    data?: str

    name: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLocalityLbPoliciesItems0Policy:
    r"""
    The configuration for a built-in load balancing policy.

    Attributes
    ----------
    name : str, default is Undefined, required
        The name of a locality load balancer policy to be used. The value
        should be one of the predefined ones as supported by localityLbPolicy,
        although at the moment only ROUND_ROBIN is supported.

        This field should only be populated when the customPolicy field is not
        used.

        Note that specifying the same policy more than once for a backend is
        not a valid configuration and will be rejected.

        The possible values are:

        * 'ROUND_ROBIN': This is a simple policy in which each healthy backend
                        is selected in round robin order.

        * 'LEAST_REQUEST': An O(1) algorithm which selects two random healthy
                          hosts and picks the host which has fewer active requests.

        * 'RING_HASH': The ring/modulo hash load balancer implements consistent
                      hashing to backends. The algorithm has the property that the
                      addition/removal of a host from a set of N hosts only affects
                      1/N of the requests.

        * 'RANDOM': The load balancer selects a random healthy host.

        * 'ORIGINAL_DESTINATION': Backend host is selected based on the client
                                  connection metadata, i.e., connections are opened
                                  to the same address as the destination address of
                                  the incoming connection before the connection
                                  was redirected to the load balancer.

        * 'MAGLEV': used as a drop in replacement for the ring hash load balancer.
                    Maglev is not as stable as ring hash but has faster table lookup
                    build times and host selection times. For more information about
                    Maglev, refer to https://ai.google/research/pubs/pub44824 Possible values: ["ROUND_ROBIN", "LEAST_REQUEST", "RING_HASH", "RANDOM", "ORIGINAL_DESTINATION", "MAGLEV"].
    """


    name: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecLogConfig:
    r"""
    This field denotes the logging options for the load balancer traffic served by this backend service.
    If logging is enabled, logs will be exported to Stackdriver.

    Attributes
    ----------
    enable : bool, default is Undefined, optional
        Whether to enable logging for the load balancer traffic served by this backend service.
    sampleRate : float, default is Undefined, optional
        This field can only be specified if logging is enabled for this backend service. The value of
        the field must be in [0, 1]. This configures the sampling rate of requests to the load balancer
        where 1.0 means all logged requests are reported and 0.0 means no logged requests are reported.
        The default value is 1.0.
    """


    enable?: bool

    sampleRate?: float


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecNetworkRef:
    r"""
    The network to which this backend service belongs.  This field can
    only be specified when the load balancing scheme is set to
    INTERNAL.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeNetwork` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecOutlierDetection:
    r"""
    Settings controlling eviction of unhealthy hosts from the load balancing pool.
    This field is applicable only when the load_balancing_scheme is set
    to INTERNAL_SELF_MANAGED.

    Attributes
    ----------
    baseEjectionTime : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecOutlierDetectionBaseEjectionTime, default is Undefined, optional
        base ejection time
    consecutiveErrors : int, default is Undefined, optional
        Number of errors before a host is ejected from the connection pool. When the
        backend host is accessed over HTTP, a 5xx return code qualifies as an error.
        Defaults to 5.
    consecutiveGatewayFailure : int, default is Undefined, optional
        The number of consecutive gateway failures (502, 503, 504 status or connection
        errors that are mapped to one of those status codes) before a consecutive
        gateway failure ejection occurs. Defaults to 5.
    enforcingConsecutiveErrors : int, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through consecutive 5xx. This setting can be used to disable
        ejection or to ramp it up slowly. Defaults to 100.
    enforcingConsecutiveGatewayFailure : int, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through consecutive gateway failures. This setting can be
        used to disable ejection or to ramp it up slowly. Defaults to 0.
    enforcingSuccessRate : int, default is Undefined, optional
        The percentage chance that a host will be actually ejected when an outlier
        status is detected through success rate statistics. This setting can be used to
        disable ejection or to ramp it up slowly. Defaults to 100.
    interval : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecOutlierDetectionInterval, default is Undefined, optional
        interval
    maxEjectionPercent : int, default is Undefined, optional
        Maximum percentage of hosts in the load balancing pool for the backend service
        that can be ejected. Defaults to 10%.
    successRateMinimumHosts : int, default is Undefined, optional
        The number of hosts in a cluster that must have enough request volume to detect
        success rate outliers. If the number of hosts is less than this setting, outlier
        detection via success rate statistics is not performed for any host in the
        cluster. Defaults to 5.
    successRateRequestVolume : int, default is Undefined, optional
        The minimum number of total requests that must be collected in one interval (as
        defined by the interval duration above) to include this host in success rate
        based outlier detection. If the volume is lower than this setting, outlier
        detection via success rate statistics is not performed for that host. Defaults
        to 100.
    successRateStdevFactor : int, default is Undefined, optional
        This factor is used to determine the ejection threshold for success rate outlier
        ejection. The ejection threshold is the difference between the mean success
        rate, and the product of this factor and the standard deviation of the mean
        success rate: mean - (stdev * success_rate_stdev_factor). This factor is divided
        by a thousand to get a double. That is, if the desired factor is 1.9, the
        runtime value should be 1900. Defaults to 1900.
    """


    baseEjectionTime?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecOutlierDetectionBaseEjectionTime

    consecutiveErrors?: int

    consecutiveGatewayFailure?: int

    enforcingConsecutiveErrors?: int

    enforcingConsecutiveGatewayFailure?: int

    enforcingSuccessRate?: int

    interval?: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecOutlierDetectionInterval

    maxEjectionPercent?: int

    successRateMinimumHosts?: int

    successRateRequestVolume?: int

    successRateStdevFactor?: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecOutlierDetectionBaseEjectionTime:
    r"""
    The base time that a host is ejected for. The real time is equal to the base
    time multiplied by the number of times the host has been ejected. Defaults to
    30000ms or 30s.

    Attributes
    ----------
    nanos : int, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 'seconds' field and a positive
        'nanos' field. Must be from 0 to 999,999,999 inclusive.
    seconds : int, default is Undefined, required
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: int

    seconds: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecOutlierDetectionInterval:
    r"""
    Time interval between ejection sweep analysis. This can result in both new
    ejections as well as hosts being returned to service. Defaults to 10 seconds.

    Attributes
    ----------
    nanos : int, default is Undefined, optional
        Span of time that's a fraction of a second at nanosecond resolution. Durations
        less than one second are represented with a 0 'seconds' field and a positive
        'nanos' field. Must be from 0 to 999,999,999 inclusive.
    seconds : int, default is Undefined, required
        Span of time at a resolution of a second. Must be from 0 to 315,576,000,000
        inclusive.
    """


    nanos?: int

    seconds: int


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSecurityPolicyRef:
    r"""
    The security policy associated with this backend service.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `selfLink` field of a `ComputeSecurityPolicy` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSecuritySettings:
    r"""
    The security settings that apply to this backend service. This field is applicable to either
    a regional backend service with the service_protocol set to HTTP, HTTPS, or HTTP2, and
    load_balancing_scheme set to INTERNAL_MANAGED; or a global backend service with the
    load_balancing_scheme set to INTERNAL_SELF_MANAGED.

    Attributes
    ----------
    clientTLSPolicyRef : ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSecuritySettingsClientTLSPolicyRef, default is Undefined, required
        client TLS policy ref
    subjectAltNames : [str], default is Undefined, required
        A list of alternate names to verify the subject identity in the certificate.
        If specified, the client will verify that the server certificate's subject
        alt name matches one of the specified values.
    """


    clientTLSPolicyRef: ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSecuritySettingsClientTLSPolicyRef

    subjectAltNames: [str]


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSecuritySettingsClientTLSPolicyRef:
    r"""
    ClientTlsPolicy is a resource that specifies how a client should
    authenticate connections to backends of a service. This resource itself
    does not affect configuration unless it is attached to a backend
    service resource.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: string of the format `//networksecurity.googleapis.com/projects/{{project}}/locations/{{location}}/clientTlsPolicies/{{value}}`, where {{value}} is the `name` field of a `NetworkSecurityClientTLSPolicy` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceSpecSubsetting:
    r"""
    Subsetting configuration for this BackendService. Currently this is applicable only for Internal TCP/UDP load balancing and Internal HTTP(S) load balancing.

    Attributes
    ----------
    policy : str, default is Undefined, required
        The algorithm used for subsetting. Possible values: ["CONSISTENT_HASH_SUBSETTING"].
    """


    policy: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceStatus:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service status

    Attributes
    ----------
    conditions : [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    creationTimestamp : str, default is Undefined, optional
        Creation timestamp in RFC3339 text format.
    fingerprint : str, default is Undefined, optional
        Fingerprint of this resource. A hash of the contents stored in this
        object. This field is used in optimistic locking.
    generatedId : int, default is Undefined, optional
        The unique identifier for the resource. This identifier is defined by the server.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    selfLink : str, default is Undefined, optional
        self link
    """


    conditions?: [ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceStatusConditionsItems0]

    creationTimestamp?: str

    fingerprint?: str

    generatedId?: int

    observedGeneration?: int

    selfLink?: str


schema ComputeCnrmCloudGoogleComV1beta1ComputeBackendServiceStatusConditionsItems0:
    r"""
    compute cnrm cloud google com v1beta1 compute backend service status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


