"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema MonitoringAlertPolicy:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy

    Attributes
    ----------
    apiVersion : str, default is "monitoring.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "MonitoringAlertPolicy", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpec, default is Undefined, required
        spec
    status : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicyStatus, default is Undefined, optional
        status
    """


    apiVersion: "monitoring.cnrm.cloud.google.com/v1beta1" = "monitoring.cnrm.cloud.google.com/v1beta1"

    kind: "MonitoringAlertPolicy" = "MonitoringAlertPolicy"

    metadata?: v1.ObjectMeta

    spec: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpec

    status?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicyStatus


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpec:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy spec

    Attributes
    ----------
    alertStrategy : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecAlertStrategy, default is Undefined, optional
        alert strategy
    combiner : str, default is Undefined, required
        How to combine the results of multiple conditions to
        determine if an incident should be opened. Possible values: ["AND", "OR", "AND_WITH_MATCHING_RESOURCE"].
    conditions : [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0], default is Undefined, required
        A list of conditions for the policy. The conditions are combined by
        AND or OR according to the combiner field. If the combined conditions
        evaluate to true, then an incident is created. A policy can have from
        one to six conditions.
    displayName : str, default is Undefined, required
        A short name or phrase used to identify the policy in
        dashboards, notifications, and incidents. To avoid confusion, don't use
        the same display name for multiple policies in the same project. The
        name is limited to 512 Unicode characters.
    documentation : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecDocumentation, default is Undefined, optional
        documentation
    enabled : bool, default is Undefined, optional
        Whether or not the policy is enabled. The default is true.
    notificationChannels : [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecNotificationChannelsItems0], default is Undefined, optional
        notification channels
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The service-generated name of the resource. Used for acquisition only. Leave unset to create a new resource.
    severity : str, default is Undefined, optional
        The severity of an alert policy indicates how important
        incidents generated by that policy are. The severity level will be displayed on
        the Incident detail page and in notifications. Possible values: ["CRITICAL", "ERROR", "WARNING"].
    """


    alertStrategy?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecAlertStrategy

    combiner: str

    conditions: [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0]

    displayName: str

    documentation?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecDocumentation

    enabled?: bool

    notificationChannels?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecNotificationChannelsItems0]

    resourceID?: str

    severity?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecAlertStrategy:
    r"""
    Control over how this alert policy's notification channels are notified.

    Attributes
    ----------
    autoClose : str, default is Undefined, optional
        If an alert policy that was active has no data for this long, any open incidents will close.
    notificationChannelStrategy : [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecAlertStrategyNotificationChannelStrategyItems0], default is Undefined, optional
        Control over how the notification channels in 'notification_channels'
        are notified when this alert fires, on a per-channel basis.
    notificationRateLimit : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecAlertStrategyNotificationRateLimit, default is Undefined, optional
        notification rate limit
    """


    autoClose?: str

    notificationChannelStrategy?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecAlertStrategyNotificationChannelStrategyItems0]

    notificationRateLimit?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecAlertStrategyNotificationRateLimit


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecAlertStrategyNotificationChannelStrategyItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy spec alert strategy notification channel strategy items0

    Attributes
    ----------
    notificationChannelNames : [str], default is Undefined, optional
        The notification channels that these settings apply to. Each of these
        correspond to the name field in one of the NotificationChannel objects
        referenced in the notification_channels field of this AlertPolicy. The format is
        'projects/[PROJECT_ID_OR_NUMBER]/notificationChannels/[CHANNEL_ID]'.
    renotifyInterval : str, default is Undefined, optional
        The frequency at which to send reminder notifications for open incidents.
    """


    notificationChannelNames?: [str]

    renotifyInterval?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecAlertStrategyNotificationRateLimit:
    r"""
    Required for alert policies with a LogMatch condition.
    This limit is not implemented for alert policies that are not log-based.

    Attributes
    ----------
    period : str, default is Undefined, optional
        Not more than one notification per period.
    """


    period?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy spec conditions items0

    Attributes
    ----------
    conditionAbsent : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionAbsent, default is Undefined, optional
        condition absent
    conditionMatchedLog : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionMatchedLog, default is Undefined, optional
        condition matched log
    conditionMonitoringQueryLanguage : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionMonitoringQueryLanguage, default is Undefined, optional
        condition monitoring query language
    conditionPrometheusQueryLanguage : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionPrometheusQueryLanguage, default is Undefined, optional
        condition prometheus query language
    conditionThreshold : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThreshold, default is Undefined, optional
        condition threshold
    displayName : str, default is Undefined, required
        A short name or phrase used to identify the
        condition in dashboards, notifications, and
        incidents. To avoid confusion, don't use the same
        display name for multiple conditions in the same
        policy.
    name : str, default is Undefined, optional
        The unique resource name for this condition.
        Its syntax is:
        projects/[PROJECT_ID]/alertPolicies/[POLICY_ID]/conditions/[CONDITION_ID]
        [CONDITION_ID] is assigned by Stackdriver Monitoring when
        the condition is created as part of a new or updated alerting
        policy.
    """


    conditionAbsent?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionAbsent

    conditionMatchedLog?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionMatchedLog

    conditionMonitoringQueryLanguage?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionMonitoringQueryLanguage

    conditionPrometheusQueryLanguage?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionPrometheusQueryLanguage

    conditionThreshold?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThreshold

    displayName: str

    name?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionAbsent:
    r"""
    A condition that checks that a time series
    continues to receive new data points.

    Attributes
    ----------
    aggregations : [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionAbsentAggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series as well as how to
        combine the retrieved time series together
        (such as when aggregating multiple streams
        on each resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).
        Multiple aggregations are applied in the
        order specified.
    duration : str, default is Undefined, required
        The amount of time that a time series must
        fail to report new data to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g. 60s, 120s, or 300s
        --are supported.
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    trigger : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionAbsentTrigger, default is Undefined, optional
        trigger
    """


    aggregations?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionAbsentAggregationsItems0]

    duration: str

    $filter?: str

    trigger?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionAbsentTrigger


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionAbsentAggregationsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy spec conditions items0 condition absent aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned. Possible values: ["REDUCE_NONE", "REDUCE_MEAN", "REDUCE_MIN", "REDUCE_MAX", "REDUCE_SUM", "REDUCE_STDDEV", "REDUCE_COUNT", "REDUCE_COUNT_TRUE", "REDUCE_COUNT_FALSE", "REDUCE_FRACTION_TRUE", "REDUCE_PERCENTILE_99", "REDUCE_PERCENTILE_95", "REDUCE_PERCENTILE_50", "REDUCE_PERCENTILE_05"].
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned. Possible values: ["ALIGN_NONE", "ALIGN_DELTA", "ALIGN_RATE", "ALIGN_INTERPOLATE", "ALIGN_NEXT_OLDER", "ALIGN_MIN", "ALIGN_MAX", "ALIGN_MEAN", "ALIGN_COUNT", "ALIGN_SUM", "ALIGN_STDDEV", "ALIGN_COUNT_TRUE", "ALIGN_COUNT_FALSE", "ALIGN_FRACTION_TRUE", "ALIGN_PERCENTILE_99", "ALIGN_PERCENTILE_95", "ALIGN_PERCENTILE_50", "ALIGN_PERCENTILE_05", "ALIGN_PERCENT_CHANGE"].
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionAbsentTrigger:
    r"""
    The number/percent of time series for which
    the comparison must hold in order for the
    condition to trigger. If unspecified, then
    the condition will trigger if the comparison
    is true for any of the time series that have
    been identified by filter and aggregations.

    Attributes
    ----------
    count : int, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: int

    percent?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionMatchedLog:
    r"""
    A condition that checks for log messages matching given constraints.
    If set, no other conditions can be present.

    Attributes
    ----------
    $filter : str, default is Undefined, required
        A logs-based filter.
    labelExtractors : {str:str}, default is Undefined, optional
        A map from a label key to an extractor expression, which is used to
        extract the value for this label key. Each entry in this map is
        a specification for how data should be extracted from log entries that
        match filter. Each combination of extracted values is treated as
        a separate rule for the purposes of triggering notifications.
        Label keys and corresponding values can be used in notifications
        generated by this condition.
    """


    $filter: str

    labelExtractors?: {str:str}


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionMonitoringQueryLanguage:
    r"""
    A Monitoring Query Language query that outputs a boolean stream.

    Attributes
    ----------
    duration : str, default is Undefined, required
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationMissingData : str, default is Undefined, optional
        A condition control that determines how
        metric-threshold conditions are evaluated when
        data stops arriving. Possible values: ["EVALUATION_MISSING_DATA_INACTIVE", "EVALUATION_MISSING_DATA_ACTIVE", "EVALUATION_MISSING_DATA_NO_OP"].
    query : str, default is Undefined, required
        Monitoring Query Language query that outputs a boolean stream.
    trigger : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionMonitoringQueryLanguageTrigger, default is Undefined, optional
        trigger
    """


    duration: str

    evaluationMissingData?: str

    query: str

    trigger?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionMonitoringQueryLanguageTrigger


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionMonitoringQueryLanguageTrigger:
    r"""
    The number/percent of time series for which
    the comparison must hold in order for the
    condition to trigger. If unspecified, then
    the condition will trigger if the comparison
    is true for any of the time series that have
    been identified by filter and aggregations,
    or by the ratio, if denominator_filter and
    denominator_aggregations are specified.

    Attributes
    ----------
    count : int, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: int

    percent?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionPrometheusQueryLanguage:
    r"""
    A Monitoring Query Language query that outputs a boolean stream

    A condition type that allows alert policies to be defined using
    Prometheus Query Language (PromQL).

    The PrometheusQueryLanguageCondition message contains information
    from a Prometheus alerting rule and its associated rule group.

    Attributes
    ----------
    alertRule : str, default is Undefined, optional
        The alerting rule name of this alert in the corresponding Prometheus
        configuration file.

        Some external tools may require this field to be populated correctly
        in order to refer to the original Prometheus configuration file.
        The rule group name and the alert name are necessary to update the
        relevant AlertPolicies in case the definition of the rule group changes
        in the future.

        This field is optional. If this field is not empty, then it must be a
        valid Prometheus label name.
    duration : str, default is Undefined, optional
        Alerts are considered firing once their PromQL expression evaluated
        to be "true" for this long. Alerts whose PromQL expression was not
        evaluated to be "true" for long enough are considered pending. The
        default value is zero. Must be zero or positive.
    evaluationInterval : str, default is Undefined, optional
        How often this rule should be evaluated. Must be a positive multiple
        of 30 seconds or missing. The default value is 30 seconds. If this
        PrometheusQueryLanguageCondition was generated from a Prometheus
        alerting rule, then this value should be taken from the enclosing
        rule group.
    labels : {str:str}, default is Undefined, optional
        Labels to add to or overwrite in the PromQL query result. Label names
        must be valid.

        Label values can be templatized by using variables. The only available
        variable names are the names of the labels in the PromQL result, including
        "__name__" and "value". "labels" may be empty. This field is intended to be
        used for organizing and identifying the AlertPolicy.
    query : str, default is Undefined, required
        The PromQL expression to evaluate. Every evaluation cycle this
        expression is evaluated at the current time, and all resultant time
        series become pending/firing alerts. This field must not be empty.
    ruleGroup : str, default is Undefined, optional
        The rule group name of this alert in the corresponding Prometheus
        configuration file.

        Some external tools may require this field to be populated correctly
        in order to refer to the original Prometheus configuration file.
        The rule group name and the alert name are necessary to update the
        relevant AlertPolicies in case the definition of the rule group changes
        in the future.

        This field is optional. If this field is not empty, then it must be a
        valid Prometheus label name.
    """


    alertRule?: str

    duration?: str

    evaluationInterval?: str

    labels?: {str:str}

    query: str

    ruleGroup?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThreshold:
    r"""
    A condition that compares a time series against a
    threshold.

    Attributes
    ----------
    aggregations : [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdAggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series as well as how to
        combine the retrieved time series together
        (such as when aggregating multiple streams
        on each resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).
        Multiple aggregations are applied in the
        order specified.This field is similar to the
        one in the MetricService.ListTimeSeries
        request. It is advisable to use the
        ListTimeSeries method when debugging this
        field.
    comparison : str, default is Undefined, required
        The comparison to apply between the time
        series (indicated by filter and aggregation)
        and the threshold (indicated by
        threshold_value). The comparison is applied
        on each time series, with the time series on
        the left-hand side and the threshold on the
        right-hand side. Only COMPARISON_LT and
        COMPARISON_GT are supported currently. Possible values: ["COMPARISON_GT", "COMPARISON_GE", "COMPARISON_LT", "COMPARISON_LE", "COMPARISON_EQ", "COMPARISON_NE"].
    denominatorAggregations : [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdDenominatorAggregationsItems0], default is Undefined, optional
        Specifies the alignment of data points in
        individual time series selected by
        denominatorFilter as well as how to combine
        the retrieved time series together (such as
        when aggregating multiple streams on each
        resource to a single stream for each
        resource or when aggregating streams across
        all members of a group of resources).When
        computing ratios, the aggregations and
        denominator_aggregations fields must use the
        same alignment period and produce time
        series that have the same periodicity and
        labels.This field is similar to the one in
        the MetricService.ListTimeSeries request. It
        is advisable to use the ListTimeSeries
        method when debugging this field.
    denominatorFilter : str, default is Undefined, optional
        A filter that identifies a time series that
        should be used as the denominator of a ratio
        that will be compared with the threshold. If
        a denominator_filter is specified, the time
        series specified by the filter field will be
        used as the numerator.The filter is similar
        to the one that is specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    duration : str, default is Undefined, required
        The amount of time that a time series must
        violate the threshold to be considered
        failing. Currently, only values that are a
        multiple of a minute--e.g., 0, 60, 120, or
        300 seconds--are supported. If an invalid
        value is given, an error will be returned.
        When choosing a duration, it is useful to
        keep in mind the frequency of the underlying
        time series data (which may also be affected
        by any alignments specified in the
        aggregations field); a good duration is long
        enough so that a single outlier does not
        generate spurious alerts, but short enough
        that unhealthy states are detected and
        alerted on quickly.
    evaluationMissingData : str, default is Undefined, optional
        A condition control that determines how
        metric-threshold conditions are evaluated when
        data stops arriving. Possible values: ["EVALUATION_MISSING_DATA_INACTIVE", "EVALUATION_MISSING_DATA_ACTIVE", "EVALUATION_MISSING_DATA_NO_OP"].
    $filter : str, default is Undefined, optional
        A filter that identifies which time series
        should be compared with the threshold.The
        filter is similar to the one that is
        specified in the
        MetricService.ListTimeSeries request (that
        call is useful to verify the time series
        that will be retrieved / processed) and must
        specify the metric type and optionally may
        contain restrictions on resource type,
        resource labels, and metric labels. This
        field may not exceed 2048 Unicode characters
        in length.
    forecastOptions : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdForecastOptions, default is Undefined, optional
        forecast options
    thresholdValue : float, default is Undefined, optional
        A value against which to compare the time
        series.
    trigger : MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdTrigger, default is Undefined, optional
        trigger
    """


    aggregations?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdAggregationsItems0]

    comparison: str

    denominatorAggregations?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdDenominatorAggregationsItems0]

    denominatorFilter?: str

    duration: str

    evaluationMissingData?: str

    $filter?: str

    forecastOptions?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdForecastOptions

    thresholdValue?: float

    trigger?: MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdTrigger


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdAggregationsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy spec conditions items0 condition threshold aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned. Possible values: ["REDUCE_NONE", "REDUCE_MEAN", "REDUCE_MIN", "REDUCE_MAX", "REDUCE_SUM", "REDUCE_STDDEV", "REDUCE_COUNT", "REDUCE_COUNT_TRUE", "REDUCE_COUNT_FALSE", "REDUCE_FRACTION_TRUE", "REDUCE_PERCENTILE_99", "REDUCE_PERCENTILE_95", "REDUCE_PERCENTILE_50", "REDUCE_PERCENTILE_05"].
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned. Possible values: ["ALIGN_NONE", "ALIGN_DELTA", "ALIGN_RATE", "ALIGN_INTERPOLATE", "ALIGN_NEXT_OLDER", "ALIGN_MIN", "ALIGN_MAX", "ALIGN_MEAN", "ALIGN_COUNT", "ALIGN_SUM", "ALIGN_STDDEV", "ALIGN_COUNT_TRUE", "ALIGN_COUNT_FALSE", "ALIGN_FRACTION_TRUE", "ALIGN_PERCENTILE_99", "ALIGN_PERCENTILE_95", "ALIGN_PERCENTILE_50", "ALIGN_PERCENTILE_05", "ALIGN_PERCENT_CHANGE"].
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdDenominatorAggregationsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy spec conditions items0 condition threshold denominator aggregations items0

    Attributes
    ----------
    alignmentPeriod : str, default is Undefined, optional
        The alignment period for per-time
        series alignment. If present,
        alignmentPeriod must be at least
        60 seconds. After per-time series
        alignment, each time series will
        contain data points only on the
        period boundaries. If
        perSeriesAligner is not specified
        or equals ALIGN_NONE, then this
        field is ignored. If
        perSeriesAligner is specified and
        does not equal ALIGN_NONE, then
        this field must be defined;
        otherwise an error is returned.
    crossSeriesReducer : str, default is Undefined, optional
        The approach to be used to combine
        time series. Not all reducer
        functions may be applied to all
        time series, depending on the
        metric type and the value type of
        the original time series.
        Reduction may change the metric
        type of value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned. Possible values: ["REDUCE_NONE", "REDUCE_MEAN", "REDUCE_MIN", "REDUCE_MAX", "REDUCE_SUM", "REDUCE_STDDEV", "REDUCE_COUNT", "REDUCE_COUNT_TRUE", "REDUCE_COUNT_FALSE", "REDUCE_FRACTION_TRUE", "REDUCE_PERCENTILE_99", "REDUCE_PERCENTILE_95", "REDUCE_PERCENTILE_50", "REDUCE_PERCENTILE_05"].
    groupByFields : [str], default is Undefined, optional
        The set of fields to preserve when
        crossSeriesReducer is specified.
        The groupByFields determine how
        the time series are partitioned
        into subsets prior to applying the
        aggregation function. Each subset
        contains time series that have the
        same value for each of the
        grouping fields. Each individual
        time series is a member of exactly
        one subset. The crossSeriesReducer
        is applied to each subset of time
        series. It is not possible to
        reduce across different resource
        types, so this field implicitly
        contains resource.type. Fields not
        specified in groupByFields are
        aggregated away. If groupByFields
        is not specified and all the time
        series have the same resource
        type, then the time series are
        aggregated into a single output
        time series. If crossSeriesReducer
        is not defined, this field is
        ignored.
    perSeriesAligner : str, default is Undefined, optional
        The approach to be used to align
        individual time series. Not all
        alignment functions may be applied
        to all time series, depending on
        the metric type and value type of
        the original time series.
        Alignment may change the metric
        type or the value type of the time
        series.Time series data must be
        aligned in order to perform cross-
        time series reduction. If
        crossSeriesReducer is specified,
        then perSeriesAligner must be
        specified and not equal ALIGN_NONE
        and alignmentPeriod must be
        specified; otherwise, an error is
        returned. Possible values: ["ALIGN_NONE", "ALIGN_DELTA", "ALIGN_RATE", "ALIGN_INTERPOLATE", "ALIGN_NEXT_OLDER", "ALIGN_MIN", "ALIGN_MAX", "ALIGN_MEAN", "ALIGN_COUNT", "ALIGN_SUM", "ALIGN_STDDEV", "ALIGN_COUNT_TRUE", "ALIGN_COUNT_FALSE", "ALIGN_FRACTION_TRUE", "ALIGN_PERCENTILE_99", "ALIGN_PERCENTILE_95", "ALIGN_PERCENTILE_50", "ALIGN_PERCENTILE_05", "ALIGN_PERCENT_CHANGE"].
    """


    alignmentPeriod?: str

    crossSeriesReducer?: str

    groupByFields?: [str]

    perSeriesAligner?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdForecastOptions:
    r"""
    When this field is present, the 'MetricThreshold'
    condition forecasts whether the time series is
    predicted to violate the threshold within the
    'forecastHorizon'. When this field is not set, the
    'MetricThreshold' tests the current value of the
    timeseries against the threshold.

    Attributes
    ----------
    forecastHorizon : str, default is Undefined, required
        The length of time into the future to forecast
        whether a timeseries will violate the threshold.
        If the predicted value is found to violate the
        threshold, and the violation is observed in all
        forecasts made for the Configured 'duration',
        then the timeseries is considered to be failing.
    """


    forecastHorizon: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecConditionsItems0ConditionThresholdTrigger:
    r"""
    The number/percent of time series for which
    the comparison must hold in order for the
    condition to trigger. If unspecified, then
    the condition will trigger if the comparison
    is true for any of the time series that have
    been identified by filter and aggregations,
    or by the ratio, if denominator_filter and
    denominator_aggregations are specified.

    Attributes
    ----------
    count : int, default is Undefined, optional
        The absolute number of time series
        that must fail the predicate for the
        condition to be triggered.
    percent : float, default is Undefined, optional
        The percentage of time series that
        must fail the predicate for the
        condition to be triggered.
    """


    count?: int

    percent?: float


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecDocumentation:
    r"""
    Documentation that is included with notifications and incidents related
    to this policy. Best practice is for the documentation to include information
    to help responders understand, mitigate, escalate, and correct the underlying
    problems detected by the alerting policy. Notification channels that have
    limited capacity might not show this documentation.

    Attributes
    ----------
    content : str, default is Undefined, optional
        The text of the documentation, interpreted according to mimeType.
        The content may not exceed 8,192 Unicode characters and may not
        exceed more than 10,240 bytes when encoded in UTF-8 format,
        whichever is smaller.
    mimeType : str, default is Undefined, optional
        The format of the content field. Presently, only the value
        "text/markdown" is supported.
    """


    content?: str

    mimeType?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicySpecNotificationChannelsItems0:
    r"""
    Identifies the notification channels to which notifications should be sent when incidents are opened or closed or when new violations occur on an already opened incident.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `MonitoringNotificationChannel` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicyStatus:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy status

    Attributes
    ----------
    conditions : [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicyStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    creationRecord : [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicyStatusCreationRecordItems0], default is Undefined, optional
        A read-only record of the creation of the alerting policy.
        If provided in a call to create or update, this field will
        be ignored.
    name : str, default is Undefined, optional
        The unique resource name for this policy.
        Its syntax is: projects/[PROJECT_ID]/alertPolicies/[ALERT_POLICY_ID].
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    """


    conditions?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicyStatusConditionsItems0]

    creationRecord?: [MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicyStatusCreationRecordItems0]

    name?: str

    observedGeneration?: int


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicyStatusConditionsItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


schema MonitoringCnrmCloudGoogleComV1beta1MonitoringAlertPolicyStatusCreationRecordItems0:
    r"""
    monitoring cnrm cloud google com v1beta1 monitoring alert policy status creation record items0

    Attributes
    ----------
    mutateTime : str, default is Undefined, optional
        When the change occurred.
    mutatedBy : str, default is Undefined, optional
        The email address of the user making the change.
    """


    mutateTime?: str

    mutatedBy?: str


