"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BigQueryTable:
    r"""
    BigQueryTable is the Schema for the BigQueryTable API

    Attributes
    ----------
    apiVersion : str, default is "bigquery.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BigQueryTable", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpec, default is Undefined, required
        spec
    status : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatus, default is Undefined, optional
        status
    """


    apiVersion: "bigquery.cnrm.cloud.google.com/v1beta1" = "bigquery.cnrm.cloud.google.com/v1beta1"

    kind: "BigQueryTable" = "BigQueryTable"

    metadata?: v1.ObjectMeta

    spec: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpec

    status?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatus


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpec:
    r"""
    BigQueryTableSpec defines the desired state of BigQueryTable

    Attributes
    ----------
    clustering : [str], default is Undefined, optional
        Clustering specification for the table. Must be specified with time-based partitioning, data in the table will be first partitioned and subsequently clustered.
    datasetRef : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecDatasetRef, default is Undefined, required
        dataset ref
    description : str, default is Undefined, optional
        A user-friendly description of this table.
    encryptionConfiguration : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfiguration, default is Undefined, optional
        encryption configuration
    expirationTime : int, default is Undefined, optional
        The time when this table expires, in milliseconds since the epoch. If not present, the table will persist indefinitely. Expired tables will be deleted and their storage reclaimed.  The defaultTableExpirationMs property of the encapsulating dataset can be used to set a default expirationTime on newly created tables.
    externalDataConfiguration : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfiguration, default is Undefined, optional
        external data configuration
    friendlyName : str, default is Undefined, optional
        A descriptive name for this table.
    labels : {str:str}, default is Undefined, optional
        When using `alpha.cnrm.cloud.google.com/reconciler:direct` annotion, use labels field to set the labels for this resource on GCP. Otherwise, use .metadata.labels. Please refer to https://github.com/GoogleCloudPlatform/k8s-config-connector/issues/4274 for context. The labels associated with this table. You can use these to organize and group your tables. Label keys and values can be no longer than 63 characters, can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. Label values are optional. Label keys must start with a letter and each label in the list must have a different key.
    materializedView : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecMaterializedView, default is Undefined, optional
        materialized view
    maxStaleness : str, default is Undefined, optional
        The maximum staleness of data that could be returned when the table (or stale MV) is queried. Staleness encoded as a string encoding of sql IntervalValue type.
    rangePartitioning : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioning, default is Undefined, optional
        range partitioning
    requirePartitionFilter : bool, default is Undefined, optional
        If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified.
    resourceID : str, default is Undefined, optional
        The BigQueryTable name. If not given, the metadata.name will be used.
    $schema : str, default is Undefined, optional
        Describes the schema of this table.
    tableConstraints : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraints, default is Undefined, optional
        table constraints
    timePartitioning : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTimePartitioning, default is Undefined, optional
        time partitioning
    view : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecView, default is Undefined, optional
        view
    """


    clustering?: [str]

    datasetRef: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecDatasetRef

    description?: str

    encryptionConfiguration?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfiguration

    expirationTime?: int

    externalDataConfiguration?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfiguration

    friendlyName?: str

    labels?: {str:str}

    materializedView?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecMaterializedView

    maxStaleness?: str

    rangePartitioning?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioning

    requirePartitionFilter?: bool

    resourceID?: str

    $schema?: str

    tableConstraints?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraints

    timePartitioning?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTimePartitioning

    view?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecView


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecDatasetRef:
    r"""
    DatasetRef defines the resource reference to BigQueryDataset, which "External" field holds the GCP identifier for the KRM object.

    Attributes
    ----------
    external : str, default is Undefined, optional
        A reference to an externally managed BigQueryDataset resource. Should be in the format "projects/<projectID>/datasets/<datasetID>".
    name : str, default is Undefined, optional
        The name of a BigQueryDataset resource.
    namespace : str, default is Undefined, optional
        The namespace of a BigQueryDataset resource.
    """


    external?: str

    name?: str

    namespace?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfiguration:
    r"""
    Custom encryption configuration (e.g., Cloud KMS keys).

    Attributes
    ----------
    kmsKeyRef : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfigurationKmsKeyRef, default is Undefined, required
        kms key ref
    kmsKeyVersion : str, default is Undefined, optional
        DEPRECATED. // The table will be encrypted with the primary version of Cloud KMS encryption key. // The self link or full name of the kms key version used to encrypt this table.
    """


    kmsKeyRef: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfigurationKmsKeyRef

    kmsKeyVersion?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecEncryptionConfigurationKmsKeyRef:
    r"""
    Describes the Cloud KMS encryption key that will be used to protect destination BigQuery table. The BigQuery Service Account associated with your project requires access to this encryption key.

    Attributes
    ----------
    external : str, default is Undefined, optional
        A reference to an externally managed KMSCryptoKey. Should be in the format `projects/[kms_project_id]/locations/[region]/keyRings/[key_ring_id]/cryptoKeys/[key]`.
    name : str, default is Undefined, optional
        The `name` of a `KMSCryptoKey` resource.
    namespace : str, default is Undefined, optional
        The `namespace` of a `KMSCryptoKey` resource.
    """


    external?: str

    name?: str

    namespace?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfiguration:
    r"""
    Describes the data format, location, and other properties of a table stored outside of BigQuery. By defining these properties, the data source can then be queried as if it were a standard BigQuery table.

    Attributes
    ----------
    autodetect : bool, default is Undefined, required
        Try to detect schema and format options automatically. Any option specified explicitly will be honored.
    avroOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationAvroOptions, default is Undefined, optional
        avro options
    compression : str, default is Undefined, optional
        The compression type of the data source. Possible values include GZIP and NONE. The default value is NONE. This setting is ignored for Google Cloud Bigtable, Google Cloud Datastore backups, Avro, ORC and Parquet formats. An empty string is an invalid value.
    connectionId : str, default is Undefined, optional
        The connection specifying the credentials to be used to read external storage, such as Azure Blob, Cloud Storage, or S3. The connection_id can have the form `{project_id}.{location_id};{connection_id}` or `projects/{project_id}/locations/{location_id}/connections/{connection_id}`.
    csvOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationCsvOptions, default is Undefined, optional
        csv options
    fileSetSpecType : str, default is Undefined, optional
        Specifies how source URIs are interpreted for constructing the file set to load.  By default source URIs are expanded against the underlying storage.  Other options include specifying manifest files. Only applicable to object storage systems.
    googleSheetsOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationGoogleSheetsOptions, default is Undefined, optional
        google sheets options
    hivePartitioningOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationHivePartitioningOptions, default is Undefined, optional
        hive partitioning options
    ignoreUnknownValues : bool, default is Undefined, optional
        Indicates if BigQuery should allow extra values that are not represented in the table schema. If true, the extra values are ignored. If false, records with extra columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false. The sourceFormat property determines what BigQuery treats as an extra value: CSV: Trailing columns JSON: Named values that don't match any column names Google Cloud Bigtable: This setting is ignored. Google Cloud Datastore backups: This setting is ignored. Avro: This setting is ignored. ORC: This setting is ignored. Parquet: This setting is ignored.
    jsonOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationJSONOptions, default is Undefined, optional
        json options
    maxBadRecords : int, default is Undefined, optional
        The maximum number of bad records that BigQuery can ignore when reading data. If the number of bad records exceeds this value, an invalid error is returned in the job result. The default value is 0, which requires that all records are valid. This setting is ignored for Google Cloud Bigtable, Google Cloud Datastore backups, Avro, ORC and Parquet formats.
    metadataCacheMode : str, default is Undefined, optional
        Metadata Cache Mode for the table. Set this to enable caching of metadata from external data source.
    objectMetadata : str, default is Undefined, optional
        ObjectMetadata is used to create Object Tables. Object Tables
         contain a listing of objects (with their metadata) found at the
         source_uris. If ObjectMetadata is set, source_format should be omitted.

         Currently SIMPLE is the only supported Object Metadata type.
    parquetOptions : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationParquetOptions, default is Undefined, optional
        parquet options
    referenceFileSchemaUri : str, default is Undefined, optional
        When creating an external table, the user can provide a reference file with the table schema. This is enabled for the following formats: AVRO, PARQUET, ORC.
    $schema : str, default is Undefined, optional
        The schema for the data. Schema is required for CSV and JSON formats if autodetect is not on. Schema is disallowed for Google Cloud Bigtable, Cloud Datastore backups, Avro, ORC and Parquet formats.
    sourceFormat : str, default is Undefined, optional
        Please see sourceFormat under ExternalDataConfiguration in Bigquery's public API documentation (https://cloud.google.com/bigquery/docs/reference/rest/v2/tables#externaldataconfiguration) for supported formats. To use "GOOGLE_SHEETS" the scopes must include "googleapis.com/auth/drive.readonly".
    sourceUris : [str], default is Undefined, required
        A list of the fully-qualified URIs that point to	your data in Google Cloud.
    """


    autodetect: bool

    avroOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationAvroOptions

    compression?: str

    connectionId?: str

    csvOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationCsvOptions

    fileSetSpecType?: str

    googleSheetsOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationGoogleSheetsOptions

    hivePartitioningOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationHivePartitioningOptions

    ignoreUnknownValues?: bool

    jsonOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationJSONOptions

    maxBadRecords?: int

    metadataCacheMode?: str

    objectMetadata?: str

    parquetOptions?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationParquetOptions

    referenceFileSchemaUri?: str

    $schema?: str

    sourceFormat?: str

    sourceUris: [str]


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationAvroOptions:
    r"""
    Additional properties to set if sourceFormat is set to AVRO.

    Attributes
    ----------
    useAvroLogicalTypes : bool, default is Undefined, required
        If sourceFormat is set to "AVRO", indicates whether to interpret logical types as the corresponding BigQuery data type (for example, TIMESTAMP), instead of using the raw type (for example, INTEGER).
    """


    useAvroLogicalTypes: bool


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationCsvOptions:
    r"""
    Additional properties to set if sourceFormat is set to CSV.

    Attributes
    ----------
    allowJaggedRows : bool, default is Undefined, optional
        Indicates if BigQuery should accept rows that are missing trailing optional columns. If true, BigQuery treats missing trailing columns as null values. If false, records with missing trailing columns are treated as bad records, and if there are too many bad records, an invalid error is returned in the job result. The default value is false.
    allowQuotedNewlines : bool, default is Undefined, optional
        Indicates if BigQuery should allow quoted data sections that contain newline characters in a CSV file. The default value is false.
    encoding : str, default is Undefined, optional
        The character encoding of the data. The supported values are UTF-8, ISO-8859-1, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE.  The default value is UTF-8. BigQuery decodes the data after the raw, binary data has been split using the values of the quote and fieldDelimiter properties.
    fieldDelimiter : str, default is Undefined, optional
        The separator character for fields in a CSV file. The separator is interpreted as a single byte. For files encoded in ISO-8859-1, any single character can be used as a separator. For files encoded in UTF-8, characters represented in decimal range 1-127 (U+0001-U+007F) can be used without any modification. UTF-8 characters encoded with multiple bytes (i.e. U+0080 and above) will have only the first byte used for separating fields. The remaining bytes will be treated as a part of the field. BigQuery also supports the escape sequence "\t" (U+0009) to specify a tab separator. The default value is comma (",", U+002C).
    quote : str, default is Undefined, required
        The value that is used to quote data sections in a CSV file. BigQuery converts the string to ISO-8859-1 encoding, and then uses the first byte of the encoded string to split the data in its raw, binary state. The default value is a double-quote ("). If your data does not contain quoted sections, set the property value to an empty string. If your data contains quoted newline characters, you must also set the allowQuotedNewlines property to true. To include the specific quote character within a quoted value, precede it with an additional matching quote character. For example, if you want to escape the default character  ' " ', use ' "" '.
    skipLeadingRows : int, default is Undefined, optional
        The number of rows at the top of a CSV file that BigQuery will
         skip when reading the data. The default value is 0. This property is
         useful if you have header rows in the file that should be skipped.
         When autodetect is on, the behavior is the following:

         * skipLeadingRows unspecified - Autodetect tries to detect headers in the
           first row. If they are not detected, the row is read as data. Otherwise
           data is read starting from the second row.
         * skipLeadingRows is 0 - Instructs autodetect that there are no headers and
           data should be read starting from the first row.
         * skipLeadingRows = N > 0 - Autodetect skips N-1 rows and tries to detect
           headers in row N. If headers are not detected, row N is just skipped.
           Otherwise row N is used to extract column names for the detected schema.
    """


    allowJaggedRows?: bool

    allowQuotedNewlines?: bool

    encoding?: str

    fieldDelimiter?: str

    quote: str

    skipLeadingRows?: int


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationGoogleSheetsOptions:
    r"""
    Additional options if sourceFormat is set to GOOGLE_SHEETS.

    Attributes
    ----------
    range : str, default is Undefined, optional
        Range of a sheet to query from. Only used when non-empty. Typical format: sheet_name!top_left_cell_id:bottom_right_cell_id For example: sheet1!A1:B20
    skipLeadingRows : int, default is Undefined, optional
        The number of rows at the top of a sheet that BigQuery will skip when reading the data. The default value is 0. This property is useful if you have header rows that should be skipped. When autodetect is on, the behavior is the following: * skipLeadingRows unspecified - Autodetect tries to detect headers in the first row. If they are not detected, the row is read as data. Otherwise data is read starting from the second row. * skipLeadingRows is 0 - Instructs autodetect that there are no headers and data should be read starting from the first row. * skipLeadingRows = N > 0 - Autodetect skips N-1 rows and tries to detect headers in row N. If headers are not detected, row N is just skipped. Otherwise row N is used to extract column names for the detected schema.
    """


    range?: str

    skipLeadingRows?: int


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationHivePartitioningOptions:
    r"""
    When set, configures hive partitioning support. Not all storage formats support hive partitioning -- requesting hive partitioning on an unsupported format will lead to an error, as will providing an invalid specification.

    Attributes
    ----------
    mode : str, default is Undefined, optional
        When set, what mode of hive partitioning to use when reading
         data.  The following modes are supported:

         * AUTO: automatically infer partition key name(s) and type(s).

         * STRINGS: automatically infer partition key name(s).  All types are
         strings.

         * CUSTOM: partition key schema is encoded in the source URI prefix.

         Not all storage formats support hive partitioning. Requesting hive
         partitioning on an unsupported format will lead to an error.
         Currently supported formats are: JSON, CSV, ORC, Avro and Parquet.
    requirePartitionFilter : bool, default is Undefined, optional
        If set to true, queries over this table require a partition
         filter that can be used for partition elimination to be specified.

         Note that this field should only be true when creating a permanent
         external table or querying a temporary external table.

         Hive-partitioned loads with require_partition_filter explicitly set to
         true will fail.
    sourceUriPrefix : str, default is Undefined, optional
        When hive partition detection is requested, a common prefix for
         all source uris must be required.  The prefix must end immediately before
         the partition key encoding begins. For example, consider files following
         this data layout:

         gs://bucket/path_to_table/dt=2019-06-01/country=USA/id=7/file.avro

         gs://bucket/path_to_table/dt=2019-05-31/country=CA/id=3/file.avro

         When hive partitioning is requested with either AUTO or STRINGS detection,
         the common prefix can be either of gs://bucket/path_to_table or
         gs://bucket/path_to_table/.

         CUSTOM detection requires encoding the partitioning schema immediately
         after the common prefix.  For CUSTOM, any of

         * gs://bucket/path_to_table/{dt:DATE}/{country:STRING}/{id:INTEGER}

         * gs://bucket/path_to_table/{dt:STRING}/{country:STRING}/{id:INTEGER}

         * gs://bucket/path_to_table/{dt:DATE}/{country:STRING}/{id:STRING}

         would all be valid source URI prefixes.
    """


    mode?: str

    requirePartitionFilter?: bool

    sourceUriPrefix?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationJSONOptions:
    r"""
    Additional properties to set if sourceFormat is set to JSON.

    Attributes
    ----------
    encoding : str, default is Undefined, optional
        The character encoding of the data. The supported values are UTF-8, UTF-16BE, UTF-16LE, UTF-32BE, and UTF-32LE.  The default value is UTF-8.
    """


    encoding?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecExternalDataConfigurationParquetOptions:
    r"""
    Additional properties to set if sourceFormat is set to PARQUET.

    Attributes
    ----------
    enableListInference : bool, default is Undefined, optional
        Indicates whether to use schema inference specifically for Parquet LIST logical type.
    enumAsString : bool, default is Undefined, optional
        Indicates whether to infer Parquet ENUM logical type as STRING instead of BYTES by default.
    """


    enableListInference?: bool

    enumAsString?: bool


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecMaterializedView:
    r"""
    The materialized view definition.

    Attributes
    ----------
    allowNonIncrementalDefinition : bool, default is Undefined, optional
        This option declares the intention to construct a materialized view that isn't refreshed incrementally.
    enableRefresh : bool, default is Undefined, optional
        Enable automatic refresh of the materialized view when the base table is updated. The default value is "true".
    query : str, default is Undefined, required
        Required. A query whose results are persisted.
    refreshIntervalMs : int, default is Undefined, optional
        The maximum frequency at which this materialized view will be refreshed. The default value is "1800000" (30 minutes).
    """


    allowNonIncrementalDefinition?: bool

    enableRefresh?: bool

    query: str

    refreshIntervalMs?: int


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioning:
    r"""
    If specified, configures range partitioning for this table.

    Attributes
    ----------
    field : str, default is Undefined, required
        Required. The name of the column to partition the table on. It must be a top-level, INT64 column whose mode is NULLABLE or REQUIRED.
    range : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioningRange, default is Undefined, required
        range
    """


    field: str

    range: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioningRange


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecRangePartitioningRange:
    r"""
    Defines the ranges for range partitioning.

    Attributes
    ----------
    end : int, default is Undefined, required
        Required. The end of range partitioning, exclusive.
    interval : int, default is Undefined, required
        Required. The width of each interval.
    start : int, default is Undefined, required
        Immutable. The start of range partitioning, inclusive.
    """


    end: int

    interval: int

    start: int


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraints:
    r"""
    Tables Primary Key and Foreign Key information

    Attributes
    ----------
    foreignKeys : [BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsForeignKeysItems0], default is Undefined, optional
        Present only if the table has a foreign key. The foreign key is not enforced.
    primaryKey : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsPrimaryKey, default is Undefined, optional
        primary key
    """


    foreignKeys?: [BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsForeignKeysItems0]

    primaryKey?: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsPrimaryKey


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsForeignKeysItems0:
    r"""
    bigquery cnrm cloud google com v1beta1 big query table spec table constraints foreign keys items0

    Attributes
    ----------
    columnReferences : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsForeignKeysItems0ColumnReferences, default is Undefined, required
        column references
    name : str, default is Undefined, optional
        Optional. Set only if the foreign key constraint is named.
    referencedTable : BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsForeignKeysItems0ReferencedTable, default is Undefined, required
        referenced table
    """


    columnReferences: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsForeignKeysItems0ColumnReferences

    name?: str

    referencedTable: BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsForeignKeysItems0ReferencedTable


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsForeignKeysItems0ColumnReferences:
    r"""
    Required. The columns that compose the foreign key.

    Attributes
    ----------
    referencedColumn : str, default is Undefined, required
        Required. The column in the primary key that are referenced by the referencing_column.
    referencingColumn : str, default is Undefined, required
        Required. The column that composes the foreign key.
    """


    referencedColumn: str

    referencingColumn: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsForeignKeysItems0ReferencedTable:
    r"""
    Required. The table that holds the primary key and is referenced by this foreign key.

    Attributes
    ----------
    datasetId : str, default is Undefined, required
        The ID of the dataset containing this table.
    projectId : str, default is Undefined, required
        The ID of the project containing this table.
    tableId : str, default is Undefined, required
        The Id of the table. The Id can contain Unicode characters in category L (letter), M (mark), N (number), Pc (connector, including underscore), Pd (dash), and Zs (space). For more information, see [General Category](https://wikipedia.org/wiki/Unicode_character_property#General_Category). The maximum length is 1,024 characters.  Certain operations allow suffixing of the table Id with a partition decorator, such as `sample_table$20190123`.
    """


    datasetId: str

    projectId: str

    tableId: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTableConstraintsPrimaryKey:
    r"""
    Represents a primary key constraint on a table's columns. Present only if the table has a primary key. The primary key is not enforced.

    Attributes
    ----------
    columns : [str], default is Undefined, required
        Required. The columns that are composed of the primary key constraint.
    """


    columns: [str]


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecTimePartitioning:
    r"""
    If specified, configures time-based partitioning for this table.

    Attributes
    ----------
    expirationMs : int, default is Undefined, optional
        Number of milliseconds for which to keep the storage for a partition. A wrapper is used here because 0 is an invalid value.
    field : str, default is Undefined, optional
        Optional. Immutable. If not set, the table is partitioned by pseudo column '_PARTITIONTIME'; if set, the table is partitioned by this field. The field must be a top-level TIMESTAMP or DATE field. Its mode must be NULLABLE or REQUIRED. A wrapper is used here because an empty string is an invalid value.
    requirePartitionFilter : bool, default is Undefined, optional
        DEPRECATED. This field is deprecated; please use the top level field with the same name instead. If set to true, queries over this table require a partition filter that can be used for partition elimination to be specified.
    $type : str, default is Undefined, required
        Required. The supported types are DAY, HOUR, MONTH, and YEAR, which will generate one partition per day, hour, month, and year, respectively.
    """


    expirationMs?: int

    field?: str

    requirePartitionFilter?: bool

    $type: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableSpecView:
    r"""
    The view definition.

    Attributes
    ----------
    query : str, default is Undefined, required
        Required. A query that BigQuery executes when the view is referenced.
    useLegacySql : bool, default is Undefined, optional
        Specifies whether to use BigQuery's legacy SQL for this view.
         The default value is true. If set to false, the view will use
         BigQuery's GoogleSQL:
         https://cloud.google.com/bigquery/sql-reference/

         Queries and views that reference this view must use the same flag value.
         A wrapper is used here because the default value is True.
    """


    query: str

    useLegacySql?: bool


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatus:
    r"""
    BigQueryTableStatus defines the config connector machine state of BigQueryTable

    Attributes
    ----------
    conditions : [BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observations of the object's current state.
    creationTime : int, default is Undefined, optional
        Output only. The time when this table was created, in milliseconds since the epoch.
    etag : str, default is Undefined, optional
        Output only. A hash of this resource.
    externalRef : str, default is Undefined, optional
        A unique specifier for the BigQueryTable resource in GCP.
    lastModifiedTime : int, default is Undefined, optional
        Output only. The time when this table was last modified, in milliseconds since the epoch.
    location : str, default is Undefined, optional
        Output only. The geographic location where the table resides. This value is inherited from the dataset.
    numBytes : int, default is Undefined, optional
        Output only. The size of this table in logical bytes, excluding any data in the streaming buffer.
    numLongTermBytes : int, default is Undefined, optional
        Output only. The number of logical bytes in the table that are considered "long-term storage".
    numRows : int, default is Undefined, optional
        Output only. The number of rows of data in this table, excluding any data in the streaming buffer.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    observedState : any, default is Undefined, optional
        ObservedState is the state of the resource as most recently observed in GCP.
    selfLink : str, default is Undefined, optional
        Output only. A URL that can be used to access this resource again.
    $type : str, default is Undefined, optional
        Output only. Describes the table type. The following values are supported:

         * `TABLE`: A normal BigQuery table.
         * `VIEW`: A virtual table defined by a SQL query.
         * `EXTERNAL`: A table that references data stored in an external storage
           system, such as Google Cloud Storage.
         * `MATERIALIZED_VIEW`: A precomputed view defined by a SQL query.
         * `SNAPSHOT`: An immutable BigQuery table that preserves the contents of a
           base table at a particular time. See additional information on
           [table
           snapshots](https://cloud.google.com/bigquery/docs/table-snapshots-intro).

         The default value is `TABLE`.
    """


    conditions?: [BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatusConditionsItems0]

    creationTime?: int

    etag?: str

    externalRef?: str

    lastModifiedTime?: int

    location?: str

    numBytes?: int

    numLongTermBytes?: int

    numRows?: int

    observedGeneration?: int

    observedState?: any

    selfLink?: str

    $type?: str


schema BigqueryCnrmCloudGoogleComV1beta1BigQueryTableStatusConditionsItems0:
    r"""
    bigquery cnrm cloud google com v1beta1 big query table status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


