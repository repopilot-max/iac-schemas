"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DataprocCluster:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster

    Attributes
    ----------
    apiVersion : str, default is "dataproc.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DataprocCluster", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpec, default is Undefined, required
        spec
    status : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatus, default is Undefined, optional
        status
    """


    apiVersion: "dataproc.cnrm.cloud.google.com/v1beta1" = "dataproc.cnrm.cloud.google.com/v1beta1"

    kind: "DataprocCluster" = "DataprocCluster"

    metadata?: v1.ObjectMeta

    spec: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpec

    status?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatus


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpec:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster spec

    Attributes
    ----------
    config : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfig, default is Undefined, optional
        config
    location : str, default is Undefined, required
        Immutable. The location for the resource, usually a GCP region.
    projectRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecProjectRef, default is Undefined, optional
        project ref
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    virtualClusterConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfig, default is Undefined, optional
        virtual cluster config
    """


    config?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfig

    location: str

    projectRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecProjectRef

    resourceID?: str

    virtualClusterConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfig


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfig:
    r"""
    Immutable. The cluster config. Note that Dataproc may set default values, and values may change when clusters are updated.

    Attributes
    ----------
    autoscalingConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigAutoscalingConfig, default is Undefined, optional
        autoscaling config
    dataprocMetricConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigDataprocMetricConfig, default is Undefined, optional
        dataproc metric config
    encryptionConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigEncryptionConfig, default is Undefined, optional
        encryption config
    endpointConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigEndpointConfig, default is Undefined, optional
        endpoint config
    gceClusterConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfig, default is Undefined, optional
        gce cluster config
    initializationActions : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigInitializationActionsItems0], default is Undefined, optional
        Immutable. Optional. Commands to execute on each node after config is completed. By default, executables are run on master and all worker nodes. You can test a node's `role` metadata to run an executable on a master or worker node, as shown below using `curl` (you can also use `wget`): ROLE=$(curl -H Metadata-Flavor:Google http://metadata/computeMetadata/v1/instance/attributes/dataproc-role) if [[ "${ROLE}" == 'Master' ]]; then ... master specific actions ... else ... worker specific actions ... fi
    lifecycleConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigLifecycleConfig, default is Undefined, optional
        lifecycle config
    masterConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfig, default is Undefined, optional
        master config
    metastoreConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMetastoreConfig, default is Undefined, optional
        metastore config
    secondaryWorkerConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfig, default is Undefined, optional
        secondary worker config
    securityConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfig, default is Undefined, optional
        security config
    softwareConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSoftwareConfig, default is Undefined, optional
        software config
    stagingBucketRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigStagingBucketRef, default is Undefined, optional
        staging bucket ref
    tempBucketRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigTempBucketRef, default is Undefined, optional
        temp bucket ref
    workerConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfig, default is Undefined, optional
        worker config
    """


    autoscalingConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigAutoscalingConfig

    dataprocMetricConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigDataprocMetricConfig

    encryptionConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigEncryptionConfig

    endpointConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigEndpointConfig

    gceClusterConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfig

    initializationActions?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigInitializationActionsItems0]

    lifecycleConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigLifecycleConfig

    masterConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfig

    metastoreConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMetastoreConfig

    secondaryWorkerConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfig

    securityConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfig

    softwareConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSoftwareConfig

    stagingBucketRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigStagingBucketRef

    tempBucketRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigTempBucketRef

    workerConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfig


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigAutoscalingConfig:
    r"""
    Immutable. Optional. Autoscaling config for the policy associated with the cluster. Cluster does not autoscale if this field is unset.

    Attributes
    ----------
    policyRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigAutoscalingConfigPolicyRef, default is Undefined, optional
        policy ref
    """


    policyRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigAutoscalingConfigPolicyRef


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigAutoscalingConfigPolicyRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. The autoscaling policy used by the cluster. Only resource names including projectid and location (region) are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]` * `projects/[project_id]/locations/[dataproc_region]/autoscalingPolicies/[policy_id]` Note that the policy must be in the same project and Dataproc region.

        Allowed value: The Google Cloud resource name of a `DataprocAutoscalingPolicy` resource (format: `projects/{{project}}/locations/{{location}}/autoscalingPolicies/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigDataprocMetricConfig:
    r"""
    Immutable. Optional. The config for Dataproc metrics.

    Attributes
    ----------
    metrics : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigDataprocMetricConfigMetricsItems0], default is Undefined, required
        Immutable. Required. Metrics sources to enable.
    """


    metrics: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigDataprocMetricConfigMetricsItems0]


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigDataprocMetricConfigMetricsItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster spec config dataproc metric config metrics items0

    Attributes
    ----------
    metricOverrides : [str], default is Undefined, optional
        Immutable. Optional. Specify one or more [available OSS metrics] (https://cloud.google.com/dataproc/docs/guides/monitoring#available_oss_metrics) to collect for the metric course (for the `SPARK` metric source, any [Spark metric] (https://spark.apache.org/docs/latest/monitoring.html#metrics) can be specified). Provide metrics in the following format: `METRIC_SOURCE:INSTANCE:GROUP:METRIC` Use camelcase as appropriate. Examples: ``` yarn:ResourceManager:QueueMetrics:AppsCompleted spark:driver:DAGScheduler:job.allJobs sparkHistoryServer:JVM:Memory:NonHeapMemoryUsage.committed hiveserver2:JVM:Memory:NonHeapMemoryUsage.used ``` Notes: * Only the specified overridden metrics will be collected for the metric source. For example, if one or more `spark:executive` metrics are listed as metric overrides, other `SPARK` metrics will not be collected. The collection of the default metrics for other OSS metric sources is unaffected. For example, if both `SPARK` andd `YARN` metric sources are enabled, and overrides are provided for Spark metrics only, all default YARN metrics will be collected.
    metricSource : str, default is Undefined, required
        Immutable. Required. Default metrics are collected unless `metricOverrides` are specified for the metric source (see [Available OSS metrics] (https://cloud.google.com/dataproc/docs/guides/monitoring#available_oss_metrics) for more information). Possible values: METRIC_SOURCE_UNSPECIFIED, MONITORING_AGENT_DEFAULTS, HDFS, SPARK, YARN, SPARK_HISTORY_SERVER, HIVESERVER2
    """


    metricOverrides?: [str]

    metricSource: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigEncryptionConfig:
    r"""
    Immutable. Optional. Encryption settings for the cluster.

    Attributes
    ----------
    gcePdKmsKeyRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef, default is Undefined, optional
        gce pd kms key ref
    """


    gcePdKmsKeyRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigEncryptionConfigGcePdKmsKeyRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. The Cloud KMS key name to use for PD disk encryption for all instances in the cluster.

        Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigEndpointConfig:
    r"""
    Immutable. Optional. Port/endpoint configuration for this cluster

    Attributes
    ----------
    enableHttpPortAccess : bool, default is Undefined, optional
        Immutable. Optional. If true, enable http access to specific ports on the cluster from external sources. Defaults to false.
    """


    enableHttpPortAccess?: bool


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfig:
    r"""
    Immutable. Optional. The shared Compute Engine config settings for all instances in a cluster.

    Attributes
    ----------
    confidentialInstanceConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig, default is Undefined, optional
        confidential instance config
    internalIPOnly : bool, default is Undefined, optional
        Immutable. Optional. If true, all instances in the cluster will only have internal IP addresses. By default, clusters are not restricted to internal IP addresses, and will have ephemeral external IP addresses assigned to each instance. This `internal_ip_only` restriction can only be enabled for subnetwork enabled networks, and all off-cluster dependencies must be configured to be accessible without external IP addresses.
    metadata : {str:str}, default is Undefined, optional
        Immutable. The Compute Engine metadata entries to add to all instances (see [Project and instance metadata](https://cloud.google.com/compute/docs/storing-retrieving-metadata#project_and_instance_metadata)).
    networkRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigNetworkRef, default is Undefined, optional
        network ref
    nodeGroupAffinity : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity, default is Undefined, optional
        node group affinity
    privateIPv6GoogleAccess : str, default is Undefined, optional
        Immutable. Optional. The type of IPv6 access for a cluster. Possible values: PRIVATE_IPV6_GOOGLE_ACCESS_UNSPECIFIED, INHERIT_FROM_SUBNETWORK, OUTBOUND, BIDIRECTIONAL
    reservationAffinity : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigReservationAffinity, default is Undefined, optional
        reservation affinity
    serviceAccountRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigServiceAccountRef, default is Undefined, optional
        service account ref
    serviceAccountScopes : [str], default is Undefined, optional
        Immutable. Optional. The URIs of service account scopes to be included in Compute Engine instances. The following base set of scopes is always included: * https://www.googleapis.com/auth/cloud.useraccounts.readonly * https://www.googleapis.com/auth/devstorage.read_write * https://www.googleapis.com/auth/logging.write If no scopes are specified, the following defaults are also provided: * https://www.googleapis.com/auth/bigquery * https://www.googleapis.com/auth/bigtable.admin.table * https://www.googleapis.com/auth/bigtable.data * https://www.googleapis.com/auth/devstorage.full_control
    shieldedInstanceConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig, default is Undefined, optional
        shielded instance config
    subnetworkRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigSubnetworkRef, default is Undefined, optional
        subnetwork ref
    tags : [str], default is Undefined, optional
        Immutable. The Compute Engine tags to add to all instances (see [Tagging instances](https://cloud.google.com/compute/docs/label-or-tag-resources#tags)).
    zone : str, default is Undefined, optional
        Immutable. Optional. The zone where the Compute Engine cluster will be located. On a create request, it is required in the "global" region. If omitted in a non-global Dataproc region, the service will pick a zone in the corresponding Compute Engine region. On a get request, zone will always be present. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/[zone]` * `projects/[project_id]/zones/[zone]` * `us-central1-f`
    """


    confidentialInstanceConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig

    internalIPOnly?: bool

    metadata?: {str:str}

    networkRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigNetworkRef

    nodeGroupAffinity?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity

    privateIPv6GoogleAccess?: str

    reservationAffinity?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigReservationAffinity

    serviceAccountRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigServiceAccountRef

    serviceAccountScopes?: [str]

    shieldedInstanceConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig

    subnetworkRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigSubnetworkRef

    tags?: [str]

    zone?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigConfidentialInstanceConfig:
    r"""
    Immutable. Optional. Confidential Instance Config for clusters using [Confidential VMs](https://cloud.google.com/compute/confidential-vm/docs).

    Attributes
    ----------
    enableConfidentialCompute : bool, default is Undefined, optional
        Immutable. Optional. Defines whether the instance should have confidential compute enabled.
    """


    enableConfidentialCompute?: bool


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigNetworkRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. The Compute Engine network to be used for machine communications. Cannot be specified with subnetwork_uri. If neither `network_uri` nor `subnetwork_uri` is specified, the "default" network of the project is used, if it exists. Cannot be a "Custom Subnet Network" (see [Using Subnetworks](https://cloud.google.com/compute/docs/subnetworks) for more information). A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/global/default` * `projects/[project_id]/regions/global/default` * `default`

        Allowed value: The `selfLink` field of a `ComputeNetwork` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinity:
    r"""
    Immutable. Optional. Node Group Affinity for sole-tenant clusters.

    Attributes
    ----------
    nodeGroupRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef, default is Undefined, required
        node group ref
    """


    nodeGroupRef: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigNodeGroupAffinityNodeGroupRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Required. The URI of a sole-tenant [node group resource](https://cloud.google.com/compute/docs/reference/rest/v1/nodeGroups) that the cluster will be created on. A full URL, partial URI, or node group name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1` * `projects/[project_id]/zones/us-central1-a/nodeGroups/node-group-1` * `node-group-1`

        Allowed value: The `selfLink` field of a `ComputeNodeGroup` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigReservationAffinity:
    r"""
    Immutable. Optional. Reservation Affinity for consuming Zonal reservation.

    Attributes
    ----------
    consumeReservationType : str, default is Undefined, optional
        Immutable. Optional. Type of reservation to consume Possible values: TYPE_UNSPECIFIED, NO_RESERVATION, ANY_RESERVATION, SPECIFIC_RESERVATION
    key : str, default is Undefined, optional
        Immutable. Optional. Corresponds to the label key of reservation resource.
    values : [str], default is Undefined, optional
        Immutable. Optional. Corresponds to the label values of reservation resource.
    """


    consumeReservationType?: str

    key?: str

    values?: [str]


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigServiceAccountRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. The [Dataproc service account](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/service-accounts#service_accounts_in_dataproc) (also see [VM Data Plane identity](https://cloud.google.com/dataproc/docs/concepts/iam/dataproc-principals#vm_service_account_data_plane_identity)) used by Dataproc cluster VM instances to access Google Cloud Platform services. If not specified, the [Compute Engine default service account](https://cloud.google.com/compute/docs/access/service-accounts#default_service_account) is used.

        Allowed value: The `email` field of an `IAMServiceAccount` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigShieldedInstanceConfig:
    r"""
    Immutable. Optional. Shielded Instance Config for clusters using [Compute Engine Shielded VMs](https://cloud.google.com/security/shielded-cloud/shielded-vm).

    Attributes
    ----------
    enableIntegrityMonitoring : bool, default is Undefined, optional
        Immutable. Optional. Defines whether instances have integrity monitoring enabled.
    enableSecureBoot : bool, default is Undefined, optional
        Immutable. Optional. Defines whether instances have Secure Boot enabled.
    enableVtpm : bool, default is Undefined, optional
        Immutable. Optional. Defines whether instances have the vTPM enabled.
    """


    enableIntegrityMonitoring?: bool

    enableSecureBoot?: bool

    enableVtpm?: bool


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigGceClusterConfigSubnetworkRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. The Compute Engine subnetwork to be used for machine communications. Cannot be specified with network_uri. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/regions/us-east1/subnetworks/sub0` * `projects/[project_id]/regions/us-east1/subnetworks/sub0` * `sub0`

        Allowed value: The `selfLink` field of a `ComputeSubnetwork` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigInitializationActionsItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster spec config initialization actions items0

    Attributes
    ----------
    executableFile : str, default is Undefined, required
        Immutable. Required. Cloud Storage URI of executable file.
    executionTimeout : str, default is Undefined, optional
        Immutable. Optional. Amount of time executable has to complete. Default is 10 minutes (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)). Cluster creation fails with an explanatory error message (the name of the executable that caused the error and the exceeded timeout period) if the executable is not completed at end of the timeout period.
    """


    executableFile: str

    executionTimeout?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigLifecycleConfig:
    r"""
    Immutable. Optional. Lifecycle setting for the cluster.

    Attributes
    ----------
    autoDeleteTime : str, default is Undefined, optional
        Immutable. Optional. The time when cluster will be auto-deleted (see JSON representation of [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    autoDeleteTtl : str, default is Undefined, optional
        Immutable. Optional. The lifetime duration of cluster. The cluster will be auto-deleted at the end of this period. Minimum value is 10 minutes; maximum value is 14 days (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    idleDeleteTtl : str, default is Undefined, optional
        Immutable. Optional. The duration to keep the cluster alive while idling (when no jobs are running). Passing this threshold will cause the cluster to be deleted. Minimum value is 5 minutes; maximum value is 14 days (see JSON representation of [Duration](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    """


    autoDeleteTime?: str

    autoDeleteTtl?: str

    idleDeleteTtl?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfig:
    r"""
    Immutable. Optional. The Compute Engine config settings for the master instance in a cluster.

    Attributes
    ----------
    accelerators : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfigAcceleratorsItems0], default is Undefined, optional
        Immutable. Optional. The Compute Engine accelerator configuration for these instances.
    diskConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfigDiskConfig, default is Undefined, optional
        disk config
    imageRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfigImageRef, default is Undefined, optional
        image ref
    machineType : str, default is Undefined, optional
        Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`.
    minCpuPlatform : str, default is Undefined, optional
        Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
    numInstances : int, default is Undefined, optional
        Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.
    preemptibility : str, default is Undefined, optional
        Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE
    """


    accelerators?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfigAcceleratorsItems0]

    diskConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfigDiskConfig

    imageRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfigImageRef

    machineType?: str

    minCpuPlatform?: str

    numInstances?: int

    preemptibility?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfigAcceleratorsItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster spec config master config accelerators items0

    Attributes
    ----------
    acceleratorCount : int, default is Undefined, optional
        Immutable. The number of the accelerator cards of this type exposed to this instance.
    acceleratorType : str, default is Undefined, optional
        Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`.
    """


    acceleratorCount?: int

    acceleratorType?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfigDiskConfig:
    r"""
    Immutable. Optional. Disk option config settings.

    Attributes
    ----------
    bootDiskSizeGb : int, default is Undefined, optional
        Immutable. Optional. Size in GB of the boot disk (default is 500GB).
    bootDiskType : str, default is Undefined, optional
        Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
    localSsdInterface : str, default is Undefined, optional
        Immutable. Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See [local SSD performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
    numLocalSsds : int, default is Undefined, optional
        Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
    """


    bootDiskSizeGb?: int

    bootDiskType?: str

    localSsdInterface?: str

    numLocalSsds?: int


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMasterConfigImageRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. The Compute Engine image resource used for cluster instances. The URI can represent an image or image family. Image examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]` * `projects/[project_id]/global/images/[image-id]` * `image-id` Image family examples. Dataproc will use the most recent image from the family: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]` * `projects/[project_id]/global/images/family/[custom-image-family-name]` If the URI is unspecified, it will be inferred from `SoftwareConfig.image_version` or the system default.

        Allowed value: The `selfLink` field of a `ComputeImage` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMetastoreConfig:
    r"""
    Immutable. Optional. Metastore configuration.

    Attributes
    ----------
    dataprocMetastoreServiceRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef, default is Undefined, required
        dataproc metastore service ref
    """


    dataprocMetastoreServiceRef: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigMetastoreConfigDataprocMetastoreServiceRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Required. Resource name of an existing Dataproc Metastore service. Example: * `projects/[project_id]/locations/[dataproc_region]/services/[service-name]`
    name : str, default is Undefined, optional
        [WARNING] DataprocMetastoreService not yet supported in Config Connector, use 'external' field to reference existing resources.
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfig:
    r"""
    Immutable. Optional. The Compute Engine config settings for additional worker instances in a cluster.

    Attributes
    ----------
    accelerators : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfigAcceleratorsItems0], default is Undefined, optional
        Immutable. Optional. The Compute Engine accelerator configuration for these instances.
    diskConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig, default is Undefined, optional
        disk config
    imageRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfigImageRef, default is Undefined, optional
        image ref
    machineType : str, default is Undefined, optional
        Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`.
    minCpuPlatform : str, default is Undefined, optional
        Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
    numInstances : int, default is Undefined, optional
        Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.
    preemptibility : str, default is Undefined, optional
        Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE
    """


    accelerators?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfigAcceleratorsItems0]

    diskConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig

    imageRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfigImageRef

    machineType?: str

    minCpuPlatform?: str

    numInstances?: int

    preemptibility?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfigAcceleratorsItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster spec config secondary worker config accelerators items0

    Attributes
    ----------
    acceleratorCount : int, default is Undefined, optional
        Immutable. The number of the accelerator cards of this type exposed to this instance.
    acceleratorType : str, default is Undefined, optional
        Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`.
    """


    acceleratorCount?: int

    acceleratorType?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfigDiskConfig:
    r"""
    Immutable. Optional. Disk option config settings.

    Attributes
    ----------
    bootDiskSizeGb : int, default is Undefined, optional
        Immutable. Optional. Size in GB of the boot disk (default is 500GB).
    bootDiskType : str, default is Undefined, optional
        Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
    localSsdInterface : str, default is Undefined, optional
        Immutable. Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See [local SSD performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
    numLocalSsds : int, default is Undefined, optional
        Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
    """


    bootDiskSizeGb?: int

    bootDiskType?: str

    localSsdInterface?: str

    numLocalSsds?: int


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecondaryWorkerConfigImageRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. The Compute Engine image resource used for cluster instances. The URI can represent an image or image family. Image examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]` * `projects/[project_id]/global/images/[image-id]` * `image-id` Image family examples. Dataproc will use the most recent image from the family: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]` * `projects/[project_id]/global/images/family/[custom-image-family-name]` If the URI is unspecified, it will be inferred from `SoftwareConfig.image_version` or the system default.

        Allowed value: The `selfLink` field of a `ComputeImage` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfig:
    r"""
    Immutable. Optional. Security settings for the cluster.

    Attributes
    ----------
    identityConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfigIdentityConfig, default is Undefined, optional
        identity config
    kerberosConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfigKerberosConfig, default is Undefined, optional
        kerberos config
    """


    identityConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfigIdentityConfig

    kerberosConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfigKerberosConfig


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfigIdentityConfig:
    r"""
    Immutable. Optional. Identity related configuration, including service account based secure multi-tenancy user mappings.

    Attributes
    ----------
    userServiceAccountMapping : {str:str}, default is Undefined, required
        Immutable. Required. Map of user to service account.
    """


    userServiceAccountMapping: {str:str}


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfigKerberosConfig:
    r"""
    Immutable. Optional. Kerberos related configuration.

    Attributes
    ----------
    crossRealmTrustAdminServer : str, default is Undefined, optional
        Immutable. Optional. The admin server (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
    crossRealmTrustKdc : str, default is Undefined, optional
        Immutable. Optional. The KDC (IP or hostname) for the remote trusted realm in a cross realm trust relationship.
    crossRealmTrustRealm : str, default is Undefined, optional
        Immutable. Optional. The remote realm the Dataproc on-cluster KDC will trust, should the user enable cross realm trust.
    crossRealmTrustSharedPassword : str, default is Undefined, optional
        Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the shared password between the on-cluster Kerberos realm and the remote trusted realm, in a cross realm trust relationship.
    enableKerberos : bool, default is Undefined, optional
        Immutable. Optional. Flag to indicate whether to Kerberize the cluster (default: false). Set this field to true to enable Kerberos on a cluster.
    kdcDbKey : str, default is Undefined, optional
        Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the master key of the KDC database.
    keyPassword : str, default is Undefined, optional
        Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided key. For the self-signed certificate, this password is generated by Dataproc.
    keystore : str, default is Undefined, optional
        Immutable. Optional. The Cloud Storage URI of the keystore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
    keystorePassword : str, default is Undefined, optional
        Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided keystore. For the self-signed certificate, this password is generated by Dataproc.
    kmsKeyRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef, default is Undefined, optional
        kms key ref
    realm : str, default is Undefined, optional
        Immutable. Optional. The name of the on-cluster Kerberos realm. If not specified, the uppercased domain of hostnames will be the realm.
    rootPrincipalPassword : str, default is Undefined, optional
        Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the root principal password.
    tgtLifetimeHours : int, default is Undefined, optional
        Immutable. Optional. The lifetime of the ticket granting ticket, in hours. If not specified, or user specifies 0, then default value 10 will be used.
    truststore : str, default is Undefined, optional
        Immutable. Optional. The Cloud Storage URI of the truststore file used for SSL encryption. If not provided, Dataproc will provide a self-signed certificate.
    truststorePassword : str, default is Undefined, optional
        Immutable. Optional. The Cloud Storage URI of a KMS encrypted file containing the password to the user provided truststore. For the self-signed certificate, this password is generated by Dataproc.
    """


    crossRealmTrustAdminServer?: str

    crossRealmTrustKdc?: str

    crossRealmTrustRealm?: str

    crossRealmTrustSharedPassword?: str

    enableKerberos?: bool

    kdcDbKey?: str

    keyPassword?: str

    keystore?: str

    keystorePassword?: str

    kmsKeyRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef

    realm?: str

    rootPrincipalPassword?: str

    tgtLifetimeHours?: int

    truststore?: str

    truststorePassword?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSecurityConfigKerberosConfigKmsKeyRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. The uri of the KMS key used to encrypt various sensitive files.

        Allowed value: The `selfLink` field of a `KMSCryptoKey` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigSoftwareConfig:
    r"""
    Immutable. Optional. The config settings for software inside the cluster.

    Attributes
    ----------
    imageVersion : str, default is Undefined, optional
        Immutable. Optional. The version of software inside the cluster. It must be one of the supported [Dataproc Versions](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#supported_dataproc_versions), such as "1.2" (including a subminor version, such as "1.2.29"), or the ["preview" version](https://cloud.google.com/dataproc/docs/concepts/versioning/dataproc-versions#other_versions). If unspecified, it defaults to the latest Debian version.
    optionalComponents : [str], default is Undefined, optional
        Immutable. Optional. The set of components to activate on the cluster.
    properties : {str:str}, default is Undefined, optional
        Immutable. Optional. The properties to set on daemon config files. Property keys are specified in `prefix:property` format, for example `core:hadoop.tmp.dir`. The following are supported prefixes and their mappings: * capacity-scheduler: `capacity-scheduler.xml` * core: `core-site.xml` * distcp: `distcp-default.xml` * hdfs: `hdfs-site.xml` * hive: `hive-site.xml` * mapred: `mapred-site.xml` * pig: `pig.properties` * spark: `spark-defaults.conf` * yarn: `yarn-site.xml` For more information, see [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
    """


    imageVersion?: str

    optionalComponents?: [str]

    properties?: {str:str}


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigStagingBucketRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see [Dataproc staging bucket](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). **This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.**

        Allowed value: The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigTempBucketRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. A Cloud Storage bucket used to store ephemeral cluster and jobs data, such as Spark and MapReduce history files. If you do not specify a temp bucket, Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's temp bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket. The default bucket has a TTL of 90 days, but you can use any TTL (or none) if you specify a bucket. **This field requires a Cloud Storage bucket name, not a URI to a Cloud Storage bucket.**

        Allowed value: The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfig:
    r"""
    Immutable. Optional. The Compute Engine config settings for worker instances in a cluster.

    Attributes
    ----------
    accelerators : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfigAcceleratorsItems0], default is Undefined, optional
        Immutable. Optional. The Compute Engine accelerator configuration for these instances.
    diskConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfigDiskConfig, default is Undefined, optional
        disk config
    imageRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfigImageRef, default is Undefined, optional
        image ref
    machineType : str, default is Undefined, optional
        Immutable. Optional. The Compute Engine machine type used for cluster instances. A full URL, partial URI, or short name are valid. Examples: * `https://www.googleapis.com/compute/v1/projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `projects/[project_id]/zones/us-east1-a/machineTypes/n1-standard-2` * `n1-standard-2` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the machine type resource, for example, `n1-standard-2`.
    minCpuPlatform : str, default is Undefined, optional
        Immutable. Optional. Specifies the minimum cpu platform for the Instance Group. See [Dataproc -> Minimum CPU Platform](https://cloud.google.com/dataproc/docs/concepts/compute/dataproc-min-cpu).
    numInstances : int, default is Undefined, optional
        Immutable. Optional. The number of VM instances in the instance group. For [HA cluster](/dataproc/docs/concepts/configuring-clusters/high-availability) [master_config](#FIELDS.master_config) groups, **must be set to 3**. For standard cluster [master_config](#FIELDS.master_config) groups, **must be set to 1**.
    preemptibility : str, default is Undefined, optional
        Immutable. Optional. Specifies the preemptibility of the instance group. The default value for master and worker groups is `NON_PREEMPTIBLE`. This default cannot be changed. The default value for secondary instances is `PREEMPTIBLE`. Possible values: PREEMPTIBILITY_UNSPECIFIED, NON_PREEMPTIBLE, PREEMPTIBLE
    """


    accelerators?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfigAcceleratorsItems0]

    diskConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfigDiskConfig

    imageRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfigImageRef

    machineType?: str

    minCpuPlatform?: str

    numInstances?: int

    preemptibility?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfigAcceleratorsItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster spec config worker config accelerators items0

    Attributes
    ----------
    acceleratorCount : int, default is Undefined, optional
        Immutable. The number of the accelerator cards of this type exposed to this instance.
    acceleratorType : str, default is Undefined, optional
        Immutable. Full URL, partial URI, or short name of the accelerator type resource to expose to this instance. See [Compute Engine AcceleratorTypes](https://cloud.google.com/compute/docs/reference/beta/acceleratorTypes). Examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `projects/[project_id]/zones/us-east1-a/acceleratorTypes/nvidia-tesla-k80` * `nvidia-tesla-k80` **Auto Zone Exception**: If you are using the Dataproc [Auto Zone Placement](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/auto-zone#using_auto_zone_placement) feature, you must use the short name of the accelerator type resource, for example, `nvidia-tesla-k80`.
    """


    acceleratorCount?: int

    acceleratorType?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfigDiskConfig:
    r"""
    Immutable. Optional. Disk option config settings.

    Attributes
    ----------
    bootDiskSizeGb : int, default is Undefined, optional
        Immutable. Optional. Size in GB of the boot disk (default is 500GB).
    bootDiskType : str, default is Undefined, optional
        Immutable. Optional. Type of the boot disk (default is "pd-standard"). Valid values: "pd-balanced" (Persistent Disk Balanced Solid State Drive), "pd-ssd" (Persistent Disk Solid State Drive), or "pd-standard" (Persistent Disk Hard Disk Drive). See [Disk types](https://cloud.google.com/compute/docs/disks#disk-types).
    localSsdInterface : str, default is Undefined, optional
        Immutable. Optional. Interface type of local SSDs (default is "scsi"). Valid values: "scsi" (Small Computer System Interface), "nvme" (Non-Volatile Memory Express). See [local SSD performance](https://cloud.google.com/compute/docs/disks/local-ssd#performance).
    numLocalSsds : int, default is Undefined, optional
        Immutable. Optional. Number of attached SSDs, from 0 to 4 (default is 0). If SSDs are not attached, the boot disk is used to store runtime logs and [HDFS](https://hadoop.apache.org/docs/r1.2.1/hdfs_user_guide.html) data. If one or more SSDs are attached, this runtime bulk data is spread across them, and the boot disk contains only basic config and installed binaries.
    """


    bootDiskSizeGb?: int

    bootDiskType?: str

    localSsdInterface?: str

    numLocalSsds?: int


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecConfigWorkerConfigImageRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. The Compute Engine image resource used for cluster instances. The URI can represent an image or image family. Image examples: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/[image-id]` * `projects/[project_id]/global/images/[image-id]` * `image-id` Image family examples. Dataproc will use the most recent image from the family: * `https://www.googleapis.com/compute/beta/projects/[project_id]/global/images/family/[custom-image-family-name]` * `projects/[project_id]/global/images/family/[custom-image-family-name]` If the URI is unspecified, it will be inferred from `SoftwareConfig.image_version` or the system default.

        Allowed value: The `selfLink` field of a `ComputeImage` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecProjectRef:
    r"""
    Immutable. The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Required. The Google Cloud Platform project ID that the cluster belongs to.

        Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfig:
    r"""
    Immutable. Optional. The virtual cluster config is used when creating a Dataproc cluster that does not directly control the underlying compute resources, for example, when creating a [Dataproc-on-GKE cluster](https://cloud.google.com/dataproc/docs/guides/dpgke/dataproc-gke). Dataproc may set default values, and values may change when clusters are updated. Exactly one of config or virtual_cluster_config must be specified.

    Attributes
    ----------
    auxiliaryServicesConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig, default is Undefined, optional
        auxiliary services config
    kubernetesClusterConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig, default is Undefined, required
        kubernetes cluster config
    stagingBucketRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigStagingBucketRef, default is Undefined, optional
        staging bucket ref
    """


    auxiliaryServicesConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig

    kubernetesClusterConfig: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig

    stagingBucketRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigStagingBucketRef


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfig:
    r"""
    Immutable. Optional. Configuration of auxiliary services used by this cluster.

    Attributes
    ----------
    metastoreConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig, default is Undefined, optional
        metastore config
    sparkHistoryServerConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig, default is Undefined, optional
        spark history server config
    """


    metastoreConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig

    sparkHistoryServerConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfig:
    r"""
    Immutable. Optional. The Hive Metastore configuration for this workload.

    Attributes
    ----------
    dataprocMetastoreServiceRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef, default is Undefined, required
        dataproc metastore service ref
    """


    dataprocMetastoreServiceRef: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigMetastoreConfigDataprocMetastoreServiceRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Required. Resource name of an existing Dataproc Metastore service. Example: * `projects/[project_id]/locations/[dataproc_region]/services/[service-name]`
    name : str, default is Undefined, optional
        [WARNING] DataprocMetastoreService not yet supported in Config Connector, use 'external' field to reference existing resources.
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfig:
    r"""
    Immutable. Optional. The Spark History Server configuration for the workload.

    Attributes
    ----------
    dataprocClusterRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef, default is Undefined, optional
        dataproc cluster ref
    """


    dataprocClusterRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigAuxiliaryServicesConfigSparkHistoryServerConfigDataprocClusterRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. Resource name of an existing Dataproc Cluster to act as a Spark History Server for the workload. Example: * `projects/[project_id]/regions/[region]/clusters/[cluster_name]`

        Allowed value: The `selfLink` field of a `DataprocCluster` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfig:
    r"""
    Immutable. Required. The configuration for running the Dataproc cluster on Kubernetes.

    Attributes
    ----------
    gkeClusterConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig, default is Undefined, required
        gke cluster config
    kubernetesNamespace : str, default is Undefined, optional
        Immutable. Optional. A namespace within the Kubernetes cluster to deploy into. If this namespace does not exist, it is created. If it exists, Dataproc verifies that another Dataproc VirtualCluster is not installed into it. If not specified, the name of the Dataproc Cluster is used.
    kubernetesSoftwareConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig, default is Undefined, optional
        kubernetes software config
    """


    gkeClusterConfig: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig

    kubernetesNamespace?: str

    kubernetesSoftwareConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfig:
    r"""
    Immutable. Required. The configuration for running the Dataproc cluster on GKE.

    Attributes
    ----------
    gkeClusterTargetRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef, default is Undefined, optional
        gke cluster target ref
    nodePoolTarget : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0], default is Undefined, optional
        Immutable. Optional. GKE node pools where workloads will be scheduled. At least one node pool must be assigned the `DEFAULT` GkeNodePoolTarget.Role. If a `GkeNodePoolTarget` is not specified, Dataproc constructs a `DEFAULT` `GkeNodePoolTarget`. Each role can be given to only one `GkeNodePoolTarget`. All node pools must have the same location settings.
    """


    gkeClusterTargetRef?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef

    nodePoolTarget?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0]


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigGkeClusterTargetRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. A target GKE cluster to deploy to. It must be in the same project and region as the Dataproc cluster (the GKE cluster can be zonal or regional). Format: 'projects/{project}/locations/{location}/clusters/{cluster_id}'

        Allowed value: The `selfLink` field of a `ContainerCluster` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster spec virtual cluster config kubernetes cluster config gke cluster config node pool target items0

    Attributes
    ----------
    nodePoolConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfig, default is Undefined, optional
        node pool config
    nodePoolRef : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolRef, default is Undefined, required
        node pool ref
    roles : [str], default is Undefined, required
        Immutable. Required. The roles associated with the GKE node pool.
    """


    nodePoolConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfig

    nodePoolRef: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolRef

    roles: [str]


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfig:
    r"""
    Immutable. Input only. The configuration for the GKE node pool. If specified, Dataproc attempts to create a node pool with the specified shape. If one with the same name already exists, it is verified against all specified fields. If a field differs, the virtual cluster creation will fail. If omitted, any node pool with the specified name is used. If a node pool with the specified name does not exist, Dataproc create a node pool with default values. This is an input only field. It will not be returned by the API.

    Attributes
    ----------
    autoscaling : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigAutoscaling, default is Undefined, optional
        autoscaling
    config : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigConfig, default is Undefined, optional
        config
    locations : [str], default is Undefined, optional
        Immutable. Optional. The list of Compute Engine [zones](https://cloud.google.com/compute/docs/zones#available) where node pool nodes associated with a Dataproc on GKE virtual cluster will be located. **Note:** All node pools associated with a virtual cluster must be located in the same region as the virtual cluster, and they must be located in the same zone within that region. If a location is not specified during node pool creation, Dataproc on GKE will choose the zone.
    """


    autoscaling?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigAutoscaling

    config?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigConfig

    locations?: [str]


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigAutoscaling:
    r"""
    Immutable. Optional. The autoscaler configuration for this node pool. The autoscaler is enabled only when a valid configuration is present.

    Attributes
    ----------
    maxNodeCount : int, default is Undefined, optional
        Immutable. The maximum number of nodes in the node pool. Must be >= min_node_count, and must be > 0. **Note:** Quota must be sufficient to scale up the cluster.
    minNodeCount : int, default is Undefined, optional
        Immutable. The minimum number of nodes in the node pool. Must be >= 0 and <= max_node_count.
    """


    maxNodeCount?: int

    minNodeCount?: int


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigConfig:
    r"""
    Immutable. Optional. The node pool configuration.

    Attributes
    ----------
    accelerators : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigConfigAcceleratorsItems0], default is Undefined, optional
        Immutable. Optional. A list of [hardware accelerators](https://cloud.google.com/compute/docs/gpus) to attach to each node.
    bootDiskKmsKey : str, default is Undefined, optional
        Immutable. Optional. The [Customer Managed Encryption Key (CMEK)] (https://cloud.google.com/kubernetes-engine/docs/how-to/using-cmek) used to encrypt the boot disk attached to each node in the node pool. Specify the key using the following format: `projects/KEY_PROJECT_ID/locations/LOCATION/keyRings/RING_NAME/cryptoKeys/KEY_NAME`.
    ephemeralStorageConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigConfigEphemeralStorageConfig, default is Undefined, optional
        ephemeral storage config
    localSsdCount : int, default is Undefined, optional
        Immutable. Optional. The number of local SSD disks to attach to the node, which is limited by the maximum number of disks allowable per zone (see [Adding Local SSDs](https://cloud.google.com/compute/docs/disks/local-ssd)).
    machineType : str, default is Undefined, optional
        Immutable. Optional. The name of a Compute Engine [machine type](https://cloud.google.com/compute/docs/machine-types).
    minCpuPlatform : str, default is Undefined, optional
        Immutable. Optional. [Minimum CPU platform](https://cloud.google.com/compute/docs/instances/specify-min-cpu-platform) to be used by this instance. The instance may be scheduled on the specified or a newer CPU platform. Specify the friendly names of CPU platforms, such as "Intel Haswell"` or Intel Sandy Bridge".
    preemptible : bool, default is Undefined, optional
        Immutable. Optional. Whether the nodes are created as legacy [preemptible VM instances] (https://cloud.google.com/compute/docs/instances/preemptible). Also see Spot VMs, preemptible VM instances without a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the `CONTROLLER` [role] (/dataproc/docs/reference/rest/v1/projects.regions.clusters#role) or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
    spot : bool, default is Undefined, optional
        Immutable. Optional. Whether the nodes are created as [Spot VM instances] (https://cloud.google.com/compute/docs/instances/spot). Spot VMs are the latest update to legacy preemptible VMs. Spot VMs do not have a maximum lifetime. Legacy and Spot preemptible nodes cannot be used in a node pool with the `CONTROLLER` [role](/dataproc/docs/reference/rest/v1/projects.regions.clusters#role) or in the DEFAULT node pool if the CONTROLLER role is not assigned (the DEFAULT node pool will assume the CONTROLLER role).
    """


    accelerators?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigConfigAcceleratorsItems0]

    bootDiskKmsKey?: str

    ephemeralStorageConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigConfigEphemeralStorageConfig

    localSsdCount?: int

    machineType?: str

    minCpuPlatform?: str

    preemptible?: bool

    spot?: bool


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigConfigAcceleratorsItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster spec virtual cluster config kubernetes cluster config gke cluster config node pool target items0 node pool config config accelerators items0

    Attributes
    ----------
    acceleratorCount : int, default is Undefined, optional
        Immutable. The number of accelerator cards exposed to an instance.
    acceleratorType : str, default is Undefined, optional
        Immutable. The accelerator type resource namename (see GPUs on Compute Engine).
    gpuPartitionSize : str, default is Undefined, optional
        Immutable. Size of partitions to create on the GPU. Valid values are described in the NVIDIA [mig user guide](https://docs.nvidia.com/datacenter/tesla/mig-user-guide/#partitioning).
    """


    acceleratorCount?: int

    acceleratorType?: str

    gpuPartitionSize?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolConfigConfigEphemeralStorageConfig:
    r"""
    Immutable. Optional. Parameters for the ephemeral storage filesystem. If unspecified, ephemeral storage is backed by the boot disk.

    Attributes
    ----------
    localSsdCount : int, default is Undefined, optional
        Immutable. Number of local SSDs to use to back ephemeral storage. Uses NVMe interfaces. Each local SSD is 375 GB in size. If zero, it means to disable using local SSDs as ephemeral storage.
    """


    localSsdCount?: int


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigGkeClusterConfigNodePoolTargetItems0NodePoolRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Required. The target GKE node pool. Format: 'projects/{project}/locations/{location}/clusters/{cluster}/nodePools/{node_pool}'

        Allowed value: The `selfLink` field of a `ContainerNodePool` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigKubernetesClusterConfigKubernetesSoftwareConfig:
    r"""
    Immutable. Optional. The software configuration for this Dataproc cluster running on Kubernetes.

    Attributes
    ----------
    componentVersion : {str:str}, default is Undefined, optional
        Immutable. The components that should be installed in this Dataproc cluster. The key must be a string from the KubernetesComponent enumeration. The value is the version of the software to be installed. At least one entry must be specified.
    properties : {str:str}, default is Undefined, optional
        Immutable. The properties to set on daemon config files. Property keys are specified in `prefix:property` format, for example `spark:spark.kubernetes.container.image`. The following are supported prefixes and their mappings: * spark: `spark-defaults.conf` For more information, see [Cluster properties](https://cloud.google.com/dataproc/docs/concepts/cluster-properties).
    """


    componentVersion?: {str:str}

    properties?: {str:str}


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterSpecVirtualClusterConfigStagingBucketRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Optional. A Cloud Storage bucket used to stage job dependencies, config files, and job driver console output. If you do not specify a staging bucket, Cloud Dataproc will determine a Cloud Storage location (US, ASIA, or EU) for your cluster's staging bucket according to the Compute Engine zone where your cluster is deployed, and then create and manage this project-level, per-location bucket (see [Dataproc staging and temp buckets](https://cloud.google.com/dataproc/docs/concepts/configuring-clusters/staging-bucket)). **This field requires a Cloud Storage bucket name, not a `gs://...` URI to a Cloud Storage bucket.**

        Allowed value: The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatus:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status

    Attributes
    ----------
    clusterUuid : str, default is Undefined, optional
        Output only. A cluster UUID (Unique Universal Identifier). Dataproc generates this value when it creates the cluster.
    conditions : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    config : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfig, default is Undefined, optional
        config
    metrics : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusMetrics, default is Undefined, optional
        metrics
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    status : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusStatus, default is Undefined, optional
        status
    statusHistory : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusStatusHistoryItems0], default is Undefined, optional
        Output only. The previous cluster status.
    """


    clusterUuid?: str

    conditions?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConditionsItems0]

    config?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfig

    metrics?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusMetrics

    observedGeneration?: int

    status?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusStatus

    statusHistory?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusStatusHistoryItems0]


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConditionsItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfig:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status config

    Attributes
    ----------
    endpointConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigEndpointConfig, default is Undefined, optional
        endpoint config
    lifecycleConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigLifecycleConfig, default is Undefined, optional
        lifecycle config
    masterConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigMasterConfig, default is Undefined, optional
        master config
    secondaryWorkerConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigSecondaryWorkerConfig, default is Undefined, optional
        secondary worker config
    workerConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigWorkerConfig, default is Undefined, optional
        worker config
    """


    endpointConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigEndpointConfig

    lifecycleConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigLifecycleConfig

    masterConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigMasterConfig

    secondaryWorkerConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigSecondaryWorkerConfig

    workerConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigWorkerConfig


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigEndpointConfig:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status config endpoint config

    Attributes
    ----------
    httpPorts : {str:str}, default is Undefined, optional
        Output only. The map of port descriptions to URLs. Will only be populated if enable_http_port_access is true.
    """


    httpPorts?: {str:str}


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigLifecycleConfig:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status config lifecycle config

    Attributes
    ----------
    idleStartTime : str, default is Undefined, optional
        Output only. The time when cluster became idle (most recent job finished) and became eligible for deletion due to idleness (see JSON representation of [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    """


    idleStartTime?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigMasterConfig:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status config master config

    Attributes
    ----------
    instanceNames : [str], default is Undefined, optional
        Output only. The list of instance names. Dataproc derives the names from `cluster_name`, `num_instances`, and the instance group.
    instanceReferences : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigMasterConfigInstanceReferencesItems0], default is Undefined, optional
        Output only. List of references to Compute Engine instances.
    isPreemptible : bool, default is Undefined, optional
        Output only. Specifies that this instance group contains preemptible instances.
    managedGroupConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigMasterConfigManagedGroupConfig, default is Undefined, optional
        managed group config
    """


    instanceNames?: [str]

    instanceReferences?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigMasterConfigInstanceReferencesItems0]

    isPreemptible?: bool

    managedGroupConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigMasterConfigManagedGroupConfig


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigMasterConfigInstanceReferencesItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status config master config instance references items0

    Attributes
    ----------
    instanceId : str, default is Undefined, optional
        The unique identifier of the Compute Engine instance.
    instanceName : str, default is Undefined, optional
        The user-friendly name of the Compute Engine instance.
    publicEciesKey : str, default is Undefined, optional
        The public ECIES key used for sharing data with this instance.
    publicKey : str, default is Undefined, optional
        The public RSA key used for sharing data with this instance.
    """


    instanceId?: str

    instanceName?: str

    publicEciesKey?: str

    publicKey?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigMasterConfigManagedGroupConfig:
    r"""
    Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.

    Attributes
    ----------
    instanceGroupManagerName : str, default is Undefined, optional
        Output only. The name of the Instance Group Manager for this group.
    instanceTemplateName : str, default is Undefined, optional
        Output only. The name of the Instance Template used for the Managed Instance Group.
    """


    instanceGroupManagerName?: str

    instanceTemplateName?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigSecondaryWorkerConfig:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status config secondary worker config

    Attributes
    ----------
    instanceNames : [str], default is Undefined, optional
        Output only. The list of instance names. Dataproc derives the names from `cluster_name`, `num_instances`, and the instance group.
    instanceReferences : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigSecondaryWorkerConfigInstanceReferencesItems0], default is Undefined, optional
        Output only. List of references to Compute Engine instances.
    isPreemptible : bool, default is Undefined, optional
        Output only. Specifies that this instance group contains preemptible instances.
    managedGroupConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigSecondaryWorkerConfigManagedGroupConfig, default is Undefined, optional
        managed group config
    """


    instanceNames?: [str]

    instanceReferences?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigSecondaryWorkerConfigInstanceReferencesItems0]

    isPreemptible?: bool

    managedGroupConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigSecondaryWorkerConfigManagedGroupConfig


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigSecondaryWorkerConfigInstanceReferencesItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status config secondary worker config instance references items0

    Attributes
    ----------
    instanceId : str, default is Undefined, optional
        The unique identifier of the Compute Engine instance.
    instanceName : str, default is Undefined, optional
        The user-friendly name of the Compute Engine instance.
    publicEciesKey : str, default is Undefined, optional
        The public ECIES key used for sharing data with this instance.
    publicKey : str, default is Undefined, optional
        The public RSA key used for sharing data with this instance.
    """


    instanceId?: str

    instanceName?: str

    publicEciesKey?: str

    publicKey?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigSecondaryWorkerConfigManagedGroupConfig:
    r"""
    Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.

    Attributes
    ----------
    instanceGroupManagerName : str, default is Undefined, optional
        Output only. The name of the Instance Group Manager for this group.
    instanceTemplateName : str, default is Undefined, optional
        Output only. The name of the Instance Template used for the Managed Instance Group.
    """


    instanceGroupManagerName?: str

    instanceTemplateName?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigWorkerConfig:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status config worker config

    Attributes
    ----------
    instanceNames : [str], default is Undefined, optional
        Output only. The list of instance names. Dataproc derives the names from `cluster_name`, `num_instances`, and the instance group.
    instanceReferences : [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigWorkerConfigInstanceReferencesItems0], default is Undefined, optional
        Output only. List of references to Compute Engine instances.
    isPreemptible : bool, default is Undefined, optional
        Output only. Specifies that this instance group contains preemptible instances.
    managedGroupConfig : DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigWorkerConfigManagedGroupConfig, default is Undefined, optional
        managed group config
    """


    instanceNames?: [str]

    instanceReferences?: [DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigWorkerConfigInstanceReferencesItems0]

    isPreemptible?: bool

    managedGroupConfig?: DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigWorkerConfigManagedGroupConfig


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigWorkerConfigInstanceReferencesItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status config worker config instance references items0

    Attributes
    ----------
    instanceId : str, default is Undefined, optional
        The unique identifier of the Compute Engine instance.
    instanceName : str, default is Undefined, optional
        The user-friendly name of the Compute Engine instance.
    publicEciesKey : str, default is Undefined, optional
        The public ECIES key used for sharing data with this instance.
    publicKey : str, default is Undefined, optional
        The public RSA key used for sharing data with this instance.
    """


    instanceId?: str

    instanceName?: str

    publicEciesKey?: str

    publicKey?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusConfigWorkerConfigManagedGroupConfig:
    r"""
    Output only. The config for Compute Engine Instance Group Manager that manages this group. This is only used for preemptible instance groups.

    Attributes
    ----------
    instanceGroupManagerName : str, default is Undefined, optional
        Output only. The name of the Instance Group Manager for this group.
    instanceTemplateName : str, default is Undefined, optional
        Output only. The name of the Instance Template used for the Managed Instance Group.
    """


    instanceGroupManagerName?: str

    instanceTemplateName?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusMetrics:
    r"""
    Output only. Contains cluster daemon metrics such as HDFS and YARN stats. **Beta Feature**: This report is available for testing purposes only. It may be changed before final release.

    Attributes
    ----------
    hdfsMetrics : {str:str}, default is Undefined, optional
        The HDFS metrics.
    yarnMetrics : {str:str}, default is Undefined, optional
        The YARN metrics.
    """


    hdfsMetrics?: {str:str}

    yarnMetrics?: {str:str}


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusStatus:
    r"""
    Output only. Cluster status.

    Attributes
    ----------
    detail : str, default is Undefined, optional
        Optional. Output only. Details of cluster's state.
    state : str, default is Undefined, optional
        Output only. The cluster's state. Possible values: UNKNOWN, CREATING, RUNNING, ERROR, DELETING, UPDATING, STOPPING, STOPPED, STARTING
    stateStartTime : str, default is Undefined, optional
        Output only. Time when this state was entered (see JSON representation of [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    substate : str, default is Undefined, optional
        Output only. Additional state information that includes status reported by the agent. Possible values: UNSPECIFIED, UNHEALTHY, STALE_STATUS
    """


    detail?: str

    state?: str

    stateStartTime?: str

    substate?: str


schema DataprocCnrmCloudGoogleComV1beta1DataprocClusterStatusStatusHistoryItems0:
    r"""
    dataproc cnrm cloud google com v1beta1 dataproc cluster status status history items0

    Attributes
    ----------
    detail : str, default is Undefined, optional
        Optional. Output only. Details of cluster's state.
    state : str, default is Undefined, optional
        Output only. The cluster's state. Possible values: UNKNOWN, CREATING, RUNNING, ERROR, DELETING, UPDATING, STOPPING, STOPPED, STARTING
    stateStartTime : str, default is Undefined, optional
        Output only. Time when this state was entered (see JSON representation of [Timestamp](https://developers.google.com/protocol-buffers/docs/proto3#json)).
    substate : str, default is Undefined, optional
        Output only. Additional state information that includes status reported by the agent. Possible values: UNSPECIFIED, UNHEALTHY, STALE_STATUS
    """


    detail?: str

    state?: str

    stateStartTime?: str

    substate?: str


