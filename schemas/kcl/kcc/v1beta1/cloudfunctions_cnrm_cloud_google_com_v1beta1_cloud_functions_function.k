"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CloudFunctionsFunction:
    r"""
    cloudfunctions cnrm cloud google com v1beta1 cloud functions function

    Attributes
    ----------
    apiVersion : str, default is "cloudfunctions.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CloudFunctionsFunction", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpec, default is Undefined, required
        spec
    status : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudfunctions.cnrm.cloud.google.com/v1beta1" = "cloudfunctions.cnrm.cloud.google.com/v1beta1"

    kind: "CloudFunctionsFunction" = "CloudFunctionsFunction"

    metadata?: v1.ObjectMeta

    spec: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpec

    status?: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatus


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpec:
    r"""
    cloudfunctions cnrm cloud google com v1beta1 cloud functions function spec

    Attributes
    ----------
    availableMemoryMb : int, default is Undefined, optional
        Memory (in MB), available to the function. Default value is 256MB. Allowed values are: 128MB, 256MB, 512MB, 1024MB, and 2048MB.
    description : str, default is Undefined, optional
        User-provided description of a function.
    entryPoint : str, default is Undefined, optional
        Immutable. The name of the function (as defined in source code) that will be
        executed. Defaults to the resource name suffix, if not specified. For
        backward compatibility, if function with given name is not found, then the
        system will try to use function named "function".
        For Node.js this is name of a function exported by the module specified
        in `source_location`.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables that shall be available during function execution.
    eventTrigger : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecEventTrigger, default is Undefined, optional
        event trigger
    httpsTrigger : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecHTTPSTrigger, default is Undefined, optional
        https trigger
    ingressSettings : str, default is Undefined, optional
        The ingress settings for the function, controlling what traffic can reach
        it. Possible values: INGRESS_SETTINGS_UNSPECIFIED, ALLOW_ALL, ALLOW_INTERNAL_ONLY, ALLOW_INTERNAL_AND_GCLB
    maxInstances : int, default is Undefined, optional
        The limit on the maximum number of function instances that may coexist at a
        given time.
    projectRef : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecProjectRef, default is Undefined, required
        project ref
    region : str, default is Undefined, required
        Immutable. The name of the Cloud Functions region of the function.
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    runtime : str, default is Undefined, required
        The runtime in which to run the function. Required when deploying a new
        function, optional when updating an existing function. For a complete
        list of possible choices, see the
        [`gcloud` command
        reference](/sdk/gcloud/reference/functions/deploy#--runtime).

    serviceAccountRef : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecServiceAccountRef, default is Undefined, optional
        service account ref
    sourceArchiveUrl : str, default is Undefined, optional
        Immutable. The Google Cloud Storage URL, starting with gs://, pointing to the zip archive which contains the function.
    sourceRepository : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecSourceRepository, default is Undefined, optional
        source repository
    timeout : str, default is Undefined, optional
        The function execution timeout. Execution is considered failed and
        can be terminated if the function is not completed at the end of the
        timeout period. Defaults to 60 seconds.
    vpcConnectorEgressSettings : str, default is Undefined, optional
        The egress settings for the connector, controlling what traffic is diverted
        through it. Possible values: VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED, PRIVATE_RANGES_ONLY, ALL_TRAFFIC
    vpcConnectorRef : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecVpcConnectorRef, default is Undefined, optional
        vpc connector ref
    """


    availableMemoryMb?: int

    description?: str

    entryPoint?: str

    environmentVariables?: {str:str}

    eventTrigger?: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecEventTrigger

    httpsTrigger?: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecHTTPSTrigger

    ingressSettings?: str

    maxInstances?: int

    projectRef: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecProjectRef

    region: str

    resourceID?: str

    runtime: str

    serviceAccountRef?: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecServiceAccountRef

    sourceArchiveUrl?: str

    sourceRepository?: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecSourceRepository

    timeout?: str

    vpcConnectorEgressSettings?: str

    vpcConnectorRef?: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecVpcConnectorRef


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecEventTrigger:
    r"""
    Immutable. A source that fires events in response to a condition in another service.

    Attributes
    ----------
    eventType : str, default is Undefined, required
        Immutable. Required. The type of event to observe. For example:
        `providers/cloud.storage/eventTypes/object.change` and
        `providers/cloud.pubsub/eventTypes/topic.publish`.

        Event types match pattern `providers/*/eventTypes/*.*`.
        The pattern contains:

        1. namespace: For example, `cloud.storage` and
           `google.firebase.analytics`.
        2. resource type: The type of resource on which event occurs. For
           example, the Google Cloud Storage API includes the type `object`.
        3. action: The action that generates the event. For example, action for
           a Google Cloud Storage Object is 'change'.
        These parts are lower case.
    failurePolicy : bool, default is Undefined, optional
        Immutable. Specifies policy for failed executions.
    resourceRef : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecEventTriggerResourceRef, default is Undefined, required
        resource ref
    service : str, default is Undefined, optional
        Immutable. The hostname of the service that should be observed.

        If no string is provided, the default service implementing the API will
        be used. For example, `storage.googleapis.com` is the default for all
        event types in the `google.storage` namespace.
    """


    eventType: str

    failurePolicy?: bool

    resourceRef: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecEventTriggerResourceRef

    service?: str


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecEventTriggerResourceRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Required. The resource(s) from which to observe events, for example,
        `projects/_/buckets/myBucket`.

        Not all syntactically correct values are accepted by all services. For
        example:

        1. The authorization model must support it. Google Cloud Functions
           only allows EventTriggers to be deployed that observe resources in the
           same project as the `Function`.
        2. The resource type must match the pattern expected for an
           `event_type`. For example, an `EventTrigger` that has an
           `event_type` of "google.pubsub.topic.publish" should have a resource
           that matches Google Cloud Pub/Sub topics.

        Additionally, some services may support short names when creating an
        `EventTrigger`. These will always be returned in the normalized "long"
        format.

        See each *service's* documentation for supported formats.

        Allowed values:
        * The Google Cloud resource name of a `StorageBucket` resource (format: `{{name}}`).
        * The Google Cloud resource name of a `PubSubTopic` resource (format: `projects/{{project}}/topics/{{name}}`).
    kind : str, default is Undefined, optional
        Kind of the referent. Allowed values: StorageBucket,PubSubTopic
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecHTTPSTrigger:
    r"""
    Immutable. An HTTPS endpoint type of source that can be triggered via URL.

    Attributes
    ----------
    securityLevel : str, default is Undefined, optional
        Immutable. Both HTTP and HTTPS requests with URLs that match the handler succeed without redirects. The application can examine the request to determine which protocol was used and respond accordingly. Possible values: SECURITY_LEVEL_UNSPECIFIED, SECURE_ALWAYS, SECURE_OPTIONAL
    """


    securityLevel?: str


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecProjectRef:
    r"""
    Immutable. The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The project id of the function.

        Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecServiceAccountRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The email of the function's service account. If empty, defaults to
        `{project_id}@appspot.gserviceaccount.com`.

        Allowed value: The `email` field of an `IAMServiceAccount` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecSourceRepository:
    r"""
    Immutable. Represents parameters related to source repository where a function is hosted.

    Attributes
    ----------
    url : str, default is Undefined, required
        Immutable. The URL pointing to the hosted repository where the function is defined.
        There are supported Cloud Source Repository URLs in the following
        formats:

        To refer to a specific commit:
        `https://source.developers.google.com/projects/*/repos/*/revisions/*/paths/*`
        To refer to a moveable alias (branch):
        `https://source.developers.google.com/projects/*/repos/*/moveable-aliases/*/paths/*`
        In particular, to refer to HEAD use `master` moveable alias.
        To refer to a specific fixed alias (tag):
        `https://source.developers.google.com/projects/*/repos/*/fixed-aliases/*/paths/*`

        You may omit `paths/*` if you want to use the main directory.
    """


    url: str


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionSpecVpcConnectorRef:
    r"""
    cloudfunctions cnrm cloud google com v1beta1 cloud functions function spec vpc connector ref

    Attributes
    ----------
    external : str, default is Undefined, optional
        The VPC Network Connector that this cloud function can connect to. It can
        be either the fully-qualified URI, or the short name of the network
        connector resource. The format of this field is
        `projects/*/locations/*/connectors/*`

        Allowed value: The Google Cloud resource name of a `VPCAccessConnector` resource (format: `projects/{{project}}/locations/{{location}}/connectors/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatus:
    r"""
    cloudfunctions cnrm cloud google com v1beta1 cloud functions function status

    Attributes
    ----------
    conditions : [CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    httpsTrigger : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatusHTTPSTrigger, default is Undefined, optional
        https trigger
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    sourceRepository : CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatusSourceRepository, default is Undefined, optional
        source repository
    status : str, default is Undefined, optional
        Output only. Status of the function deployment. Possible values: CLOUD_FUNCTION_STATUS_UNSPECIFIED, ACTIVE, OFFLINE, DEPLOY_IN_PROGRESS, DELETE_IN_PROGRESS, UNKNOWN
    updateTime : str, default is Undefined, optional
        Output only. The last update timestamp of a Cloud Function in RFC3339 UTC 'Zulu' format, with nanosecond resolution and up to nine fractional digits.
    versionId : int, default is Undefined, optional
        Output only. The version identifier of the Cloud Function. Each deployment attempt
        results in a new version of a function being created.
    """


    conditions?: [CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatusConditionsItems0]

    httpsTrigger?: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatusHTTPSTrigger

    observedGeneration?: int

    sourceRepository?: CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatusSourceRepository

    status?: str

    updateTime?: str

    versionId?: int


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatusConditionsItems0:
    r"""
    cloudfunctions cnrm cloud google com v1beta1 cloud functions function status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatusHTTPSTrigger:
    r"""
    cloudfunctions cnrm cloud google com v1beta1 cloud functions function status HTTPS trigger

    Attributes
    ----------
    url : str, default is Undefined, optional
        Output only. The deployed url for the function.
    """


    url?: str


schema CloudfunctionsCnrmCloudGoogleComV1beta1CloudFunctionsFunctionStatusSourceRepository:
    r"""
    cloudfunctions cnrm cloud google com v1beta1 cloud functions function status source repository

    Attributes
    ----------
    deployedUrl : str, default is Undefined, optional
        Output only. The URL pointing to the hosted repository where the function
        were defined at the time of deployment. It always points to a specific
        commit in the format described above.
    """


    deployedUrl?: str


