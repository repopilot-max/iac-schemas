"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema BinaryAuthorizationAttestor:
    r"""
    binaryauthorization cnrm cloud google com v1beta1 binary authorization attestor

    Attributes
    ----------
    apiVersion : str, default is "binaryauthorization.cnrm.cloud.google.com/v1beta1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "BinaryAuthorizationAttestor", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpec, default is Undefined, required
        spec
    status : BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorStatus, default is Undefined, optional
        status
    """


    apiVersion: "binaryauthorization.cnrm.cloud.google.com/v1beta1" = "binaryauthorization.cnrm.cloud.google.com/v1beta1"

    kind: "BinaryAuthorizationAttestor" = "BinaryAuthorizationAttestor"

    metadata?: v1.ObjectMeta

    spec: BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpec

    status?: BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorStatus


schema BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpec:
    r"""
    binaryauthorization cnrm cloud google com v1beta1 binary authorization attestor spec

    Attributes
    ----------
    description : str, default is Undefined, optional
        Optional. A descriptive comment. This field may be updated. The field may be displayed in chooser dialogs.
    projectRef : BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecProjectRef, default is Undefined, required
        project ref
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    userOwnedDrydockNote : BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNote, default is Undefined, optional
        user owned drydock note
    """


    description?: str

    projectRef: BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecProjectRef

    resourceID?: str

    userOwnedDrydockNote?: BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNote


schema BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecProjectRef:
    r"""
    Immutable. The Project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        The project for the resource

        Allowed value: The Google Cloud resource name of a `Project` resource (format: `projects/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNote:
    r"""
    This specifies how an attestation will be read, and how it will be used during policy enforcement.

    Attributes
    ----------
    noteRef : BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNoteNoteRef, default is Undefined, required
        note ref
    publicKeys : [BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNotePublicKeysItems0], default is Undefined, optional
        Optional. Public keys that verify attestations signed by this attestor. This field may be updated. If this field is non-empty, one of the specified public keys must verify that an attestation was signed by this attestor for the image specified in the admission request. If this field is empty, this attestor always returns that no valid attestations exist.
    """


    noteRef: BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNoteNoteRef

    publicKeys?: [BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNotePublicKeysItems0]


schema BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNoteNoteRef:
    r"""
    Immutable.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Required. The Drydock resource name of a Attestation. Authority Note, created by the user, in the format: `projects/*/notes/*`. This field may not be updated. An attestation by this attestor is stored as a Grafeas Attestation. Authority Occurrence that names a container image and that links to this Note. Grafeas is an external dependency.

        Allowed value: The Google Cloud resource name of a `ContainerAnalysisNote` resource (format: `projects/{{project}}/notes/{{name}}`).
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNotePublicKeysItems0:
    r"""
    binaryauthorization cnrm cloud google com v1beta1 binary authorization attestor spec user owned drydock note public keys items0

    Attributes
    ----------
    asciiArmoredPgpPublicKey : str, default is Undefined, optional
        ASCII-armored representation of a PGP public key, as the entire output by the command `gpg --export --armor foo@example.com` (either LF or CRLF line endings). When using this field, `id` should be left blank. The BinAuthz API handlers will calculate the ID and fill it in automatically. BinAuthz computes this ID as the OpenPGP RFC4880 V4 fingerprint, represented as upper-case hex. If `id` is provided by the caller, it will be overwritten by the API-calculated ID.
    comment : str, default is Undefined, optional
        Optional. A descriptive comment. This field may be updated.
    id : str, default is Undefined, optional
        The ID of this public key. Signatures verified by BinAuthz must include the ID of the public key that can be used to verify them, and that ID must match the contents of this field exactly. Additional restrictions on this field can be imposed based on which public key type is encapsulated. See the documentation on `public_key` cases below for details.
    pkixPublicKey : BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNotePublicKeysItems0PkixPublicKey, default is Undefined, optional
        pkix public key
    """


    asciiArmoredPgpPublicKey?: str

    comment?: str

    id?: str

    pkixPublicKey?: BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNotePublicKeysItems0PkixPublicKey


schema BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorSpecUserOwnedDrydockNotePublicKeysItems0PkixPublicKey:
    r"""
    A raw PKIX SubjectPublicKeyInfo format public key. NOTE: `id` may be explicitly provided by the caller when using this type of public key, but it MUST be a valid RFC3986 URI. If `id` is left blank, a default one will be computed based on the digest of the DER encoding of the public key.

    Attributes
    ----------
    publicKeyPem : str, default is Undefined, optional
        A PEM-encoded public key, as described in https://tools.ietf.org/html/rfc7468#section-13
    signatureAlgorithm : str, default is Undefined, optional
        The signature algorithm used to verify a message against a signature using this key. These signature algorithm must match the structure and any object identifiers encoded in `public_key_pem` (i.e. this algorithm must match that of the public key). Possible values: SIGNATURE_ALGORITHM_UNSPECIFIED, RSA_PSS_2048_SHA256, RSA_PSS_3072_SHA256, RSA_PSS_4096_SHA256, RSA_PSS_4096_SHA512, RSA_SIGN_PKCS1_2048_SHA256, RSA_SIGN_PKCS1_3072_SHA256, RSA_SIGN_PKCS1_4096_SHA256, RSA_SIGN_PKCS1_4096_SHA512, ECDSA_P256_SHA256, EC_SIGN_P256_SHA256, ECDSA_P384_SHA384, EC_SIGN_P384_SHA384, ECDSA_P521_SHA512, EC_SIGN_P521_SHA512
    """


    publicKeyPem?: str

    signatureAlgorithm?: str


schema BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorStatus:
    r"""
    binaryauthorization cnrm cloud google com v1beta1 binary authorization attestor status

    Attributes
    ----------
    conditions : [BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    updateTime : str, default is Undefined, optional
        Output only. Time when the attestor was last updated.
    userOwnedDrydockNote : BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorStatusUserOwnedDrydockNote, default is Undefined, optional
        user owned drydock note
    """


    conditions?: [BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorStatusConditionsItems0]

    observedGeneration?: int

    updateTime?: str

    userOwnedDrydockNote?: BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorStatusUserOwnedDrydockNote


schema BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorStatusConditionsItems0:
    r"""
    binaryauthorization cnrm cloud google com v1beta1 binary authorization attestor status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


schema BinaryauthorizationCnrmCloudGoogleComV1beta1BinaryAuthorizationAttestorStatusUserOwnedDrydockNote:
    r"""
    binaryauthorization cnrm cloud google com v1beta1 binary authorization attestor status user owned drydock note

    Attributes
    ----------
    delegationServiceAccountEmail : str, default is Undefined, optional
        Output only. This field will contain the service account email address that this Attestor will use as the principal when querying Container Analysis. Attestor administrators must grant this service account the IAM role needed to read attestations from the in Container Analysis (`containeranalysis.notes.occurrences.viewer`). This email address is fixed for the lifetime of the Attestor, but callers should not make any other assumptions about the service account email; future versions may use an email based on a different naming pattern.
    """


    delegationServiceAccountEmail?: str


