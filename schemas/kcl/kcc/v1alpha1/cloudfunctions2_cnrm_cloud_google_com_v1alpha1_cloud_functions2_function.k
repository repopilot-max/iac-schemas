"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema CloudFunctions2Function:
    r"""
    cloudfunctions2 cnrm cloud google com v1alpha1 cloud functions2 function

    Attributes
    ----------
    apiVersion : str, default is "cloudfunctions2.cnrm.cloud.google.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "CloudFunctions2Function", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpec, default is Undefined, required
        spec
    status : Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionStatus, default is Undefined, optional
        status
    """


    apiVersion: "cloudfunctions2.cnrm.cloud.google.com/v1alpha1" = "cloudfunctions2.cnrm.cloud.google.com/v1alpha1"

    kind: "CloudFunctions2Function" = "CloudFunctions2Function"

    metadata?: v1.ObjectMeta

    spec: Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpec

    status?: Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionStatus


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpec:
    r"""
    cloudfunctions2 cnrm cloud google com v1alpha1 cloud functions2 function spec

    Attributes
    ----------
    buildConfig : Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfig, default is Undefined, optional
        build config
    description : str, default is Undefined, optional
        User-provided description of a function.
    eventTrigger : Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecEventTrigger, default is Undefined, optional
        event trigger
    kmsKeyName : str, default is Undefined, optional
        Resource name of a KMS crypto key (managed by the user) used to encrypt/decrypt function resources.
        It must match the pattern projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}.
    location : str, default is Undefined, required
        Immutable. The location of this cloud function.
    projectRef : Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecProjectRef, default is Undefined, required
        project ref
    resourceID : str, default is Undefined, optional
        Immutable. Optional. The name of the resource. Used for creation and acquisition. When unset, the value of `metadata.name` is used as the default.
    serviceConfig : Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfig, default is Undefined, optional
        service config
    """


    buildConfig?: Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfig

    description?: str

    eventTrigger?: Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecEventTrigger

    kmsKeyName?: str

    location: str

    projectRef: Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecProjectRef

    resourceID?: str

    serviceConfig?: Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfig


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfig:
    r"""
    Describes the Build step of the function that builds a container
    from the given source.

    Attributes
    ----------
    build : str, default is Undefined, optional
        The Cloud Build name of the latest successful
        deployment of the function.
    dockerRepository : str, default is Undefined, optional
        User managed repository created in Artifact Registry optionally with a customer managed encryption key.
    entryPoint : str, default is Undefined, optional
        The name of the function (as defined in source code) that will be executed.
        Defaults to the resource name suffix, if not specified. For backward
        compatibility, if function with given name is not found, then the system
        will try to use function named "function". For Node.js this is name of a
        function exported by the module specified in source_location.
    environmentVariables : {str:str}, default is Undefined, optional
        User-provided build-time environment variables for the function.
    runtime : str, default is Undefined, optional
        The runtime in which to run the function. Required when deploying a new
        function, optional when updating an existing function.
    source : Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfigSource, default is Undefined, optional
        source
    workerPool : str, default is Undefined, optional
        Name of the Cloud Build Custom Worker Pool that should be used to build the function.
    """


    build?: str

    dockerRepository?: str

    entryPoint?: str

    environmentVariables?: {str:str}

    runtime?: str

    source?: Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfigSource

    workerPool?: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfigSource:
    r"""
    The location of the function source code.

    Attributes
    ----------
    repoSource : Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfigSourceRepoSource, default is Undefined, optional
        repo source
    storageSource : Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfigSourceStorageSource, default is Undefined, optional
        storage source
    """


    repoSource?: Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfigSourceRepoSource

    storageSource?: Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfigSourceStorageSource


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfigSourceRepoSource:
    r"""
    If provided, get the source from this location in a Cloud Source Repository.

    Attributes
    ----------
    branchName : str, default is Undefined, optional
        Regex matching branches to build.
    commitSha : str, default is Undefined, optional
        Regex matching tags to build.
    dir : str, default is Undefined, optional
        Directory, relative to the source root, in which to run the build.
    invertRegex : bool, default is Undefined, optional
        Only trigger a build if the revision regex does
        NOT match the revision regex.
    projectId : str, default is Undefined, optional
        Immutable. ID of the project that owns the Cloud Source Repository. If omitted, the
        project ID requesting the build is assumed.
    repoName : str, default is Undefined, optional
        Name of the Cloud Source Repository.
    tagName : str, default is Undefined, optional
        Regex matching tags to build.
    """


    branchName?: str

    commitSha?: str

    dir?: str

    invertRegex?: bool

    projectId?: str

    repoName?: str

    tagName?: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecBuildConfigSourceStorageSource:
    r"""
    If provided, get the source from this location in Google Cloud Storage.

    Attributes
    ----------
    bucket : str, default is Undefined, optional
        Google Cloud Storage bucket containing the source.
    generation : int, default is Undefined, optional
        Google Cloud Storage generation for the object. If the generation
        is omitted, the latest generation will be used.
    object : str, default is Undefined, optional
        Google Cloud Storage object containing the source.
    """


    bucket?: str

    generation?: int

    object?: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecEventTrigger:
    r"""
    An Eventarc trigger managed by Google Cloud Functions that fires events in
    response to a condition in another service.

    Attributes
    ----------
    eventFilters : [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecEventTriggerEventFiltersItems0], default is Undefined, optional
        Criteria used to filter events.
    eventType : str, default is Undefined, optional
        Required. The type of event to observe.
    pubsubTopic : str, default is Undefined, optional
        The name of a Pub/Sub topic in the same project that will be used
        as the transport topic for the event delivery.
    retryPolicy : str, default is Undefined, optional
        Describes the retry policy in case of function's execution failure.
        Retried execution is charged as any other execution. Possible values: ["RETRY_POLICY_UNSPECIFIED", "RETRY_POLICY_DO_NOT_RETRY", "RETRY_POLICY_RETRY"].
    serviceAccountEmail : str, default is Undefined, optional
        The email of the service account for this function.
    trigger : str, default is Undefined, optional
        Output only. The resource name of the Eventarc trigger.
    triggerRegion : str, default is Undefined, optional
        The region that the trigger will be in. The trigger will only receive
        events originating in this region. It can be the same
        region as the function, a different region or multi-region, or the global
        region. If not provided, defaults to the same region as the function.
    """


    eventFilters?: [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecEventTriggerEventFiltersItems0]

    eventType?: str

    pubsubTopic?: str

    retryPolicy?: str

    serviceAccountEmail?: str

    trigger?: str

    triggerRegion?: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecEventTriggerEventFiltersItems0:
    r"""
    cloudfunctions2 cnrm cloud google com v1alpha1 cloud functions2 function spec event trigger event filters items0

    Attributes
    ----------
    attribute : str, default is Undefined, required
        'Required. The name of a CloudEvents attribute.
        Currently, only a subset of attributes are supported for filtering. Use the 'gcloud eventarc providers describe' command to learn more about events and their attributes.
        Do not filter for the 'type' attribute here, as this is already achieved by the resource's 'event_type' attribute.
    operator : str, default is Undefined, optional
        Optional. The operator used for matching the events with the value of
        the filter. If not specified, only events that have an exact key-value
        pair specified in the filter are matched.
        The only allowed value is 'match-path-pattern'.
        [See documentation on path patterns here](https://cloud.google.com/eventarc/docs/path-patterns)'.
    value : str, default is Undefined, required
        Required. The value for the attribute.
        If the operator field is set as 'match-path-pattern', this value can be a path pattern instead of an exact value.
    """


    attribute: str

    operator?: str

    value: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecProjectRef:
    r"""
    The project that this resource belongs to.

    Attributes
    ----------
    external : str, default is Undefined, optional
        Allowed value: The `name` field of a `Project` resource.
    name : str, default is Undefined, optional
        Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
    namespace : str, default is Undefined, optional
        Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
    """


    external?: str

    name?: str

    namespace?: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfig:
    r"""
    Describes the Service being deployed.

    Attributes
    ----------
    allTrafficOnLatestRevision : bool, default is Undefined, optional
        Whether 100% of traffic is routed to the latest revision. Defaults to true.
    availableCpu : str, default is Undefined, optional
        The number of CPUs used in a single container instance. Default value is calculated from available memory.
    availableMemory : str, default is Undefined, optional
        The amount of memory available for a function.
        Defaults to 256M. Supported units are k, M, G, Mi, Gi. If no unit is
        supplied the value is interpreted as bytes.
    environmentVariables : {str:str}, default is Undefined, optional
        Environment variables that shall be available during function execution.
    gcfUri : str, default is Undefined, optional
        URIs of the Service deployed.
    ingressSettings : str, default is Undefined, optional
        Available ingress settings. Defaults to "ALLOW_ALL" if unspecified. Default value: "ALLOW_ALL" Possible values: ["ALLOW_ALL", "ALLOW_INTERNAL_ONLY", "ALLOW_INTERNAL_AND_GCLB"].
    maxInstanceCount : int, default is Undefined, optional
        The limit on the maximum number of function instances that may coexist at a
        given time.
    maxInstanceRequestConcurrency : int, default is Undefined, optional
        Sets the maximum number of concurrent requests that each instance can receive. Defaults to 1.
    minInstanceCount : int, default is Undefined, optional
        The limit on the minimum number of function instances that may coexist at a
        given time.
    secretEnvironmentVariables : [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfigSecretEnvironmentVariablesItems0], default is Undefined, optional
        Secret environment variables configuration.
    secretVolumes : [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfigSecretVolumesItems0], default is Undefined, optional
        Secret volumes configuration.
    service : str, default is Undefined, optional
        Name of the service associated with a Function.
    serviceAccountEmail : str, default is Undefined, optional
        The email of the service account for this function.
    timeoutSeconds : int, default is Undefined, optional
        The function execution timeout. Execution is considered failed and
        can be terminated if the function is not completed at the end of the
        timeout period. Defaults to 60 seconds.
    uri : str, default is Undefined, optional
        URI of the Service deployed.
    vpcConnector : str, default is Undefined, optional
        The Serverless VPC Access connector that this cloud function can connect to.
    vpcConnectorEgressSettings : str, default is Undefined, optional
        Available egress settings. Possible values: ["VPC_CONNECTOR_EGRESS_SETTINGS_UNSPECIFIED", "PRIVATE_RANGES_ONLY", "ALL_TRAFFIC"].
    """


    allTrafficOnLatestRevision?: bool

    availableCpu?: str

    availableMemory?: str

    environmentVariables?: {str:str}

    gcfUri?: str

    ingressSettings?: str

    maxInstanceCount?: int

    maxInstanceRequestConcurrency?: int

    minInstanceCount?: int

    secretEnvironmentVariables?: [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfigSecretEnvironmentVariablesItems0]

    secretVolumes?: [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfigSecretVolumesItems0]

    service?: str

    serviceAccountEmail?: str

    timeoutSeconds?: int

    uri?: str

    vpcConnector?: str

    vpcConnectorEgressSettings?: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfigSecretEnvironmentVariablesItems0:
    r"""
    cloudfunctions2 cnrm cloud google com v1alpha1 cloud functions2 function spec service config secret environment variables items0

    Attributes
    ----------
    key : str, default is Undefined, required
        Name of the environment variable.
    projectId : str, default is Undefined, required
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    secret : str, default is Undefined, required
        Name of the secret in secret manager (not the full resource name).
    version : str, default is Undefined, required
        Version of the secret (version number or the string 'latest'). It is recommended to use a numeric version for secret environment variables as any updates to the secret value is not reflected until new instances start.
    """


    key: str

    projectId: str

    secret: str

    version: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfigSecretVolumesItems0:
    r"""
    cloudfunctions2 cnrm cloud google com v1alpha1 cloud functions2 function spec service config secret volumes items0

    Attributes
    ----------
    mountPath : str, default is Undefined, required
        The path within the container to mount the secret volume. For example, setting the mountPath as /etc/secrets would mount the secret value files under the /etc/secrets directory. This directory will also be completely shadowed and unavailable to mount any other secrets. Recommended mount path: /etc/secrets.
    projectId : str, default is Undefined, required
        Project identifier (preferrably project number but can also be the project ID) of the project that contains the secret. If not set, it will be populated with the function's project assuming that the secret exists in the same project as of the function.
    secret : str, default is Undefined, required
        Name of the secret in secret manager (not the full resource name).
    versions : [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfigSecretVolumesItems0VersionsItems0], default is Undefined, optional
        List of secret versions to mount for this secret. If empty, the latest version of the secret will be made available in a file named after the secret under the mount point.'.
    """


    mountPath: str

    projectId: str

    secret: str

    versions?: [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfigSecretVolumesItems0VersionsItems0]


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionSpecServiceConfigSecretVolumesItems0VersionsItems0:
    r"""
    cloudfunctions2 cnrm cloud google com v1alpha1 cloud functions2 function spec service config secret volumes items0 versions items0

    Attributes
    ----------
    path : str, default is Undefined, required
        Relative path of the file under the mount path where the secret value for this version will be fetched and made available. For example, setting the mountPath as '/etc/secrets' and path as secret_foo would mount the secret value file at /etc/secrets/secret_foo.
    version : str, default is Undefined, required
        Version of the secret (version number or the string 'latest'). It is preferable to use latest version with secret volumes as secret value changes are reflected immediately.
    """


    path: str

    version: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionStatus:
    r"""
    cloudfunctions2 cnrm cloud google com v1alpha1 cloud functions2 function status

    Attributes
    ----------
    conditions : [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observation of the resource's current state.
    environment : str, default is Undefined, optional
        The environment the function is hosted on.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    state : str, default is Undefined, optional
        Describes the current state of the function.
    updateTime : str, default is Undefined, optional
        The last update timestamp of a Cloud Function.
    url : str, default is Undefined, optional
        Output only. The deployed url for the function.
    """


    conditions?: [Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionStatusConditionsItems0]

    environment?: str

    observedGeneration?: int

    state?: str

    updateTime?: str

    url?: str


schema Cloudfunctions2CnrmCloudGoogleComV1alpha1CloudFunctions2FunctionStatusConditionsItems0:
    r"""
    cloudfunctions2 cnrm cloud google com v1alpha1 cloud functions2 function status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


