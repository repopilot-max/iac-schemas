"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema KMSKeyHandle:
    r"""
    KMSKeyHandle is the Schema for the KMSKeyHandle API

    Attributes
    ----------
    apiVersion : str, default is "kms.cnrm.cloud.google.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "KMSKeyHandle", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleSpec, default is Undefined, required
        spec
    status : KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleStatus, default is Undefined, optional
        status
    """


    apiVersion: "kms.cnrm.cloud.google.com/v1alpha1" = "kms.cnrm.cloud.google.com/v1alpha1"

    kind: "KMSKeyHandle" = "KMSKeyHandle"

    metadata?: v1.ObjectMeta

    spec: KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleSpec

    status?: KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleStatus


schema KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleSpec:
    r"""
    KMSKeyHandleSpec defines the desired state of KMSKeyHandle

    Attributes
    ----------
    location : str, default is Undefined, optional
        Location name to create KeyHandle
    projectRef : KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleSpecProjectRef, default is Undefined, optional
        project ref
    resourceID : str, default is Undefined, optional
        The KMS Key Handle ID used for resource creation or acquisition. For creation: If specified, this value is used as the key handle ID. If not provided, a UUID will be generated and assigned as the key handle ID. For acquisition: This field must be provided to identify the key handle resource to acquire.
    resourceTypeSelector : str, default is Undefined, optional
        Indicates the resource type that the resulting [CryptoKey][] is meant to protect, e.g. `{SERVICE}.googleapis.com/{TYPE}`. See documentation for supported resource types https://cloud.google.com/kms/docs/autokey-overview#compatible-services.
    """


    location?: str

    projectRef?: KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleSpecProjectRef

    resourceID?: str

    resourceTypeSelector?: str


schema KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleSpecProjectRef:
    r"""
    Project hosting KMSKeyHandle

    Attributes
    ----------
    external : str, default is Undefined, optional
        The `projectID` field of a project, when not managed by Config Connector.
    kind : str, default is Undefined, optional
        The kind of the Project resource; optional but must be `Project` if provided.
    name : str, default is Undefined, optional
        The `name` field of a `Project` resource.
    namespace : str, default is Undefined, optional
        The `namespace` field of a `Project` resource.
    """


    external?: str

    kind?: str

    name?: str

    namespace?: str


schema KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleStatus:
    r"""
    KMSKeyHandleStatus defines the config connector machine state of KMSKeyHandle

    Attributes
    ----------
    conditions : [KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleStatusConditionsItems0], default is Undefined, optional
        Conditions represent the latest available observations of the object's current state.
    externalRef : str, default is Undefined, optional
        A unique specifier for the KMSKeyHandle resource in GCP.
    observedGeneration : int, default is Undefined, optional
        ObservedGeneration is the generation of the resource that was most recently observed by the Config Connector controller. If this is equal to metadata.generation, then that means that the current reported status reflects the most recent desired state of the resource.
    observedState : KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleStatusObservedState, default is Undefined, optional
        observed state
    """


    conditions?: [KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleStatusConditionsItems0]

    externalRef?: str

    observedGeneration?: int

    observedState?: KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleStatusObservedState


schema KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleStatusConditionsItems0:
    r"""
    kms cnrm cloud google com v1alpha1 k m s key handle status conditions items0

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    message : str, default is Undefined, optional
        Human-readable message indicating details about last transition.
    reason : str, default is Undefined, optional
        Unique, one-word, CamelCase reason for the condition's last transition.
    status : str, default is Undefined, optional
        Status is the status of the condition. Can be True, False, Unknown.
    $type : str, default is Undefined, optional
        Type is the type of the condition.
    """


    lastTransitionTime?: str

    message?: str

    reason?: str

    status?: str

    $type?: str


schema KmsCnrmCloudGoogleComV1alpha1KMSKeyHandleStatusObservedState:
    r"""
    ObservedState is the state of the resource as most recently observed in GCP.

    Attributes
    ----------
    kmsKey : str, default is Undefined, optional
        kms key
    """


    kmsKey?: str


