"""
This file was generated by the KCL auto-gen tool. DO NOT EDIT.
Editing this file might prove futile when you re-run the KCL auto-gen generate command.
"""
import k8s.apimachinery.pkg.apis.meta.v1


schema DatadogMonitor:
    r"""
    DatadogMonitor allows to define and manage Monitors from your Kubernetes Cluster

    Attributes
    ----------
    apiVersion : str, default is "datadoghq.com/v1alpha1", required
        APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
    kind : str, default is "DatadogMonitor", required
        Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
    metadata : v1.ObjectMeta, default is Undefined, optional
        metadata
    spec : DatadoghqComV1alpha1DatadogMonitorSpec, default is Undefined, optional
        spec
    status : DatadoghqComV1alpha1DatadogMonitorStatus, default is Undefined, optional
        status
    """


    apiVersion: "datadoghq.com/v1alpha1" = "datadoghq.com/v1alpha1"

    kind: "DatadogMonitor" = "DatadogMonitor"

    metadata?: v1.ObjectMeta

    spec?: DatadoghqComV1alpha1DatadogMonitorSpec

    status?: DatadoghqComV1alpha1DatadogMonitorStatus


schema DatadoghqComV1alpha1DatadogMonitorSpec:
    r"""
    DatadogMonitorSpec defines the desired state of DatadogMonitor

    Attributes
    ----------
    controllerOptions : DatadoghqComV1alpha1DatadogMonitorSpecControllerOptions, default is Undefined, optional
        controller options
    message : str, default is Undefined, optional
        Message is a message to include with notifications for this monitor
    name : str, default is Undefined, optional
        Name is the monitor name
    options : DatadoghqComV1alpha1DatadogMonitorSpecOptions, default is Undefined, optional
        options
    priority : int, default is Undefined, optional
        Priority is an integer from 1 (high) to 5 (low) indicating alert severity
    query : str, default is Undefined, optional
        Query is the Datadog monitor query
    restrictedRoles : [str], default is Undefined, optional
        RestrictedRoles is a list of unique role identifiers to define which roles are allowed to edit the monitor.
        `restricted_roles` is the successor of `locked`. For more information about `locked` and `restricted_roles`,
        see the [monitor options docs](https://docs.datadoghq.com/monitors/guide/monitor_api_options/#permissions-options).
    tags : [str], default is Undefined, optional
        Tags is the monitor tags associated with your monitor
    $type : str, default is Undefined, optional
        Type is the monitor type
    """


    controllerOptions?: DatadoghqComV1alpha1DatadogMonitorSpecControllerOptions

    message?: str

    name?: str

    options?: DatadoghqComV1alpha1DatadogMonitorSpecOptions

    priority?: int

    query?: str

    restrictedRoles?: [str]

    tags?: [str]

    $type?: str


schema DatadoghqComV1alpha1DatadogMonitorSpecControllerOptions:
    r"""
    ControllerOptions are the optional parameters in the DatadogMonitor controller

    Attributes
    ----------
    disableRequiredTags : bool, default is Undefined, optional
        DisableRequiredTags disables the automatic addition of required tags to monitors.
    """


    disableRequiredTags?: bool


schema DatadoghqComV1alpha1DatadogMonitorSpecOptions:
    r"""
    Options are the optional parameters associated with your monitor

    Attributes
    ----------
    enableLogsSample : bool, default is Undefined, optional
        A Boolean indicating whether to send a log sample when the log monitor triggers.
    escalationMessage : str, default is Undefined, optional
        A message to include with a re-notification.
    evaluationDelay : int, default is Undefined, optional
        Time (in seconds) to delay evaluation, as a non-negative integer. For example, if the value is set to 300 (5min),
        the timeframe is set to last_5m and the time is 7:00, the monitor evaluates data from 6:50 to 6:55.
        This is useful for AWS CloudWatch and other backfilled metrics to ensure the monitor always has data during evaluation.
    groupbySimpleMonitor : bool, default is Undefined, optional
        A Boolean indicating whether the log alert monitor triggers a single alert or multiple alerts when any group breaches a threshold.
    includeTags : bool, default is Undefined, optional
        A Boolean indicating whether notifications from this monitor automatically inserts its triggering tags into the title.
    locked : bool, default is Undefined, optional
        DEPRECATED: Whether or not the monitor is locked (only editable by creator and admins). Use `restricted_roles` instead.
    newGroupDelay : int, default is Undefined, optional
        Time (in seconds) to allow a host to boot and applications to fully start before starting the evaluation of
        monitor results. Should be a non negative integer.
    noDataTimeframe : int, default is Undefined, optional
        The number of minutes before a monitor notifies after data stops reporting. Datadog recommends at least 2x the
        monitor timeframe for metric alerts or 2 minutes for service checks. If omitted, 2x the evaluation timeframe
        is used for metric alerts, and 24 hours is used for service checks.
    notificationPresetName : str, default is Undefined, optional
        An enum that toggles the display of additional content sent in the monitor notification.
    notifyAudit : bool, default is Undefined, optional
        A Boolean indicating whether tagged users are notified on changes to this monitor.
    notifyBy : [str], default is Undefined, optional
        A string indicating the granularity a monitor alerts on. Only available for monitors with groupings.
        For instance, a monitor grouped by cluster, namespace, and pod can be configured to only notify on each new
        cluster violating the alert conditions by setting notify_by to ["cluster"]. Tags mentioned in notify_by must
        be a subset of the grouping tags in the query. For example, a query grouped by cluster and namespace cannot
        notify on region. Setting notify_by to [*] configures the monitor to notify as a simple-alert.
    notifyNoData : bool, default is Undefined, optional
        A Boolean indicating whether this monitor notifies when data stops reporting.
    onMissingData : str, default is Undefined, optional
        An enum that controls how groups or monitors are treated if an evaluation does not return data points.
        The default option results in different behavior depending on the monitor query type.
        For monitors using Count queries, an empty monitor evaluation is treated as 0 and is compared to the threshold conditions.
        For monitors using any query type other than Count, for example Gauge, Measure, or Rate, the monitor shows the last known status.
        This option is only available for APM Trace Analytics, Audit Trail, CI, Error Tracking, Event, Logs, and RUM monitors
    renotifyInterval : int, default is Undefined, optional
        The number of minutes after the last notification before a monitor re-notifies on the current status.
        It only re-notifies if it’s not resolved.
    renotifyOccurrences : int, default is Undefined, optional
        The number of times re-notification messages should be sent on the current status at the provided re-notification interval.
    renotifyStatuses : [str], default is Undefined, optional
        The types of statuses for which re-notification messages should be sent. Valid values are alert, warn, no data.
    requireFullWindow : bool, default is Undefined, optional
        A Boolean indicating whether this monitor needs a full window of data before it’s evaluated. We highly
        recommend you set this to false for sparse metrics, otherwise some evaluations are skipped. Default is false.
    thresholdWindows : DatadoghqComV1alpha1DatadogMonitorSpecOptionsThresholdWindows, default is Undefined, optional
        threshold windows
    thresholds : DatadoghqComV1alpha1DatadogMonitorSpecOptionsThresholds, default is Undefined, optional
        thresholds
    timeoutH : int, default is Undefined, optional
        The number of hours of the monitor not reporting data before it automatically resolves from a triggered state.
    """


    enableLogsSample?: bool

    escalationMessage?: str

    evaluationDelay?: int

    groupbySimpleMonitor?: bool

    includeTags?: bool

    locked?: bool

    newGroupDelay?: int

    noDataTimeframe?: int

    notificationPresetName?: str

    notifyAudit?: bool

    notifyBy?: [str]

    notifyNoData?: bool

    onMissingData?: str

    renotifyInterval?: int

    renotifyOccurrences?: int

    renotifyStatuses?: [str]

    requireFullWindow?: bool

    thresholdWindows?: DatadoghqComV1alpha1DatadogMonitorSpecOptionsThresholdWindows

    thresholds?: DatadoghqComV1alpha1DatadogMonitorSpecOptionsThresholds

    timeoutH?: int


schema DatadoghqComV1alpha1DatadogMonitorSpecOptionsThresholdWindows:
    r"""
    A struct of the alerting time window options.

    Attributes
    ----------
    recoveryWindow : str, default is Undefined, optional
        Describes how long an anomalous metric must be normal before the alert recovers.
    triggerWindow : str, default is Undefined, optional
        Describes how long a metric must be anomalous before an alert triggers.
    """


    recoveryWindow?: str

    triggerWindow?: str


schema DatadoghqComV1alpha1DatadogMonitorSpecOptionsThresholds:
    r"""
    A struct of the different monitor threshold values.

    Attributes
    ----------
    critical : str, default is Undefined, optional
        The monitor CRITICAL threshold.
    criticalRecovery : str, default is Undefined, optional
        The monitor CRITICAL recovery threshold.
    ok : str, default is Undefined, optional
        The monitor OK threshold.
    unknown : str, default is Undefined, optional
        The monitor UNKNOWN threshold.
    warning : str, default is Undefined, optional
        The monitor WARNING threshold.
    warningRecovery : str, default is Undefined, optional
        The monitor WARNING recovery threshold.
    """


    critical?: str

    criticalRecovery?: str

    ok?: str

    unknown?: str

    warning?: str

    warningRecovery?: str


schema DatadoghqComV1alpha1DatadogMonitorStatus:
    r"""
    DatadogMonitorStatus defines the observed state of DatadogMonitor

    Attributes
    ----------
    conditions : [DatadoghqComV1alpha1DatadogMonitorStatusConditionsItems0], default is Undefined, optional
        Conditions Represents the latest available observations of a DatadogMonitor's current state.
    created : str, default is Undefined, optional
        Created is the time the monitor was created
    creator : str, default is Undefined, optional
        Creator is the identify of the monitor creator
    currentHash : str, default is Undefined, optional
        CurrentHash tracks the hash of the current DatadogMonitorSpec to know
        if the Spec has changed and needs an update
    downtimeStatus : DatadoghqComV1alpha1DatadogMonitorStatusDowntimeStatus, default is Undefined, optional
        downtime status
    id : int, default is Undefined, optional
        ID is the monitor ID generated in Datadog
    monitorLastForceSyncTime : str, default is Undefined, optional
        MonitorLastForceSyncTime is the last time the API monitor was last force synced with the DatadogMonitor resource
    monitorState : str, default is Undefined, optional
        MonitorState is the overall state of monitor
    monitorStateLastTransitionTime : str, default is Undefined, optional
        MonitorStateLastTransitionTime is the last time the monitor state changed
    monitorStateLastUpdateTime : str, default is Undefined, optional
        MonitorStateLastUpdateTime is the last time the monitor state updated
    primary : bool, default is Undefined, optional
        Primary defines whether the monitor is managed by the Kubernetes custom
        resource (true) or outside Kubernetes (false)
    syncStatus : str, default is Undefined, optional
        MonitorStateSyncStatus shows the health of syncing the monitor state to Datadog
    triggeredState : [DatadoghqComV1alpha1DatadogMonitorStatusTriggeredStateItems0], default is Undefined, optional
        TriggeredState only includes details for monitor groups that are triggering
    """


    conditions?: [DatadoghqComV1alpha1DatadogMonitorStatusConditionsItems0]

    created?: str

    creator?: str

    currentHash?: str

    downtimeStatus?: DatadoghqComV1alpha1DatadogMonitorStatusDowntimeStatus

    id?: int

    monitorLastForceSyncTime?: str

    monitorState?: str

    monitorStateLastTransitionTime?: str

    monitorStateLastUpdateTime?: str

    primary?: bool

    syncStatus?: str

    triggeredState?: [DatadoghqComV1alpha1DatadogMonitorStatusTriggeredStateItems0]


schema DatadoghqComV1alpha1DatadogMonitorStatusConditionsItems0:
    r"""
    DatadogMonitorCondition describes the current state of a DatadogMonitor

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        Last time the condition transitioned from one status to another.
    lastUpdateTime : str, default is Undefined, optional
        Last time the condition was updated.
    message : str, default is Undefined, optional
        A human readable message indicating details about the transition.
    reason : str, default is Undefined, optional
        The reason for the condition's last transition.
    status : str, default is Undefined, required
        Status of the condition, one of True, False, Unknown.
    $type : str, default is Undefined, required
        Type of DatadogMonitor condition
    """


    lastTransitionTime?: str

    lastUpdateTime?: str

    message?: str

    reason?: str

    status: str

    $type: str


schema DatadoghqComV1alpha1DatadogMonitorStatusDowntimeStatus:
    r"""
    DowntimeStatus defines whether the monitor is downtimed

    Attributes
    ----------
    downtimeId : int, default is Undefined, optional
        downtime Id
    isDowntimed : bool, default is Undefined, optional
        is downtimed
    """


    downtimeId?: int

    isDowntimed?: bool


schema DatadoghqComV1alpha1DatadogMonitorStatusTriggeredStateItems0:
    r"""
    DatadogMonitorTriggeredState represents the details of a triggering DatadogMonitor
    The DatadogMonitor is triggering if one of its groups is in Alert, Warn, or No Data

    Attributes
    ----------
    lastTransitionTime : str, default is Undefined, optional
        last transition time
    monitorGroup : str, default is Undefined, required
        MonitorGroup is the name of the triggering group
    state : str, default is Undefined, optional
        DatadogMonitorState represents the overall DatadogMonitor state
    """


    lastTransitionTime?: str

    monitorGroup: str

    state?: str


